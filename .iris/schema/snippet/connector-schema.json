{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irisjigsawpiececonnector.json",
    "anyOf": [
        {
            "description": "Represents a structure tile",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name\nThe name of this connector, such as entry, or table node. This is a name for organization. Other connectors can specifically use targetName to target a specific connector type. Multiple connectors can use the same name.\n   \nText\n\n    \n* Default Value is "
                },
                "targetName": {
                    "type": "string",
                    "description": "targetName\nTarget a piece's connector with the specified name. For any piece's connector, define * or don't define it.\n   \nText\n\n    \n* Default Value is *"
                },
                "rotateConnector": {
                    "type": "boolean",
                    "description": "rotateConnector\nRotates the placed piece on this connector. If rotation is enabled, this connector will effectivley rotate, if this connector is facing the Z direction, then the connected piece would rotate in the X,Y direction in 90 degree segments.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "innerConnector": {
                    "type": "boolean",
                    "description": "innerConnector\nIf set to true, this connector is allowed to place pieces inside of it's own piece. For example if you are adding a light post, or house on top of a path piece, you would set this to true to allow the piece to collide with the path bounding box.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "pools": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzjigsaw-pools"},
                    "description": "pools\nPick piece pools to place onto this connector\n   \nList<Jigsaw Pool>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Jigsaw Pool (use ctrl+space for auto complete!)"
                },
                "spawnEntity": {
                    "type": "string",
                    "$ref": "#/definitions/erzentities",
                    "description": "spawnEntity\nPick an entity to spawn on this connector\n   \nIris Entity\n\nMust be a valid entities (use ctrl+space for auto complete!)"
                },
                "keepEntity": {
                    "type": "boolean",
                    "description": "keepEntity\nStop the entity from despawning\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "entityCount": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 50,
                    "description": "entityCount\nThe amount of entities to spawn (must be a whole number)\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1\n* Maximum allowed is 50"
                },
                "position": {
                    "anyOf": [
                        {
                            "!required": true,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisposition",
                            "description": "position\nThe relative position this connector is located at for connecting to other pieces\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-position-3d",
                            "description": "position\nThe relative position this connector is located at for connecting to other pieces\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "position\nThe relative position this connector is located at for connecting to other pieces\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "entityPosition": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisposition",
                            "description": "entityPosition\nThe relative position to this connector to place entities at\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-position-3d",
                            "description": "entityPosition\nThe relative position to this connector to place entities at\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "entityPosition\nThe relative position to this connector to place entities at\n   \nPosition (Object)\nRepresents a position\n    \nYou can instead specify \"snippet/position-3d/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "direction": {
                    "type": "string",
                    "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisdirection",
                    "description": "direction\nThe direction this connector is facing. If the direction is set to UP, then pieces will place ABOVE the connector.\n   \nDirection\nA direction object\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Direction (use ctrl+space for auto complete!)"
                }
            }
        },
        {"type": "string"}
    ],
    "definitions": {
        "enum-snippet-position-3d": {"enum": []},
        "erzjigsaw-pools": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-irisdirection": {"oneOf": [
            {
                "const": "UP_POSITIVE_Y",
                "description": "0, 1, 0"
            },
            {
                "const": "DOWN_NEGATIVE_Y",
                "description": "0, -1, 0"
            },
            {
                "const": "NORTH_NEGATIVE_Z",
                "description": "0, 0, -1"
            },
            {
                "const": "SOUTH_POSITIVE_Z",
                "description": "0, 0, 1"
            },
            {
                "const": "EAST_POSITIVE_X",
                "description": "1, 0, 0"
            },
            {
                "const": "WEST_NEGATIVE_X",
                "description": "-1, 0, 0"
            }
        ]},
        "erzentities": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisposition": {"anyOf": [
            {
                "description": "Represents a position",
                "type": "object",
                "properties": {
                    "x": {
                        "type": "integer",
                        "description": "x\nThe x position\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "y": {
                        "type": "integer",
                        "description": "y\nThe y position\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "z": {
                        "type": "integer",
                        "description": "z\nThe z position\n   \nInteger\n\n    \n* Default Value is 0"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
