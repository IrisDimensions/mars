{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irisentity.json",
    "description": "Represents an iris entity.",
    "type": "object",
    "properties": {
        "preprocessors": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzscripts"},
            "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
        },
        "type": {
            "type": "string",
            "$ref": "#/definitions/enum-org-bukkit-entity-entitytype",
            "description": "type\nThe type of entity to spawn. To spawn a mythic mob, set this type to unknown and define mythic type.\n   \nEntityType\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid EntityType (use ctrl+space for auto complete!)"
        },
        "customName": {
            "type": "string",
            "description": "customName\nThe custom name of this entity\n   \nText\n\n    \n* Default Value is "
        },
        "customNameVisible": {
            "type": "boolean",
            "description": "customNameVisible\nShould the name on this entity be visible even if you arent looking at it.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "aware": {
            "type": "boolean",
            "description": "aware\nIf this entity type is a mob, should it be aware of it's surroundings & interact with the world.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "ai": {
            "type": "boolean",
            "description": "ai\nIf this entity type is a creature, should it have ai goals.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "glowing": {
            "type": "boolean",
            "description": "glowing\nShould this entity be glowing\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "gravity": {
            "type": "boolean",
            "description": "gravity\nShould gravity apply to this entity\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "invulnerable": {
            "type": "boolean",
            "description": "invulnerable\nWhen an entity is invulnerable it can only be damaged by players increative mode.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "silent": {
            "type": "boolean",
            "description": "silent\nWhen an entity is silent it will not produce any sound.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "pickupItems": {
            "type": "boolean",
            "description": "pickupItems\nShould this entity be allowed to pickup items\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "removable": {
            "type": "boolean",
            "description": "removable\nShould this entity be removed when far away\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "helmet": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "chestplate": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "boots": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "leggings": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "mainHand": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "offHand": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                    "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot",
                    "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "passengers": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisentity"},
            "description": "passengers\nMake other entities ride this entity\n   \nList of Entitys (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "attributes": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisattributemodifier"},
            "description": "attributes\nAttribute modifiers for this entity\n   \nList of AttributeModifiers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "loot": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislootreference",
                    "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot-registry",
                    "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "leashHolder": {
            "type": "object",
            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisentity",
            "description": "leashHolder\nIf specified, this entity will be leashed by this entity. I.e. THIS ENTITY Leashed by SPECIFIED. This has no effect on EnderDragons, Withers, Players, or Bats.Non-living entities excluding leashes will not persist as leashholders.\n   \nEntity (Object)\nRepresents an iris entity."
        },
        "spawnEffect": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriseffect",
                    "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-effect",
                    "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
                }
            ],
            "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
        },
        "spawnEffectRiseOutOfGround": {
            "type": "boolean",
            "description": "spawnEffectRiseOutOfGround\nSimply moves the entity from below the surface slowly out of the ground as a spawn-in effect\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "pandaMainGene": {
            "type": "string",
            "$ref": "#/definitions/enum-org-bukkit-entity-panda-gene",
            "description": "pandaMainGene\nThe main gene for a panda if the entity type is a panda\n   \nGene\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Gene (use ctrl+space for auto complete!)"
        },
        "pandaHiddenGene": {
            "type": "string",
            "$ref": "#/definitions/enum-org-bukkit-entity-panda-gene",
            "description": "pandaHiddenGene\nThe hidden gene for a panda if the entity type is a panda\n   \nGene\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Gene (use ctrl+space for auto complete!)"
        },
        "baby": {
            "type": "boolean",
            "description": "baby\nThe this entity is ageable, set it's baby status\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "keepEntity": {
            "type": "boolean",
            "description": "keepEntity\nIf the entity should never be culled. Useful for Jigsaws\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "surface": {
            "type": "string",
            "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irissurface",
            "description": "surface\nThe surface type to spawn this mob on\n   \nSurface\nThe type of surface entities should spawn on\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Surface (use ctrl+space for auto complete!)"
        },
        "specialType": {
            "type": "string",
            "$ref": "#/definitions/enum-reg-specialentity",
            "description": "specialType\nCreate a mob from another plugin, such as Mythic Mobs. Should be in the format of a namespace of PluginName:MobName\n   \nMythic Mob Type\n\n    \n* Default Value is \nMust be a valid Mythic Mob Type (use ctrl+space for auto complete!) Define mythic mobs with the mythic mobs plugin configuration files."
        },
        "spawnerScript": {
            "type": "string",
            "$ref": "#/definitions/erzscripts",
            "description": "spawnerScript\nSet the entity type to UNKNOWN, then define a script here which ends with the entity variable (the result). You can use Iris.getLocation() to find the target location. You can spawn any entity this way.\n   \nIris Script\n\n    \n* Default Value is \nMust be a valid scripts (use ctrl+space for auto complete!)"
        },
        "postSpawnScripts": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzscripts"},
            "description": "postSpawnScripts\nSet the entity type to UNKNOWN, then define a script here. You can use Iris.getLocation() to find the target location. You can spawn any entity this way.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
        },
        "rawCommands": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommand"},
            "description": "rawCommands\nRun raw commands when this entity is spawned. Use {x}, {y}, and {z} for location. /summon pig {x} {y} {z}\n   \nList of Commands (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        }
    },
    "definitions": {
        "enum-org-bukkit-attribute-attribute": {"enum": [
            "GENERIC_MAX_HEALTH",
            "GENERIC_FOLLOW_RANGE",
            "GENERIC_KNOCKBACK_RESISTANCE",
            "GENERIC_MOVEMENT_SPEED",
            "GENERIC_FLYING_SPEED",
            "GENERIC_ATTACK_DAMAGE",
            "GENERIC_ATTACK_KNOCKBACK",
            "GENERIC_ATTACK_SPEED",
            "GENERIC_ARMOR",
            "GENERIC_ARMOR_TOUGHNESS",
            "GENERIC_LUCK",
            "HORSE_JUMP_STRENGTH",
            "ZOMBIE_SPAWN_REINFORCEMENTS"
        ]},
        "obj-com-volmit-iris-engine-object-irisloot": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "slotTypes": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-inventoryslottype",
                        "description": "slotTypes\nThe target inventory slot types to fill this loot with\n   \nInventorySlotType\nAn inventory slot type is used to represent a type of slot for items to fit into in any given inventory.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InventorySlotType (use ctrl+space for auto complete!)"
                    },
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nThe sub rarity of this loot. Calculated after this loot table has been picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "minAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minAmount\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxAmount\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "displayName": {
                        "type": "string",
                        "minLength": 1,
                        "description": "displayName\nThe display name of this item\n   \nText\n\n* Minimum Length allowed is 1"
                    },
                    "minDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "minDurability\nMinimum durability percent\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "maxDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "maxDurability\nMaximum durability percent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "customModel": {
                        "type": "integer",
                        "description": "customModel\nDefine a custom model identifier 1.14+ only\n   \nInteger\n"
                    },
                    "unbreakable": {
                        "type": "boolean",
                        "description": "unbreakable\nSet this to true to prevent it from being broken\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "itemFlags": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/enum-org-bukkit-inventory-itemflag"},
                        "description": "itemFlags\nThe item flags to add\n   \nList of ItemFlags\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid ItemFlag (use ctrl+space for auto complete!)"
                    },
                    "enchantments": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisenchantment"},
                        "description": "enchantments\nApply enchantments to this item\n   \nList of Enchantments (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "attributes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisattributemodifier"},
                        "description": "attributes\nApply attribute modifiers to this item\n   \nList of AttributeModifiers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "lore": {
                        "type": "array",
                        "minItems": 1,
                        "description": "lore\nAdd lore to this item\n   \nList of Text\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "type": {
                        "type": "string",
                        "$ref": "#/definitions/enum-item-type",
                        "description": "type\nThis is the item or block type. Does not accept minecraft:*, only materials such as DIAMOND_SWORD or DIRT. The exception are modded materials, as they require a namespace.\n   \nItem Type\n\n    \n* Default Value is \nMust be a valid Item Type (use ctrl+space for auto complete!)"
                    },
                    "dyeColor": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-dyecolor",
                        "description": "dyeColor\nThe dye color\n   \nDyeColor\n\nMust be a valid DyeColor (use ctrl+space for auto complete!)"
                    },
                    "leatherColor": {
                        "type": "string",
                        "description": "leatherColor\nThe leather armor color\n   \nText\n"
                    },
                    "customNbt": {
                        "type": "object",
                        "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                        "description": "customNbt\nDefines a custom NBT Tag for the item.\n   \nKMap (Object)\n"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriseffect": {"anyOf": [
            {
                "description": "An iris effect",
                "type": "object",
                "properties": {
                    "potionEffect": {
                        "type": "string",
                        "description": "potionEffect\nThe potion effect to apply in this area\n   \nText\n\n    \n* Default Value is "
                    },
                    "particleEffect": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-particle",
                        "description": "particleEffect\nThe particle effect to apply in the area\n   \nParticle\n\nMust be a valid Particle (use ctrl+space for auto complete!)"
                    },
                    "particleOffset": {
                        "type": "integer",
                        "minimum": -32,
                        "maximum": 32,
                        "description": "particleOffset\nRandomly offset from the surface to this surface+value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -32\n* Maximum allowed is 32"
                    },
                    "particleAltX": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltX\nThe alt x, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "particleAltY": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltY\nThe alt y, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "particleAltZ": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "particleAltZ\nThe alt z, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "randomAltX": {
                        "type": "boolean",
                        "description": "randomAltX\nRandomize the altX by -altX to altX\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "randomAltY": {
                        "type": "boolean",
                        "description": "randomAltY\nRandomize the altY by -altY to altY\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "randomAltZ": {
                        "type": "boolean",
                        "description": "randomAltZ\nRandomize the altZ by -altZ to altZ\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "sound": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-sound",
                        "description": "sound\nThe sound to play\n   \nSound\n\nMust be a valid Sound (use ctrl+space for auto complete!)"
                    },
                    "soundDistance": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 512,
                        "description": "soundDistance\nThe max distance from the player the sound will play\n   \nInteger\n\n    \n* Default Value is 12\n* Minimum allowed is 0\n* Maximum allowed is 512"
                    },
                    "minPitch": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 1.99,
                        "description": "minPitch\nThe minimum sound pitch\n   \nNumber\n\n    \n* Default Value is 0.5\n* Minimum allowed is 0.01\n* Maximum allowed is 1.99"
                    },
                    "maxPitch": {
                        "type": "number",
                        "minimum": 0.01,
                        "maximum": 1.99,
                        "description": "maxPitch\nThe max sound pitch\n   \nNumber\n\n    \n* Default Value is 1.5\n* Minimum allowed is 0.01\n* Maximum allowed is 1.99"
                    },
                    "volume": {
                        "type": "number",
                        "minimum": 0.001,
                        "maximum": 512,
                        "description": "volume\nThe sound volume.\n   \nNumber\n\n    \n* Default Value is 1.5\n* Minimum allowed is 0.001\n* Maximum allowed is 512.0"
                    },
                    "particleCount": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 512,
                        "description": "particleCount\nThe particle count. Try setting to zero for using the alt xyz to a motion value instead of an offset\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 512"
                    },
                    "particleDistance": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 64,
                        "description": "particleDistance\nHow far away from the player particles can play\n   \nInteger\n\n    \n* Default Value is 20\n* Minimum allowed is 0\n* Maximum allowed is 64"
                    },
                    "particleDistanceWidth": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 128,
                        "description": "particleDistanceWidth\nHow wide the particles can play (player's view left and right) RADIUS\n   \nInteger\n\n    \n* Default Value is 24\n* Minimum allowed is 0\n* Maximum allowed is 128"
                    },
                    "extra": {
                        "type": "number",
                        "description": "extra\nAn extra value for some particles... Which bukkit doesn't even document.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "potionStrength": {
                        "type": "integer",
                        "minimum": -1,
                        "maximum": 1024,
                        "description": "potionStrength\nThe Potion Strength or -1 to disable\n   \nInteger\n\n    \n* Default Value is -1\n* Minimum allowed is -1\n* Maximum allowed is 1024"
                    },
                    "potionTicksMax": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "potionTicksMax\nThe max time the potion will last for\n   \nInteger\n\n    \n* Default Value is 155\n* Minimum allowed is 1"
                    },
                    "potionTicksMin": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "potionTicksMin\nThe min time the potion will last for\n   \nInteger\n\n    \n* Default Value is 75\n* Minimum allowed is 1"
                    },
                    "interval": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "interval\nThe effect interval in milliseconds\n   \nInteger\n\n    \n* Default Value is 150\n* Minimum allowed is 0"
                    },
                    "particleAway": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 16,
                        "description": "particleAway\nThe effect distance start away\n   \nInteger\n\n    \n* Default Value is 5\n* Minimum allowed is 0\n* Maximum allowed is 16"
                    },
                    "chance": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "chance\nThe chance is 1 in CHANCE per interval\n   \nInteger\n\n    \n* Default Value is 50\n* Minimum allowed is 1"
                    },
                    "commandRegistry": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommandregistry",
                                "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-command-registry",
                                "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "commandRegistry\nRun commands, with configurable location parameters\n   \nCommandRegistry (Object)\nRepresents a casting location for a command\n    \nYou can instead specify \"snippet/command-registry/some-name.json\" to use a snippet file instead of specifying it here."
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irissurface": {"oneOf": [
            {
                "const": "LAND",
                "description": "Land surfaces"
            },
            {
                "const": "ANIMAL",
                "description": "Any surfaces animals can spawn on, such as dirt, grass and podzol"
            },
            {
                "const": "WATER",
                "description": "Within the water"
            },
            {
                "const": "OVERWORLD",
                "description": "On land or on water"
            },
            {
                "const": "LAVA",
                "description": "Within lava"
            }
        ]},
        "enum-snippet-time-block": {"enum": []},
        "obj-com-volmit-iris-engine-object-iristimeblock": {"anyOf": [
            {
                "description": "Represents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.",
                "type": "object",
                "properties": {
                    "startHour": {
                        "type": "number",
                        "description": "startHour\nThe beginning hour. Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "endHour": {
                        "type": "number",
                        "description": "endHour\nThe ending hour. Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n   \nNumber\n\n    \n* Default Value is 0.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscommandregistry": {"anyOf": [
            {
                "description": "Represents a casting location for a command",
                "type": "object",
                "properties": {
                    "rawCommands": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommand"},
                        "description": "rawCommands\nRun commands, at the exact location of the player\n   \nList of Commands (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "commandOffsetX": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetX\nThe alt x, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandOffsetY": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetY\nThe alt y, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandOffsetZ": {
                        "type": "number",
                        "minimum": -8,
                        "maximum": 8,
                        "description": "commandOffsetZ\nThe alt z, usually represents motion if the particle count is zero. Otherwise an offset.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is -8.0\n* Maximum allowed is 8.0"
                    },
                    "commandRandomAltX": {
                        "type": "boolean",
                        "description": "commandRandomAltX\nRandomize the altX from -altX to altX\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandRandomAltY": {
                        "type": "boolean",
                        "description": "commandRandomAltY\nRandomize the altY from -altY to altY\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandRandomAltZ": {
                        "type": "boolean",
                        "description": "commandRandomAltZ\nRandomize the altZ from -altZ to altZ\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "commandAllRandomLocations": {
                        "type": "boolean",
                        "description": "commandAllRandomLocations\nRandomize location for all separate commands (true), or run all on the same location (false)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-item-type": {"enum": [
            "air",
            "stone",
            "granite",
            "polished_granite",
            "diorite",
            "polished_diorite",
            "andesite",
            "polished_andesite",
            "deepslate",
            "cobbled_deepslate",
            "polished_deepslate",
            "calcite",
            "tuff",
            "dripstone_block",
            "grass_block",
            "dirt",
            "coarse_dirt",
            "podzol",
            "rooted_dirt",
            "mud",
            "crimson_nylium",
            "warped_nylium",
            "cobblestone",
            "oak_planks",
            "spruce_planks",
            "birch_planks",
            "jungle_planks",
            "acacia_planks",
            "dark_oak_planks",
            "mangrove_planks",
            "crimson_planks",
            "warped_planks",
            "oak_sapling",
            "spruce_sapling",
            "birch_sapling",
            "jungle_sapling",
            "acacia_sapling",
            "dark_oak_sapling",
            "mangrove_propagule",
            "bedrock",
            "sand",
            "red_sand",
            "gravel",
            "coal_ore",
            "deepslate_coal_ore",
            "iron_ore",
            "deepslate_iron_ore",
            "copper_ore",
            "deepslate_copper_ore",
            "gold_ore",
            "deepslate_gold_ore",
            "redstone_ore",
            "deepslate_redstone_ore",
            "emerald_ore",
            "deepslate_emerald_ore",
            "lapis_ore",
            "deepslate_lapis_ore",
            "diamond_ore",
            "deepslate_diamond_ore",
            "nether_gold_ore",
            "nether_quartz_ore",
            "ancient_debris",
            "coal_block",
            "raw_iron_block",
            "raw_copper_block",
            "raw_gold_block",
            "amethyst_block",
            "budding_amethyst",
            "iron_block",
            "copper_block",
            "gold_block",
            "diamond_block",
            "netherite_block",
            "exposed_copper",
            "weathered_copper",
            "oxidized_copper",
            "cut_copper",
            "exposed_cut_copper",
            "weathered_cut_copper",
            "oxidized_cut_copper",
            "cut_copper_stairs",
            "exposed_cut_copper_stairs",
            "weathered_cut_copper_stairs",
            "oxidized_cut_copper_stairs",
            "cut_copper_slab",
            "exposed_cut_copper_slab",
            "weathered_cut_copper_slab",
            "oxidized_cut_copper_slab",
            "waxed_copper_block",
            "waxed_exposed_copper",
            "waxed_weathered_copper",
            "waxed_oxidized_copper",
            "waxed_cut_copper",
            "waxed_exposed_cut_copper",
            "waxed_weathered_cut_copper",
            "waxed_oxidized_cut_copper",
            "waxed_cut_copper_stairs",
            "waxed_exposed_cut_copper_stairs",
            "waxed_weathered_cut_copper_stairs",
            "waxed_oxidized_cut_copper_stairs",
            "waxed_cut_copper_slab",
            "waxed_exposed_cut_copper_slab",
            "waxed_weathered_cut_copper_slab",
            "waxed_oxidized_cut_copper_slab",
            "oak_log",
            "spruce_log",
            "birch_log",
            "jungle_log",
            "acacia_log",
            "dark_oak_log",
            "mangrove_log",
            "mangrove_roots",
            "muddy_mangrove_roots",
            "crimson_stem",
            "warped_stem",
            "stripped_oak_log",
            "stripped_spruce_log",
            "stripped_birch_log",
            "stripped_jungle_log",
            "stripped_acacia_log",
            "stripped_dark_oak_log",
            "stripped_mangrove_log",
            "stripped_crimson_stem",
            "stripped_warped_stem",
            "stripped_oak_wood",
            "stripped_spruce_wood",
            "stripped_birch_wood",
            "stripped_jungle_wood",
            "stripped_acacia_wood",
            "stripped_dark_oak_wood",
            "stripped_mangrove_wood",
            "stripped_crimson_hyphae",
            "stripped_warped_hyphae",
            "oak_wood",
            "spruce_wood",
            "birch_wood",
            "jungle_wood",
            "acacia_wood",
            "dark_oak_wood",
            "mangrove_wood",
            "crimson_hyphae",
            "warped_hyphae",
            "oak_leaves",
            "spruce_leaves",
            "birch_leaves",
            "jungle_leaves",
            "acacia_leaves",
            "dark_oak_leaves",
            "mangrove_leaves",
            "azalea_leaves",
            "flowering_azalea_leaves",
            "sponge",
            "wet_sponge",
            "glass",
            "tinted_glass",
            "lapis_block",
            "sandstone",
            "chiseled_sandstone",
            "cut_sandstone",
            "cobweb",
            "grass",
            "fern",
            "azalea",
            "flowering_azalea",
            "dead_bush",
            "seagrass",
            "sea_pickle",
            "white_wool",
            "orange_wool",
            "magenta_wool",
            "light_blue_wool",
            "yellow_wool",
            "lime_wool",
            "pink_wool",
            "gray_wool",
            "light_gray_wool",
            "cyan_wool",
            "purple_wool",
            "blue_wool",
            "brown_wool",
            "green_wool",
            "red_wool",
            "black_wool",
            "dandelion",
            "poppy",
            "blue_orchid",
            "allium",
            "azure_bluet",
            "red_tulip",
            "orange_tulip",
            "white_tulip",
            "pink_tulip",
            "oxeye_daisy",
            "cornflower",
            "lily_of_the_valley",
            "wither_rose",
            "spore_blossom",
            "brown_mushroom",
            "red_mushroom",
            "crimson_fungus",
            "warped_fungus",
            "crimson_roots",
            "warped_roots",
            "nether_sprouts",
            "weeping_vines",
            "twisting_vines",
            "sugar_cane",
            "kelp",
            "moss_carpet",
            "moss_block",
            "hanging_roots",
            "big_dripleaf",
            "small_dripleaf",
            "bamboo",
            "oak_slab",
            "spruce_slab",
            "birch_slab",
            "jungle_slab",
            "acacia_slab",
            "dark_oak_slab",
            "mangrove_slab",
            "crimson_slab",
            "warped_slab",
            "stone_slab",
            "smooth_stone_slab",
            "sandstone_slab",
            "cut_sandstone_slab",
            "petrified_oak_slab",
            "cobblestone_slab",
            "brick_slab",
            "stone_brick_slab",
            "mud_brick_slab",
            "nether_brick_slab",
            "quartz_slab",
            "red_sandstone_slab",
            "cut_red_sandstone_slab",
            "purpur_slab",
            "prismarine_slab",
            "prismarine_brick_slab",
            "dark_prismarine_slab",
            "smooth_quartz",
            "smooth_red_sandstone",
            "smooth_sandstone",
            "smooth_stone",
            "bricks",
            "bookshelf",
            "mossy_cobblestone",
            "obsidian",
            "torch",
            "end_rod",
            "chorus_plant",
            "chorus_flower",
            "purpur_block",
            "purpur_pillar",
            "purpur_stairs",
            "spawner",
            "chest",
            "crafting_table",
            "farmland",
            "furnace",
            "ladder",
            "cobblestone_stairs",
            "snow",
            "ice",
            "snow_block",
            "cactus",
            "clay",
            "jukebox",
            "oak_fence",
            "spruce_fence",
            "birch_fence",
            "jungle_fence",
            "acacia_fence",
            "dark_oak_fence",
            "mangrove_fence",
            "crimson_fence",
            "warped_fence",
            "pumpkin",
            "carved_pumpkin",
            "jack_o_lantern",
            "netherrack",
            "soul_sand",
            "soul_soil",
            "basalt",
            "polished_basalt",
            "smooth_basalt",
            "soul_torch",
            "glowstone",
            "infested_stone",
            "infested_cobblestone",
            "infested_stone_bricks",
            "infested_mossy_stone_bricks",
            "infested_cracked_stone_bricks",
            "infested_chiseled_stone_bricks",
            "infested_deepslate",
            "stone_bricks",
            "mossy_stone_bricks",
            "cracked_stone_bricks",
            "chiseled_stone_bricks",
            "packed_mud",
            "mud_bricks",
            "deepslate_bricks",
            "cracked_deepslate_bricks",
            "deepslate_tiles",
            "cracked_deepslate_tiles",
            "chiseled_deepslate",
            "reinforced_deepslate",
            "brown_mushroom_block",
            "red_mushroom_block",
            "mushroom_stem",
            "iron_bars",
            "chain",
            "glass_pane",
            "melon",
            "vine",
            "glow_lichen",
            "brick_stairs",
            "stone_brick_stairs",
            "mud_brick_stairs",
            "mycelium",
            "lily_pad",
            "nether_bricks",
            "cracked_nether_bricks",
            "chiseled_nether_bricks",
            "nether_brick_fence",
            "nether_brick_stairs",
            "sculk",
            "sculk_vein",
            "sculk_catalyst",
            "sculk_shrieker",
            "enchanting_table",
            "end_portal_frame",
            "end_stone",
            "end_stone_bricks",
            "dragon_egg",
            "sandstone_stairs",
            "ender_chest",
            "emerald_block",
            "oak_stairs",
            "spruce_stairs",
            "birch_stairs",
            "jungle_stairs",
            "acacia_stairs",
            "dark_oak_stairs",
            "mangrove_stairs",
            "crimson_stairs",
            "warped_stairs",
            "command_block",
            "beacon",
            "cobblestone_wall",
            "mossy_cobblestone_wall",
            "brick_wall",
            "prismarine_wall",
            "red_sandstone_wall",
            "mossy_stone_brick_wall",
            "granite_wall",
            "stone_brick_wall",
            "mud_brick_wall",
            "nether_brick_wall",
            "andesite_wall",
            "red_nether_brick_wall",
            "sandstone_wall",
            "end_stone_brick_wall",
            "diorite_wall",
            "blackstone_wall",
            "polished_blackstone_wall",
            "polished_blackstone_brick_wall",
            "cobbled_deepslate_wall",
            "polished_deepslate_wall",
            "deepslate_brick_wall",
            "deepslate_tile_wall",
            "anvil",
            "chipped_anvil",
            "damaged_anvil",
            "chiseled_quartz_block",
            "quartz_block",
            "quartz_bricks",
            "quartz_pillar",
            "quartz_stairs",
            "white_terracotta",
            "orange_terracotta",
            "magenta_terracotta",
            "light_blue_terracotta",
            "yellow_terracotta",
            "lime_terracotta",
            "pink_terracotta",
            "gray_terracotta",
            "light_gray_terracotta",
            "cyan_terracotta",
            "purple_terracotta",
            "blue_terracotta",
            "brown_terracotta",
            "green_terracotta",
            "red_terracotta",
            "black_terracotta",
            "barrier",
            "light",
            "hay_block",
            "white_carpet",
            "orange_carpet",
            "magenta_carpet",
            "light_blue_carpet",
            "yellow_carpet",
            "lime_carpet",
            "pink_carpet",
            "gray_carpet",
            "light_gray_carpet",
            "cyan_carpet",
            "purple_carpet",
            "blue_carpet",
            "brown_carpet",
            "green_carpet",
            "red_carpet",
            "black_carpet",
            "terracotta",
            "packed_ice",
            "dirt_path",
            "sunflower",
            "lilac",
            "rose_bush",
            "peony",
            "tall_grass",
            "large_fern",
            "white_stained_glass",
            "orange_stained_glass",
            "magenta_stained_glass",
            "light_blue_stained_glass",
            "yellow_stained_glass",
            "lime_stained_glass",
            "pink_stained_glass",
            "gray_stained_glass",
            "light_gray_stained_glass",
            "cyan_stained_glass",
            "purple_stained_glass",
            "blue_stained_glass",
            "brown_stained_glass",
            "green_stained_glass",
            "red_stained_glass",
            "black_stained_glass",
            "white_stained_glass_pane",
            "orange_stained_glass_pane",
            "magenta_stained_glass_pane",
            "light_blue_stained_glass_pane",
            "yellow_stained_glass_pane",
            "lime_stained_glass_pane",
            "pink_stained_glass_pane",
            "gray_stained_glass_pane",
            "light_gray_stained_glass_pane",
            "cyan_stained_glass_pane",
            "purple_stained_glass_pane",
            "blue_stained_glass_pane",
            "brown_stained_glass_pane",
            "green_stained_glass_pane",
            "red_stained_glass_pane",
            "black_stained_glass_pane",
            "prismarine",
            "prismarine_bricks",
            "dark_prismarine",
            "prismarine_stairs",
            "prismarine_brick_stairs",
            "dark_prismarine_stairs",
            "sea_lantern",
            "red_sandstone",
            "chiseled_red_sandstone",
            "cut_red_sandstone",
            "red_sandstone_stairs",
            "repeating_command_block",
            "chain_command_block",
            "magma_block",
            "nether_wart_block",
            "warped_wart_block",
            "red_nether_bricks",
            "bone_block",
            "structure_void",
            "shulker_box",
            "white_shulker_box",
            "orange_shulker_box",
            "magenta_shulker_box",
            "light_blue_shulker_box",
            "yellow_shulker_box",
            "lime_shulker_box",
            "pink_shulker_box",
            "gray_shulker_box",
            "light_gray_shulker_box",
            "cyan_shulker_box",
            "purple_shulker_box",
            "blue_shulker_box",
            "brown_shulker_box",
            "green_shulker_box",
            "red_shulker_box",
            "black_shulker_box",
            "white_glazed_terracotta",
            "orange_glazed_terracotta",
            "magenta_glazed_terracotta",
            "light_blue_glazed_terracotta",
            "yellow_glazed_terracotta",
            "lime_glazed_terracotta",
            "pink_glazed_terracotta",
            "gray_glazed_terracotta",
            "light_gray_glazed_terracotta",
            "cyan_glazed_terracotta",
            "purple_glazed_terracotta",
            "blue_glazed_terracotta",
            "brown_glazed_terracotta",
            "green_glazed_terracotta",
            "red_glazed_terracotta",
            "black_glazed_terracotta",
            "white_concrete",
            "orange_concrete",
            "magenta_concrete",
            "light_blue_concrete",
            "yellow_concrete",
            "lime_concrete",
            "pink_concrete",
            "gray_concrete",
            "light_gray_concrete",
            "cyan_concrete",
            "purple_concrete",
            "blue_concrete",
            "brown_concrete",
            "green_concrete",
            "red_concrete",
            "black_concrete",
            "white_concrete_powder",
            "orange_concrete_powder",
            "magenta_concrete_powder",
            "light_blue_concrete_powder",
            "yellow_concrete_powder",
            "lime_concrete_powder",
            "pink_concrete_powder",
            "gray_concrete_powder",
            "light_gray_concrete_powder",
            "cyan_concrete_powder",
            "purple_concrete_powder",
            "blue_concrete_powder",
            "brown_concrete_powder",
            "green_concrete_powder",
            "red_concrete_powder",
            "black_concrete_powder",
            "turtle_egg",
            "dead_tube_coral_block",
            "dead_brain_coral_block",
            "dead_bubble_coral_block",
            "dead_fire_coral_block",
            "dead_horn_coral_block",
            "tube_coral_block",
            "brain_coral_block",
            "bubble_coral_block",
            "fire_coral_block",
            "horn_coral_block",
            "tube_coral",
            "brain_coral",
            "bubble_coral",
            "fire_coral",
            "horn_coral",
            "dead_brain_coral",
            "dead_bubble_coral",
            "dead_fire_coral",
            "dead_horn_coral",
            "dead_tube_coral",
            "tube_coral_fan",
            "brain_coral_fan",
            "bubble_coral_fan",
            "fire_coral_fan",
            "horn_coral_fan",
            "dead_tube_coral_fan",
            "dead_brain_coral_fan",
            "dead_bubble_coral_fan",
            "dead_fire_coral_fan",
            "dead_horn_coral_fan",
            "blue_ice",
            "conduit",
            "polished_granite_stairs",
            "smooth_red_sandstone_stairs",
            "mossy_stone_brick_stairs",
            "polished_diorite_stairs",
            "mossy_cobblestone_stairs",
            "end_stone_brick_stairs",
            "stone_stairs",
            "smooth_sandstone_stairs",
            "smooth_quartz_stairs",
            "granite_stairs",
            "andesite_stairs",
            "red_nether_brick_stairs",
            "polished_andesite_stairs",
            "diorite_stairs",
            "cobbled_deepslate_stairs",
            "polished_deepslate_stairs",
            "deepslate_brick_stairs",
            "deepslate_tile_stairs",
            "polished_granite_slab",
            "smooth_red_sandstone_slab",
            "mossy_stone_brick_slab",
            "polished_diorite_slab",
            "mossy_cobblestone_slab",
            "end_stone_brick_slab",
            "smooth_sandstone_slab",
            "smooth_quartz_slab",
            "granite_slab",
            "andesite_slab",
            "red_nether_brick_slab",
            "polished_andesite_slab",
            "diorite_slab",
            "cobbled_deepslate_slab",
            "polished_deepslate_slab",
            "deepslate_brick_slab",
            "deepslate_tile_slab",
            "scaffolding",
            "redstone",
            "redstone_torch",
            "redstone_block",
            "repeater",
            "comparator",
            "piston",
            "sticky_piston",
            "slime_block",
            "honey_block",
            "observer",
            "hopper",
            "dispenser",
            "dropper",
            "lectern",
            "target",
            "lever",
            "lightning_rod",
            "daylight_detector",
            "sculk_sensor",
            "tripwire_hook",
            "trapped_chest",
            "tnt",
            "redstone_lamp",
            "note_block",
            "stone_button",
            "polished_blackstone_button",
            "oak_button",
            "spruce_button",
            "birch_button",
            "jungle_button",
            "acacia_button",
            "dark_oak_button",
            "mangrove_button",
            "crimson_button",
            "warped_button",
            "stone_pressure_plate",
            "polished_blackstone_pressure_plate",
            "light_weighted_pressure_plate",
            "heavy_weighted_pressure_plate",
            "oak_pressure_plate",
            "spruce_pressure_plate",
            "birch_pressure_plate",
            "jungle_pressure_plate",
            "acacia_pressure_plate",
            "dark_oak_pressure_plate",
            "mangrove_pressure_plate",
            "crimson_pressure_plate",
            "warped_pressure_plate",
            "iron_door",
            "oak_door",
            "spruce_door",
            "birch_door",
            "jungle_door",
            "acacia_door",
            "dark_oak_door",
            "mangrove_door",
            "crimson_door",
            "warped_door",
            "iron_trapdoor",
            "oak_trapdoor",
            "spruce_trapdoor",
            "birch_trapdoor",
            "jungle_trapdoor",
            "acacia_trapdoor",
            "dark_oak_trapdoor",
            "mangrove_trapdoor",
            "crimson_trapdoor",
            "warped_trapdoor",
            "oak_fence_gate",
            "spruce_fence_gate",
            "birch_fence_gate",
            "jungle_fence_gate",
            "acacia_fence_gate",
            "dark_oak_fence_gate",
            "mangrove_fence_gate",
            "crimson_fence_gate",
            "warped_fence_gate",
            "powered_rail",
            "detector_rail",
            "rail",
            "activator_rail",
            "saddle",
            "minecart",
            "chest_minecart",
            "furnace_minecart",
            "tnt_minecart",
            "hopper_minecart",
            "carrot_on_a_stick",
            "warped_fungus_on_a_stick",
            "elytra",
            "oak_boat",
            "oak_chest_boat",
            "spruce_boat",
            "spruce_chest_boat",
            "birch_boat",
            "birch_chest_boat",
            "jungle_boat",
            "jungle_chest_boat",
            "acacia_boat",
            "acacia_chest_boat",
            "dark_oak_boat",
            "dark_oak_chest_boat",
            "mangrove_boat",
            "mangrove_chest_boat",
            "structure_block",
            "jigsaw",
            "turtle_helmet",
            "scute",
            "flint_and_steel",
            "apple",
            "bow",
            "arrow",
            "coal",
            "charcoal",
            "diamond",
            "emerald",
            "lapis_lazuli",
            "quartz",
            "amethyst_shard",
            "raw_iron",
            "iron_ingot",
            "raw_copper",
            "copper_ingot",
            "raw_gold",
            "gold_ingot",
            "netherite_ingot",
            "netherite_scrap",
            "wooden_sword",
            "wooden_shovel",
            "wooden_pickaxe",
            "wooden_axe",
            "wooden_hoe",
            "stone_sword",
            "stone_shovel",
            "stone_pickaxe",
            "stone_axe",
            "stone_hoe",
            "golden_sword",
            "golden_shovel",
            "golden_pickaxe",
            "golden_axe",
            "golden_hoe",
            "iron_sword",
            "iron_shovel",
            "iron_pickaxe",
            "iron_axe",
            "iron_hoe",
            "diamond_sword",
            "diamond_shovel",
            "diamond_pickaxe",
            "diamond_axe",
            "diamond_hoe",
            "netherite_sword",
            "netherite_shovel",
            "netherite_pickaxe",
            "netherite_axe",
            "netherite_hoe",
            "stick",
            "bowl",
            "mushroom_stew",
            "string",
            "feather",
            "gunpowder",
            "wheat_seeds",
            "wheat",
            "bread",
            "leather_helmet",
            "leather_chestplate",
            "leather_leggings",
            "leather_boots",
            "chainmail_helmet",
            "chainmail_chestplate",
            "chainmail_leggings",
            "chainmail_boots",
            "iron_helmet",
            "iron_chestplate",
            "iron_leggings",
            "iron_boots",
            "diamond_helmet",
            "diamond_chestplate",
            "diamond_leggings",
            "diamond_boots",
            "golden_helmet",
            "golden_chestplate",
            "golden_leggings",
            "golden_boots",
            "netherite_helmet",
            "netherite_chestplate",
            "netherite_leggings",
            "netherite_boots",
            "flint",
            "porkchop",
            "cooked_porkchop",
            "painting",
            "golden_apple",
            "enchanted_golden_apple",
            "oak_sign",
            "spruce_sign",
            "birch_sign",
            "jungle_sign",
            "acacia_sign",
            "dark_oak_sign",
            "mangrove_sign",
            "crimson_sign",
            "warped_sign",
            "bucket",
            "water_bucket",
            "lava_bucket",
            "powder_snow_bucket",
            "snowball",
            "leather",
            "milk_bucket",
            "pufferfish_bucket",
            "salmon_bucket",
            "cod_bucket",
            "tropical_fish_bucket",
            "axolotl_bucket",
            "tadpole_bucket",
            "brick",
            "clay_ball",
            "dried_kelp_block",
            "paper",
            "book",
            "slime_ball",
            "egg",
            "compass",
            "recovery_compass",
            "bundle",
            "fishing_rod",
            "clock",
            "spyglass",
            "glowstone_dust",
            "cod",
            "salmon",
            "tropical_fish",
            "pufferfish",
            "cooked_cod",
            "cooked_salmon",
            "ink_sac",
            "glow_ink_sac",
            "cocoa_beans",
            "white_dye",
            "orange_dye",
            "magenta_dye",
            "light_blue_dye",
            "yellow_dye",
            "lime_dye",
            "pink_dye",
            "gray_dye",
            "light_gray_dye",
            "cyan_dye",
            "purple_dye",
            "blue_dye",
            "brown_dye",
            "green_dye",
            "red_dye",
            "black_dye",
            "bone_meal",
            "bone",
            "sugar",
            "cake",
            "white_bed",
            "orange_bed",
            "magenta_bed",
            "light_blue_bed",
            "yellow_bed",
            "lime_bed",
            "pink_bed",
            "gray_bed",
            "light_gray_bed",
            "cyan_bed",
            "purple_bed",
            "blue_bed",
            "brown_bed",
            "green_bed",
            "red_bed",
            "black_bed",
            "cookie",
            "filled_map",
            "shears",
            "melon_slice",
            "dried_kelp",
            "pumpkin_seeds",
            "melon_seeds",
            "beef",
            "cooked_beef",
            "chicken",
            "cooked_chicken",
            "rotten_flesh",
            "ender_pearl",
            "blaze_rod",
            "ghast_tear",
            "gold_nugget",
            "nether_wart",
            "potion",
            "glass_bottle",
            "spider_eye",
            "fermented_spider_eye",
            "blaze_powder",
            "magma_cream",
            "brewing_stand",
            "cauldron",
            "ender_eye",
            "glistering_melon_slice",
            "allay_spawn_egg",
            "axolotl_spawn_egg",
            "bat_spawn_egg",
            "bee_spawn_egg",
            "blaze_spawn_egg",
            "cat_spawn_egg",
            "cave_spider_spawn_egg",
            "chicken_spawn_egg",
            "cod_spawn_egg",
            "cow_spawn_egg",
            "creeper_spawn_egg",
            "dolphin_spawn_egg",
            "donkey_spawn_egg",
            "drowned_spawn_egg",
            "elder_guardian_spawn_egg",
            "enderman_spawn_egg",
            "endermite_spawn_egg",
            "evoker_spawn_egg",
            "fox_spawn_egg",
            "frog_spawn_egg",
            "ghast_spawn_egg",
            "glow_squid_spawn_egg",
            "goat_spawn_egg",
            "guardian_spawn_egg",
            "hoglin_spawn_egg",
            "horse_spawn_egg",
            "husk_spawn_egg",
            "llama_spawn_egg",
            "magma_cube_spawn_egg",
            "mooshroom_spawn_egg",
            "mule_spawn_egg",
            "ocelot_spawn_egg",
            "panda_spawn_egg",
            "parrot_spawn_egg",
            "phantom_spawn_egg",
            "pig_spawn_egg",
            "piglin_spawn_egg",
            "piglin_brute_spawn_egg",
            "pillager_spawn_egg",
            "polar_bear_spawn_egg",
            "pufferfish_spawn_egg",
            "rabbit_spawn_egg",
            "ravager_spawn_egg",
            "salmon_spawn_egg",
            "sheep_spawn_egg",
            "shulker_spawn_egg",
            "silverfish_spawn_egg",
            "skeleton_spawn_egg",
            "skeleton_horse_spawn_egg",
            "slime_spawn_egg",
            "spider_spawn_egg",
            "squid_spawn_egg",
            "stray_spawn_egg",
            "strider_spawn_egg",
            "tadpole_spawn_egg",
            "trader_llama_spawn_egg",
            "tropical_fish_spawn_egg",
            "turtle_spawn_egg",
            "vex_spawn_egg",
            "villager_spawn_egg",
            "vindicator_spawn_egg",
            "wandering_trader_spawn_egg",
            "warden_spawn_egg",
            "witch_spawn_egg",
            "wither_skeleton_spawn_egg",
            "wolf_spawn_egg",
            "zoglin_spawn_egg",
            "zombie_spawn_egg",
            "zombie_horse_spawn_egg",
            "zombie_villager_spawn_egg",
            "zombified_piglin_spawn_egg",
            "experience_bottle",
            "fire_charge",
            "writable_book",
            "written_book",
            "item_frame",
            "glow_item_frame",
            "flower_pot",
            "carrot",
            "potato",
            "baked_potato",
            "poisonous_potato",
            "map",
            "golden_carrot",
            "skeleton_skull",
            "wither_skeleton_skull",
            "player_head",
            "zombie_head",
            "creeper_head",
            "dragon_head",
            "nether_star",
            "pumpkin_pie",
            "firework_rocket",
            "firework_star",
            "enchanted_book",
            "nether_brick",
            "prismarine_shard",
            "prismarine_crystals",
            "rabbit",
            "cooked_rabbit",
            "rabbit_stew",
            "rabbit_foot",
            "rabbit_hide",
            "armor_stand",
            "iron_horse_armor",
            "golden_horse_armor",
            "diamond_horse_armor",
            "leather_horse_armor",
            "lead",
            "name_tag",
            "command_block_minecart",
            "mutton",
            "cooked_mutton",
            "white_banner",
            "orange_banner",
            "magenta_banner",
            "light_blue_banner",
            "yellow_banner",
            "lime_banner",
            "pink_banner",
            "gray_banner",
            "light_gray_banner",
            "cyan_banner",
            "purple_banner",
            "blue_banner",
            "brown_banner",
            "green_banner",
            "red_banner",
            "black_banner",
            "end_crystal",
            "chorus_fruit",
            "popped_chorus_fruit",
            "beetroot",
            "beetroot_seeds",
            "beetroot_soup",
            "dragon_breath",
            "splash_potion",
            "spectral_arrow",
            "tipped_arrow",
            "lingering_potion",
            "shield",
            "totem_of_undying",
            "shulker_shell",
            "iron_nugget",
            "knowledge_book",
            "debug_stick",
            "music_disc_13",
            "music_disc_cat",
            "music_disc_blocks",
            "music_disc_chirp",
            "music_disc_far",
            "music_disc_mall",
            "music_disc_mellohi",
            "music_disc_stal",
            "music_disc_strad",
            "music_disc_ward",
            "music_disc_11",
            "music_disc_wait",
            "music_disc_otherside",
            "music_disc_5",
            "music_disc_pigstep",
            "disc_fragment_5",
            "trident",
            "phantom_membrane",
            "nautilus_shell",
            "heart_of_the_sea",
            "crossbow",
            "suspicious_stew",
            "loom",
            "flower_banner_pattern",
            "creeper_banner_pattern",
            "skull_banner_pattern",
            "mojang_banner_pattern",
            "globe_banner_pattern",
            "piglin_banner_pattern",
            "goat_horn",
            "composter",
            "barrel",
            "smoker",
            "blast_furnace",
            "cartography_table",
            "fletching_table",
            "grindstone",
            "smithing_table",
            "stonecutter",
            "bell",
            "lantern",
            "soul_lantern",
            "sweet_berries",
            "glow_berries",
            "campfire",
            "soul_campfire",
            "shroomlight",
            "honeycomb",
            "bee_nest",
            "beehive",
            "honey_bottle",
            "honeycomb_block",
            "lodestone",
            "crying_obsidian",
            "blackstone",
            "blackstone_slab",
            "blackstone_stairs",
            "gilded_blackstone",
            "polished_blackstone",
            "polished_blackstone_slab",
            "polished_blackstone_stairs",
            "chiseled_polished_blackstone",
            "polished_blackstone_bricks",
            "polished_blackstone_brick_slab",
            "polished_blackstone_brick_stairs",
            "cracked_polished_blackstone_bricks",
            "respawn_anchor",
            "candle",
            "white_candle",
            "orange_candle",
            "magenta_candle",
            "light_blue_candle",
            "yellow_candle",
            "lime_candle",
            "pink_candle",
            "gray_candle",
            "light_gray_candle",
            "cyan_candle",
            "purple_candle",
            "blue_candle",
            "brown_candle",
            "green_candle",
            "red_candle",
            "black_candle",
            "small_amethyst_bud",
            "medium_amethyst_bud",
            "large_amethyst_bud",
            "amethyst_cluster",
            "pointed_dripstone",
            "ochre_froglight",
            "verdant_froglight",
            "pearlescent_froglight",
            "frogspawn",
            "echo_shard",
            "water",
            "lava",
            "tall_seagrass",
            "piston_head",
            "moving_piston",
            "wall_torch",
            "fire",
            "soul_fire",
            "redstone_wire",
            "oak_wall_sign",
            "spruce_wall_sign",
            "birch_wall_sign",
            "acacia_wall_sign",
            "jungle_wall_sign",
            "dark_oak_wall_sign",
            "mangrove_wall_sign",
            "redstone_wall_torch",
            "soul_wall_torch",
            "nether_portal",
            "attached_pumpkin_stem",
            "attached_melon_stem",
            "pumpkin_stem",
            "melon_stem",
            "water_cauldron",
            "lava_cauldron",
            "powder_snow_cauldron",
            "end_portal",
            "cocoa",
            "tripwire",
            "potted_oak_sapling",
            "potted_spruce_sapling",
            "potted_birch_sapling",
            "potted_jungle_sapling",
            "potted_acacia_sapling",
            "potted_dark_oak_sapling",
            "potted_mangrove_propagule",
            "potted_fern",
            "potted_dandelion",
            "potted_poppy",
            "potted_blue_orchid",
            "potted_allium",
            "potted_azure_bluet",
            "potted_red_tulip",
            "potted_orange_tulip",
            "potted_white_tulip",
            "potted_pink_tulip",
            "potted_oxeye_daisy",
            "potted_cornflower",
            "potted_lily_of_the_valley",
            "potted_wither_rose",
            "potted_red_mushroom",
            "potted_brown_mushroom",
            "potted_dead_bush",
            "potted_cactus",
            "carrots",
            "potatoes",
            "skeleton_wall_skull",
            "wither_skeleton_wall_skull",
            "zombie_wall_head",
            "player_wall_head",
            "creeper_wall_head",
            "dragon_wall_head",
            "white_wall_banner",
            "orange_wall_banner",
            "magenta_wall_banner",
            "light_blue_wall_banner",
            "yellow_wall_banner",
            "lime_wall_banner",
            "pink_wall_banner",
            "gray_wall_banner",
            "light_gray_wall_banner",
            "cyan_wall_banner",
            "purple_wall_banner",
            "blue_wall_banner",
            "brown_wall_banner",
            "green_wall_banner",
            "red_wall_banner",
            "black_wall_banner",
            "beetroots",
            "end_gateway",
            "frosted_ice",
            "kelp_plant",
            "dead_tube_coral_wall_fan",
            "dead_brain_coral_wall_fan",
            "dead_bubble_coral_wall_fan",
            "dead_fire_coral_wall_fan",
            "dead_horn_coral_wall_fan",
            "tube_coral_wall_fan",
            "brain_coral_wall_fan",
            "bubble_coral_wall_fan",
            "fire_coral_wall_fan",
            "horn_coral_wall_fan",
            "bamboo_sapling",
            "potted_bamboo",
            "void_air",
            "cave_air",
            "bubble_column",
            "sweet_berry_bush",
            "weeping_vines_plant",
            "twisting_vines_plant",
            "crimson_wall_sign",
            "warped_wall_sign",
            "potted_crimson_fungus",
            "potted_warped_fungus",
            "potted_crimson_roots",
            "potted_warped_roots",
            "candle_cake",
            "white_candle_cake",
            "orange_candle_cake",
            "magenta_candle_cake",
            "light_blue_candle_cake",
            "yellow_candle_cake",
            "lime_candle_cake",
            "pink_candle_cake",
            "gray_candle_cake",
            "light_gray_candle_cake",
            "cyan_candle_cake",
            "purple_candle_cake",
            "blue_candle_cake",
            "brown_candle_cake",
            "green_candle_cake",
            "red_candle_cake",
            "black_candle_cake",
            "powder_snow",
            "cave_vines",
            "cave_vines_plant",
            "big_dripleaf_stem",
            "potted_azalea_bush",
            "potted_flowering_azalea_bush"
        ]},
        "erzloot": {"enum": []},
        "enum-snippet-effect": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisenchantment": {"anyOf": [
            {
                "description": "Represents an enchantment & level",
                "type": "object",
                "properties": {
                    "enchantment": {
                        "type": "string",
                        "$ref": "#/definitions/enum-enchantment",
                        "description": "enchantment\nThe enchantment\n   \nEnchantment Type\n\nMust be a valid Enchantment Type (use ctrl+space for auto complete!)"
                    },
                    "minLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minLevel\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxLevel\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this enchantment is applied (0 to 1)\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisweather": {"oneOf": [
            {
                "const": "NONE",
                "description": "Represents when weather is not causing downfall"
            },
            {
                "const": "DOWNFALL",
                "description": "Represents rain or snow"
            },
            {
                "const": "DOWNFALL_WITH_THUNDER",
                "description": "Represents rain or snow with thunder"
            },
            {
                "const": "ANY",
                "description": "Any weather"
            }
        ]},
        "enum-enchantment": {"enum": [
            "fire_protection",
            "sharpness",
            "flame",
            "soul_speed",
            "aqua_affinity",
            "punch",
            "loyalty",
            "depth_strider",
            "vanishing_curse",
            "unbreaking",
            "knockback",
            "luck_of_the_sea",
            "binding_curse",
            "fortune",
            "protection",
            "efficiency",
            "mending",
            "frost_walker",
            "lure",
            "looting",
            "piercing",
            "blast_protection",
            "smite",
            "multishot",
            "swift_sneak",
            "fire_aspect",
            "channeling",
            "sweeping",
            "thorns",
            "bane_of_arthropods",
            "respiration",
            "riptide",
            "silk_touch",
            "quick_charge",
            "projectile_protection",
            "impaling",
            "feather_falling",
            "power",
            "infinity"
        ]},
        "enum-snippet-command-registry": {"enum": []},
        "enum-reg-specialentity": {"enum": []},
        "enum-org-bukkit-inventory-itemflag": {"enum": [
            "HIDE_ENCHANTS",
            "HIDE_ATTRIBUTES",
            "HIDE_UNBREAKABLE",
            "HIDE_DESTROYS",
            "HIDE_PLACED_ON",
            "HIDE_POTION_EFFECTS",
            "HIDE_DYE"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irislootmode": {"oneOf": [
            {
                "const": "ADD",
                "description": "Add to the existing parent loot tables"
            },
            {
                "const": "CLEAR",
                "description": "Clear all loot tables then add this table"
            },
            {
                "const": "REPLACE",
                "description": "Replace all loot tables with this table (same as clear)"
            }
        ]},
        "enum-org-bukkit-particle": {"enum": [
            "EXPLOSION_NORMAL",
            "EXPLOSION_LARGE",
            "EXPLOSION_HUGE",
            "FIREWORKS_SPARK",
            "WATER_BUBBLE",
            "WATER_SPLASH",
            "WATER_WAKE",
            "SUSPENDED",
            "SUSPENDED_DEPTH",
            "CRIT",
            "CRIT_MAGIC",
            "SMOKE_NORMAL",
            "SMOKE_LARGE",
            "SPELL",
            "SPELL_INSTANT",
            "SPELL_MOB",
            "SPELL_MOB_AMBIENT",
            "SPELL_WITCH",
            "DRIP_WATER",
            "DRIP_LAVA",
            "VILLAGER_ANGRY",
            "VILLAGER_HAPPY",
            "TOWN_AURA",
            "NOTE",
            "PORTAL",
            "ENCHANTMENT_TABLE",
            "FLAME",
            "LAVA",
            "CLOUD",
            "REDSTONE",
            "SNOWBALL",
            "SNOW_SHOVEL",
            "SLIME",
            "HEART",
            "ITEM_CRACK",
            "BLOCK_CRACK",
            "BLOCK_DUST",
            "WATER_DROP",
            "MOB_APPEARANCE",
            "DRAGON_BREATH",
            "END_ROD",
            "DAMAGE_INDICATOR",
            "SWEEP_ATTACK",
            "FALLING_DUST",
            "TOTEM",
            "SPIT",
            "SQUID_INK",
            "BUBBLE_POP",
            "CURRENT_DOWN",
            "BUBBLE_COLUMN_UP",
            "NAUTILUS",
            "DOLPHIN",
            "SNEEZE",
            "CAMPFIRE_COSY_SMOKE",
            "CAMPFIRE_SIGNAL_SMOKE",
            "COMPOSTER",
            "FLASH",
            "FALLING_LAVA",
            "LANDING_LAVA",
            "FALLING_WATER",
            "DRIPPING_HONEY",
            "FALLING_HONEY",
            "LANDING_HONEY",
            "FALLING_NECTAR",
            "SOUL_FIRE_FLAME",
            "ASH",
            "CRIMSON_SPORE",
            "WARPED_SPORE",
            "SOUL",
            "DRIPPING_OBSIDIAN_TEAR",
            "FALLING_OBSIDIAN_TEAR",
            "LANDING_OBSIDIAN_TEAR",
            "REVERSE_PORTAL",
            "WHITE_ASH",
            "DUST_COLOR_TRANSITION",
            "VIBRATION",
            "FALLING_SPORE_BLOSSOM",
            "SPORE_BLOSSOM_AIR",
            "SMALL_FLAME",
            "SNOWFLAKE",
            "DRIPPING_DRIPSTONE_LAVA",
            "FALLING_DRIPSTONE_LAVA",
            "DRIPPING_DRIPSTONE_WATER",
            "FALLING_DRIPSTONE_WATER",
            "GLOW_SQUID_INK",
            "GLOW",
            "WAX_ON",
            "WAX_OFF",
            "ELECTRIC_SPARK",
            "SCRAPE",
            "SONIC_BOOM",
            "SCULK_SOUL",
            "SCULK_CHARGE",
            "SCULK_CHARGE_POP",
            "SHRIEK",
            "BLOCK_MARKER",
            "LEGACY_BLOCK_CRACK",
            "LEGACY_BLOCK_DUST",
            "LEGACY_FALLING_DUST"
        ]},
        "erzscripts": {"enum": []},
        "enum-snippet-loot": {"enum": []},
        "enum-org-bukkit-entity-panda-gene": {"enum": [
            "NORMAL",
            "LAZY",
            "WORRIED",
            "PLAYFUL",
            "BROWN",
            "WEAK",
            "AGGRESSIVE"
        ]},
        "enum-snippet-loot-registry": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-inventoryslottype": {"oneOf": [
            {
                "const": "STORAGE",
                "description": "Typically the one you want to go with. Storage represnents most slots in inventories."
            },
            {
                "const": "FUEL",
                "description": "Used for the fuel slot in Furnaces, Blast furnaces, smokers etc."
            },
            {
                "const": "FURNACE",
                "description": "Used for the cook slot in furnaces"
            },
            {
                "const": "BLAST_FURNACE",
                "description": "Used for the cook slot in blast furnaces"
            },
            {
                "const": "SMOKER",
                "description": "Used for the cook slot in smokers"
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisattributemodifier": {"anyOf": [
            {
                "description": "Represents an attribute modifier for an item or an entity. This allows you to create modifications to basic game attributes such as MAX_HEALTH or ARMOR_VALUE.",
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attribute",
                        "description": "attribute\nThe Attribute type. This type is pulled from the game attributes. Zombie & Horse attributes will not work on non-zombie/horse entities.\nUsing an attribute on an item will have affects when held, or worn. There is no way to specify further granularity as the game picks this depending on the item type.\n   \nAttribute\n\nMust be a valid Attribute (use ctrl+space for auto complete!)"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "description": "name\nThe Attribute Name is used internally only for the game. This value should be unique to all other attributes applied to this item/entity. It is not shown in game.\n   \nText\n\n    \n* Default Value is \n* Minimum Length allowed is 2"
                    },
                    "operation": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attributemodifier-operation",
                        "description": "operation\nThe application operation (add number is default). Add Number adds to the default value. \nAdd scalar_1 will multiply by 1 for example if the health is 20 and you multiply_scalar_1 by 0.5, the health will result in 30, not 10. Use negative values to achieve that.\n   \nOperation\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Operation (use ctrl+space for auto complete!)"
                    },
                    "minAmount": {
                        "type": "number",
                        "description": "minAmount\nMinimum amount for this modifier. Iris randomly chooses an amount, this is the minimum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "maxAmount": {
                        "type": "number",
                        "description": "maxAmount\nMaximum amount for this modifier Iris randomly chooses an amount, this is the maximum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this attribute is applied (0 to 1). If the chance is 0.5 (50%), then Iris will only apply this attribute 50% of the time.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-dyecolor": {"enum": [
            "WHITE",
            "ORANGE",
            "MAGENTA",
            "LIGHT_BLUE",
            "YELLOW",
            "LIME",
            "PINK",
            "GRAY",
            "LIGHT_GRAY",
            "CYAN",
            "PURPLE",
            "BLUE",
            "BROWN",
            "GREEN",
            "RED",
            "BLACK"
        ]},
        "obj-com-volmit-iris-util-collection-kmap": {
            "description": "",
            "type": "object",
            "properties": {}
        },
        "obj-com-volmit-iris-engine-object-irisentity": {
            "description": "Represents an iris entity.",
            "type": "object",
            "properties": {
                "preprocessors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzscripts"},
                    "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
                },
                "type": {
                    "type": "string",
                    "$ref": "#/definitions/enum-org-bukkit-entity-entitytype",
                    "description": "type\nThe type of entity to spawn. To spawn a mythic mob, set this type to unknown and define mythic type.\n   \nEntityType\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid EntityType (use ctrl+space for auto complete!)"
                },
                "customName": {
                    "type": "string",
                    "description": "customName\nThe custom name of this entity\n   \nText\n\n    \n* Default Value is "
                },
                "customNameVisible": {
                    "type": "boolean",
                    "description": "customNameVisible\nShould the name on this entity be visible even if you arent looking at it.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "aware": {
                    "type": "boolean",
                    "description": "aware\nIf this entity type is a mob, should it be aware of it's surroundings & interact with the world.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "ai": {
                    "type": "boolean",
                    "description": "ai\nIf this entity type is a creature, should it have ai goals.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "glowing": {
                    "type": "boolean",
                    "description": "glowing\nShould this entity be glowing\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "gravity": {
                    "type": "boolean",
                    "description": "gravity\nShould gravity apply to this entity\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "invulnerable": {
                    "type": "boolean",
                    "description": "invulnerable\nWhen an entity is invulnerable it can only be damaged by players increative mode.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "silent": {
                    "type": "boolean",
                    "description": "silent\nWhen an entity is silent it will not produce any sound.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "pickupItems": {
                    "type": "boolean",
                    "description": "pickupItems\nShould this entity be allowed to pickup items\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "removable": {
                    "type": "boolean",
                    "description": "removable\nShould this entity be removed when far away\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "helmet": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "helmet\nEntity helmet equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "chestplate": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "chestplate\nEntity chestplate equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "boots": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "boots\nEntity boots equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "leggings": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "leggings\nEntity leggings equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "mainHand": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "mainHand\nEntity main hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "offHand": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot",
                            "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot",
                            "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "offHand\nEntity off hand equipment\n   \nLoot (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "passengers": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisentity"},
                    "description": "passengers\nMake other entities ride this entity\n   \nList of Entitys (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "attributes": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisattributemodifier"},
                    "description": "attributes\nAttribute modifiers for this entity\n   \nList of AttributeModifiers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                },
                "loot": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislootreference",
                            "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-loot-registry",
                            "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "loot\nLoot tables for drops\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "leashHolder": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisentity",
                    "description": "leashHolder\nIf specified, this entity will be leashed by this entity. I.e. THIS ENTITY Leashed by SPECIFIED. This has no effect on EnderDragons, Withers, Players, or Bats.Non-living entities excluding leashes will not persist as leashholders.\n   \nEntity (Object)\nRepresents an iris entity."
                },
                "spawnEffect": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriseffect",
                            "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-effect",
                            "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
                        }
                    ],
                    "description": "spawnEffect\nIf specified, this entity will spawn with an effect\n   \nEffect (Object)\nAn iris effect\n    \nYou can instead specify \"snippet/effect/some-name.json\" to use a snippet file instead of specifying it here."
                },
                "spawnEffectRiseOutOfGround": {
                    "type": "boolean",
                    "description": "spawnEffectRiseOutOfGround\nSimply moves the entity from below the surface slowly out of the ground as a spawn-in effect\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "pandaMainGene": {
                    "type": "string",
                    "$ref": "#/definitions/enum-org-bukkit-entity-panda-gene",
                    "description": "pandaMainGene\nThe main gene for a panda if the entity type is a panda\n   \nGene\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Gene (use ctrl+space for auto complete!)"
                },
                "pandaHiddenGene": {
                    "type": "string",
                    "$ref": "#/definitions/enum-org-bukkit-entity-panda-gene",
                    "description": "pandaHiddenGene\nThe hidden gene for a panda if the entity type is a panda\n   \nGene\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Gene (use ctrl+space for auto complete!)"
                },
                "baby": {
                    "type": "boolean",
                    "description": "baby\nThe this entity is ageable, set it's baby status\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "keepEntity": {
                    "type": "boolean",
                    "description": "keepEntity\nIf the entity should never be culled. Useful for Jigsaws\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "surface": {
                    "type": "string",
                    "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irissurface",
                    "description": "surface\nThe surface type to spawn this mob on\n   \nSurface\nThe type of surface entities should spawn on\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Surface (use ctrl+space for auto complete!)"
                },
                "specialType": {
                    "type": "string",
                    "$ref": "#/definitions/enum-reg-specialentity",
                    "description": "specialType\nCreate a mob from another plugin, such as Mythic Mobs. Should be in the format of a namespace of PluginName:MobName\n   \nMythic Mob Type\n\n    \n* Default Value is \nMust be a valid Mythic Mob Type (use ctrl+space for auto complete!) Define mythic mobs with the mythic mobs plugin configuration files."
                },
                "spawnerScript": {
                    "type": "string",
                    "$ref": "#/definitions/erzscripts",
                    "description": "spawnerScript\nSet the entity type to UNKNOWN, then define a script here which ends with the entity variable (the result). You can use Iris.getLocation() to find the target location. You can spawn any entity this way.\n   \nIris Script\n\n    \n* Default Value is \nMust be a valid scripts (use ctrl+space for auto complete!)"
                },
                "postSpawnScripts": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzscripts"},
                    "description": "postSpawnScripts\nSet the entity type to UNKNOWN, then define a script here. You can use Iris.getLocation() to find the target location. You can spawn any entity this way.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
                },
                "rawCommands": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscommand"},
                    "description": "rawCommands\nRun raw commands when this entity is spawned. Use {x}, {y}, and {z} for location. /summon pig {x} {y} {z}\n   \nList of Commands (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                }
            }
        },
        "enum-org-bukkit-attribute-attributemodifier-operation": {"enum": [
            "ADD_NUMBER",
            "ADD_SCALAR",
            "MULTIPLY_SCALAR_1"
        ]},
        "obj-com-volmit-iris-engine-object-iriscommand": {"anyOf": [
            {
                "description": "Represents a set of Iris commands",
                "type": "object",
                "properties": {
                    "commands": {
                        "type": "array",
                        "minItems": 1,
                        "description": "commands\nList of commands. Iris replaces {x} {y} and {z} with the location of the entity spawn\n   \nList of Text\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "delay": {
                        "type": "integer",
                        "description": "delay\nThe delay for running the command. Instant by default\n   \nInteger\n\n    \n* Default Value is 0"
                    },
                    "repeat": {
                        "type": "boolean",
                        "description": "repeat\nIf this should be repeated (indefinitely, cannot be cancelled). This does not persist with server-restarts, so it only repeats when the chunk is generated.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "repeatDelay": {
                        "type": "integer",
                        "description": "repeatDelay\nThe delay between repeats, in server ticks (by default 100, so 5 seconds)\n   \nInteger\n\n    \n* Default Value is 100"
                    },
                    "timeBlock": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristimeblock",
                                "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-time-block",
                                "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "timeBlock\nThe block of 24 hour time in which the command should execute.\n   \nTimeBlock (Object)\nRepresents a time of day (24h time, not 12h am/pm). Set both to the same number for any time. If they are both set to -1, it will always be not allowed.\n    \nYou can instead specify \"snippet/time-block/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "weather": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisweather",
                        "description": "weather\nThe weather that is required for the command to execute.\n   \nWeather\nRepresents a weather type\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Weather (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-entity-entitytype": {"enum": [
            "DROPPED_ITEM",
            "EXPERIENCE_ORB",
            "AREA_EFFECT_CLOUD",
            "ELDER_GUARDIAN",
            "WITHER_SKELETON",
            "STRAY",
            "EGG",
            "LEASH_HITCH",
            "PAINTING",
            "ARROW",
            "SNOWBALL",
            "FIREBALL",
            "SMALL_FIREBALL",
            "ENDER_PEARL",
            "ENDER_SIGNAL",
            "SPLASH_POTION",
            "THROWN_EXP_BOTTLE",
            "ITEM_FRAME",
            "WITHER_SKULL",
            "PRIMED_TNT",
            "FALLING_BLOCK",
            "FIREWORK",
            "HUSK",
            "SPECTRAL_ARROW",
            "SHULKER_BULLET",
            "DRAGON_FIREBALL",
            "ZOMBIE_VILLAGER",
            "SKELETON_HORSE",
            "ZOMBIE_HORSE",
            "ARMOR_STAND",
            "DONKEY",
            "MULE",
            "EVOKER_FANGS",
            "EVOKER",
            "VEX",
            "VINDICATOR",
            "ILLUSIONER",
            "MINECART_COMMAND",
            "BOAT",
            "MINECART",
            "MINECART_CHEST",
            "MINECART_FURNACE",
            "MINECART_TNT",
            "MINECART_HOPPER",
            "MINECART_MOB_SPAWNER",
            "CREEPER",
            "SKELETON",
            "SPIDER",
            "GIANT",
            "ZOMBIE",
            "SLIME",
            "GHAST",
            "ZOMBIFIED_PIGLIN",
            "ENDERMAN",
            "CAVE_SPIDER",
            "SILVERFISH",
            "BLAZE",
            "MAGMA_CUBE",
            "ENDER_DRAGON",
            "WITHER",
            "BAT",
            "WITCH",
            "ENDERMITE",
            "GUARDIAN",
            "SHULKER",
            "PIG",
            "SHEEP",
            "COW",
            "CHICKEN",
            "SQUID",
            "WOLF",
            "MUSHROOM_COW",
            "SNOWMAN",
            "OCELOT",
            "IRON_GOLEM",
            "HORSE",
            "RABBIT",
            "POLAR_BEAR",
            "LLAMA",
            "LLAMA_SPIT",
            "PARROT",
            "VILLAGER",
            "ENDER_CRYSTAL",
            "TURTLE",
            "PHANTOM",
            "TRIDENT",
            "COD",
            "SALMON",
            "PUFFERFISH",
            "TROPICAL_FISH",
            "DROWNED",
            "DOLPHIN",
            "CAT",
            "PANDA",
            "PILLAGER",
            "RAVAGER",
            "TRADER_LLAMA",
            "WANDERING_TRADER",
            "FOX",
            "BEE",
            "HOGLIN",
            "PIGLIN",
            "STRIDER",
            "ZOGLIN",
            "PIGLIN_BRUTE",
            "AXOLOTL",
            "GLOW_ITEM_FRAME",
            "GLOW_SQUID",
            "GOAT",
            "MARKER",
            "ALLAY",
            "CHEST_BOAT",
            "FROG",
            "TADPOLE",
            "WARDEN",
            "FISHING_HOOK",
            "LIGHTNING",
            "PLAYER",
            "UNKNOWN"
        ]},
        "enum-org-bukkit-sound": {"enum": [
            "AMBIENT_BASALT_DELTAS_ADDITIONS",
            "AMBIENT_BASALT_DELTAS_LOOP",
            "AMBIENT_BASALT_DELTAS_MOOD",
            "AMBIENT_CAVE",
            "AMBIENT_CRIMSON_FOREST_ADDITIONS",
            "AMBIENT_CRIMSON_FOREST_LOOP",
            "AMBIENT_CRIMSON_FOREST_MOOD",
            "AMBIENT_NETHER_WASTES_ADDITIONS",
            "AMBIENT_NETHER_WASTES_LOOP",
            "AMBIENT_NETHER_WASTES_MOOD",
            "AMBIENT_SOUL_SAND_VALLEY_ADDITIONS",
            "AMBIENT_SOUL_SAND_VALLEY_LOOP",
            "AMBIENT_SOUL_SAND_VALLEY_MOOD",
            "AMBIENT_UNDERWATER_ENTER",
            "AMBIENT_UNDERWATER_EXIT",
            "AMBIENT_UNDERWATER_LOOP",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE",
            "AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE",
            "AMBIENT_WARPED_FOREST_ADDITIONS",
            "AMBIENT_WARPED_FOREST_LOOP",
            "AMBIENT_WARPED_FOREST_MOOD",
            "BLOCK_AMETHYST_BLOCK_BREAK",
            "BLOCK_AMETHYST_BLOCK_CHIME",
            "BLOCK_AMETHYST_BLOCK_FALL",
            "BLOCK_AMETHYST_BLOCK_HIT",
            "BLOCK_AMETHYST_BLOCK_PLACE",
            "BLOCK_AMETHYST_BLOCK_STEP",
            "BLOCK_AMETHYST_CLUSTER_BREAK",
            "BLOCK_AMETHYST_CLUSTER_FALL",
            "BLOCK_AMETHYST_CLUSTER_HIT",
            "BLOCK_AMETHYST_CLUSTER_PLACE",
            "BLOCK_AMETHYST_CLUSTER_STEP",
            "BLOCK_ANCIENT_DEBRIS_BREAK",
            "BLOCK_ANCIENT_DEBRIS_FALL",
            "BLOCK_ANCIENT_DEBRIS_HIT",
            "BLOCK_ANCIENT_DEBRIS_PLACE",
            "BLOCK_ANCIENT_DEBRIS_STEP",
            "BLOCK_ANVIL_BREAK",
            "BLOCK_ANVIL_DESTROY",
            "BLOCK_ANVIL_FALL",
            "BLOCK_ANVIL_HIT",
            "BLOCK_ANVIL_LAND",
            "BLOCK_ANVIL_PLACE",
            "BLOCK_ANVIL_STEP",
            "BLOCK_ANVIL_USE",
            "BLOCK_AZALEA_BREAK",
            "BLOCK_AZALEA_FALL",
            "BLOCK_AZALEA_HIT",
            "BLOCK_AZALEA_LEAVES_BREAK",
            "BLOCK_AZALEA_LEAVES_FALL",
            "BLOCK_AZALEA_LEAVES_HIT",
            "BLOCK_AZALEA_LEAVES_PLACE",
            "BLOCK_AZALEA_LEAVES_STEP",
            "BLOCK_AZALEA_PLACE",
            "BLOCK_AZALEA_STEP",
            "BLOCK_BAMBOO_BREAK",
            "BLOCK_BAMBOO_FALL",
            "BLOCK_BAMBOO_HIT",
            "BLOCK_BAMBOO_PLACE",
            "BLOCK_BAMBOO_SAPLING_BREAK",
            "BLOCK_BAMBOO_SAPLING_HIT",
            "BLOCK_BAMBOO_SAPLING_PLACE",
            "BLOCK_BAMBOO_STEP",
            "BLOCK_BARREL_CLOSE",
            "BLOCK_BARREL_OPEN",
            "BLOCK_BASALT_BREAK",
            "BLOCK_BASALT_FALL",
            "BLOCK_BASALT_HIT",
            "BLOCK_BASALT_PLACE",
            "BLOCK_BASALT_STEP",
            "BLOCK_BEACON_ACTIVATE",
            "BLOCK_BEACON_AMBIENT",
            "BLOCK_BEACON_DEACTIVATE",
            "BLOCK_BEACON_POWER_SELECT",
            "BLOCK_BEEHIVE_DRIP",
            "BLOCK_BEEHIVE_ENTER",
            "BLOCK_BEEHIVE_EXIT",
            "BLOCK_BEEHIVE_SHEAR",
            "BLOCK_BEEHIVE_WORK",
            "BLOCK_BELL_RESONATE",
            "BLOCK_BELL_USE",
            "BLOCK_BIG_DRIPLEAF_BREAK",
            "BLOCK_BIG_DRIPLEAF_FALL",
            "BLOCK_BIG_DRIPLEAF_HIT",
            "BLOCK_BIG_DRIPLEAF_PLACE",
            "BLOCK_BIG_DRIPLEAF_STEP",
            "BLOCK_BIG_DRIPLEAF_TILT_DOWN",
            "BLOCK_BIG_DRIPLEAF_TILT_UP",
            "BLOCK_BLASTFURNACE_FIRE_CRACKLE",
            "BLOCK_BONE_BLOCK_BREAK",
            "BLOCK_BONE_BLOCK_FALL",
            "BLOCK_BONE_BLOCK_HIT",
            "BLOCK_BONE_BLOCK_PLACE",
            "BLOCK_BONE_BLOCK_STEP",
            "BLOCK_BREWING_STAND_BREW",
            "BLOCK_BUBBLE_COLUMN_BUBBLE_POP",
            "BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT",
            "BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE",
            "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT",
            "BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE",
            "BLOCK_CAKE_ADD_CANDLE",
            "BLOCK_CALCITE_BREAK",
            "BLOCK_CALCITE_FALL",
            "BLOCK_CALCITE_HIT",
            "BLOCK_CALCITE_PLACE",
            "BLOCK_CALCITE_STEP",
            "BLOCK_CAMPFIRE_CRACKLE",
            "BLOCK_CANDLE_AMBIENT",
            "BLOCK_CANDLE_BREAK",
            "BLOCK_CANDLE_EXTINGUISH",
            "BLOCK_CANDLE_FALL",
            "BLOCK_CANDLE_HIT",
            "BLOCK_CANDLE_PLACE",
            "BLOCK_CANDLE_STEP",
            "BLOCK_CAVE_VINES_BREAK",
            "BLOCK_CAVE_VINES_FALL",
            "BLOCK_CAVE_VINES_HIT",
            "BLOCK_CAVE_VINES_PICK_BERRIES",
            "BLOCK_CAVE_VINES_PLACE",
            "BLOCK_CAVE_VINES_STEP",
            "BLOCK_CHAIN_BREAK",
            "BLOCK_CHAIN_FALL",
            "BLOCK_CHAIN_HIT",
            "BLOCK_CHAIN_PLACE",
            "BLOCK_CHAIN_STEP",
            "BLOCK_CHEST_CLOSE",
            "BLOCK_CHEST_LOCKED",
            "BLOCK_CHEST_OPEN",
            "BLOCK_CHORUS_FLOWER_DEATH",
            "BLOCK_CHORUS_FLOWER_GROW",
            "BLOCK_COMPARATOR_CLICK",
            "BLOCK_COMPOSTER_EMPTY",
            "BLOCK_COMPOSTER_FILL",
            "BLOCK_COMPOSTER_FILL_SUCCESS",
            "BLOCK_COMPOSTER_READY",
            "BLOCK_CONDUIT_ACTIVATE",
            "BLOCK_CONDUIT_AMBIENT",
            "BLOCK_CONDUIT_AMBIENT_SHORT",
            "BLOCK_CONDUIT_ATTACK_TARGET",
            "BLOCK_CONDUIT_DEACTIVATE",
            "BLOCK_COPPER_BREAK",
            "BLOCK_COPPER_FALL",
            "BLOCK_COPPER_HIT",
            "BLOCK_COPPER_PLACE",
            "BLOCK_COPPER_STEP",
            "BLOCK_CORAL_BLOCK_BREAK",
            "BLOCK_CORAL_BLOCK_FALL",
            "BLOCK_CORAL_BLOCK_HIT",
            "BLOCK_CORAL_BLOCK_PLACE",
            "BLOCK_CORAL_BLOCK_STEP",
            "BLOCK_CROP_BREAK",
            "BLOCK_DEEPSLATE_BREAK",
            "BLOCK_DEEPSLATE_BRICKS_BREAK",
            "BLOCK_DEEPSLATE_BRICKS_FALL",
            "BLOCK_DEEPSLATE_BRICKS_HIT",
            "BLOCK_DEEPSLATE_BRICKS_PLACE",
            "BLOCK_DEEPSLATE_BRICKS_STEP",
            "BLOCK_DEEPSLATE_FALL",
            "BLOCK_DEEPSLATE_HIT",
            "BLOCK_DEEPSLATE_PLACE",
            "BLOCK_DEEPSLATE_STEP",
            "BLOCK_DEEPSLATE_TILES_BREAK",
            "BLOCK_DEEPSLATE_TILES_FALL",
            "BLOCK_DEEPSLATE_TILES_HIT",
            "BLOCK_DEEPSLATE_TILES_PLACE",
            "BLOCK_DEEPSLATE_TILES_STEP",
            "BLOCK_DISPENSER_DISPENSE",
            "BLOCK_DISPENSER_FAIL",
            "BLOCK_DISPENSER_LAUNCH",
            "BLOCK_DRIPSTONE_BLOCK_BREAK",
            "BLOCK_DRIPSTONE_BLOCK_FALL",
            "BLOCK_DRIPSTONE_BLOCK_HIT",
            "BLOCK_DRIPSTONE_BLOCK_PLACE",
            "BLOCK_DRIPSTONE_BLOCK_STEP",
            "BLOCK_ENCHANTMENT_TABLE_USE",
            "BLOCK_ENDER_CHEST_CLOSE",
            "BLOCK_ENDER_CHEST_OPEN",
            "BLOCK_END_GATEWAY_SPAWN",
            "BLOCK_END_PORTAL_FRAME_FILL",
            "BLOCK_END_PORTAL_SPAWN",
            "BLOCK_FENCE_GATE_CLOSE",
            "BLOCK_FENCE_GATE_OPEN",
            "BLOCK_FIRE_AMBIENT",
            "BLOCK_FIRE_EXTINGUISH",
            "BLOCK_FLOWERING_AZALEA_BREAK",
            "BLOCK_FLOWERING_AZALEA_FALL",
            "BLOCK_FLOWERING_AZALEA_HIT",
            "BLOCK_FLOWERING_AZALEA_PLACE",
            "BLOCK_FLOWERING_AZALEA_STEP",
            "BLOCK_FROGLIGHT_BREAK",
            "BLOCK_FROGLIGHT_FALL",
            "BLOCK_FROGLIGHT_HIT",
            "BLOCK_FROGLIGHT_PLACE",
            "BLOCK_FROGLIGHT_STEP",
            "BLOCK_FROGSPAWN_BREAK",
            "BLOCK_FROGSPAWN_FALL",
            "BLOCK_FROGSPAWN_HATCH",
            "BLOCK_FROGSPAWN_HIT",
            "BLOCK_FROGSPAWN_PLACE",
            "BLOCK_FROGSPAWN_STEP",
            "BLOCK_FUNGUS_BREAK",
            "BLOCK_FUNGUS_FALL",
            "BLOCK_FUNGUS_HIT",
            "BLOCK_FUNGUS_PLACE",
            "BLOCK_FUNGUS_STEP",
            "BLOCK_FURNACE_FIRE_CRACKLE",
            "BLOCK_GILDED_BLACKSTONE_BREAK",
            "BLOCK_GILDED_BLACKSTONE_FALL",
            "BLOCK_GILDED_BLACKSTONE_HIT",
            "BLOCK_GILDED_BLACKSTONE_PLACE",
            "BLOCK_GILDED_BLACKSTONE_STEP",
            "BLOCK_GLASS_BREAK",
            "BLOCK_GLASS_FALL",
            "BLOCK_GLASS_HIT",
            "BLOCK_GLASS_PLACE",
            "BLOCK_GLASS_STEP",
            "BLOCK_GRASS_BREAK",
            "BLOCK_GRASS_FALL",
            "BLOCK_GRASS_HIT",
            "BLOCK_GRASS_PLACE",
            "BLOCK_GRASS_STEP",
            "BLOCK_GRAVEL_BREAK",
            "BLOCK_GRAVEL_FALL",
            "BLOCK_GRAVEL_HIT",
            "BLOCK_GRAVEL_PLACE",
            "BLOCK_GRAVEL_STEP",
            "BLOCK_GRINDSTONE_USE",
            "BLOCK_GROWING_PLANT_CROP",
            "BLOCK_HANGING_ROOTS_BREAK",
            "BLOCK_HANGING_ROOTS_FALL",
            "BLOCK_HANGING_ROOTS_HIT",
            "BLOCK_HANGING_ROOTS_PLACE",
            "BLOCK_HANGING_ROOTS_STEP",
            "BLOCK_HONEY_BLOCK_BREAK",
            "BLOCK_HONEY_BLOCK_FALL",
            "BLOCK_HONEY_BLOCK_HIT",
            "BLOCK_HONEY_BLOCK_PLACE",
            "BLOCK_HONEY_BLOCK_SLIDE",
            "BLOCK_HONEY_BLOCK_STEP",
            "BLOCK_IRON_DOOR_CLOSE",
            "BLOCK_IRON_DOOR_OPEN",
            "BLOCK_IRON_TRAPDOOR_CLOSE",
            "BLOCK_IRON_TRAPDOOR_OPEN",
            "BLOCK_LADDER_BREAK",
            "BLOCK_LADDER_FALL",
            "BLOCK_LADDER_HIT",
            "BLOCK_LADDER_PLACE",
            "BLOCK_LADDER_STEP",
            "BLOCK_LANTERN_BREAK",
            "BLOCK_LANTERN_FALL",
            "BLOCK_LANTERN_HIT",
            "BLOCK_LANTERN_PLACE",
            "BLOCK_LANTERN_STEP",
            "BLOCK_LARGE_AMETHYST_BUD_BREAK",
            "BLOCK_LARGE_AMETHYST_BUD_PLACE",
            "BLOCK_LAVA_AMBIENT",
            "BLOCK_LAVA_EXTINGUISH",
            "BLOCK_LAVA_POP",
            "BLOCK_LEVER_CLICK",
            "BLOCK_LILY_PAD_PLACE",
            "BLOCK_LODESTONE_BREAK",
            "BLOCK_LODESTONE_FALL",
            "BLOCK_LODESTONE_HIT",
            "BLOCK_LODESTONE_PLACE",
            "BLOCK_LODESTONE_STEP",
            "BLOCK_MANGROVE_ROOTS_BREAK",
            "BLOCK_MANGROVE_ROOTS_FALL",
            "BLOCK_MANGROVE_ROOTS_HIT",
            "BLOCK_MANGROVE_ROOTS_PLACE",
            "BLOCK_MANGROVE_ROOTS_STEP",
            "BLOCK_MEDIUM_AMETHYST_BUD_BREAK",
            "BLOCK_MEDIUM_AMETHYST_BUD_PLACE",
            "BLOCK_METAL_BREAK",
            "BLOCK_METAL_FALL",
            "BLOCK_METAL_HIT",
            "BLOCK_METAL_PLACE",
            "BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_METAL_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_METAL_STEP",
            "BLOCK_MOSS_BREAK",
            "BLOCK_MOSS_CARPET_BREAK",
            "BLOCK_MOSS_CARPET_FALL",
            "BLOCK_MOSS_CARPET_HIT",
            "BLOCK_MOSS_CARPET_PLACE",
            "BLOCK_MOSS_CARPET_STEP",
            "BLOCK_MOSS_FALL",
            "BLOCK_MOSS_HIT",
            "BLOCK_MOSS_PLACE",
            "BLOCK_MOSS_STEP",
            "BLOCK_MUDDY_MANGROVE_ROOTS_BREAK",
            "BLOCK_MUDDY_MANGROVE_ROOTS_FALL",
            "BLOCK_MUDDY_MANGROVE_ROOTS_HIT",
            "BLOCK_MUDDY_MANGROVE_ROOTS_PLACE",
            "BLOCK_MUDDY_MANGROVE_ROOTS_STEP",
            "BLOCK_MUD_BREAK",
            "BLOCK_MUD_BRICKS_BREAK",
            "BLOCK_MUD_BRICKS_FALL",
            "BLOCK_MUD_BRICKS_HIT",
            "BLOCK_MUD_BRICKS_PLACE",
            "BLOCK_MUD_BRICKS_STEP",
            "BLOCK_MUD_FALL",
            "BLOCK_MUD_HIT",
            "BLOCK_MUD_PLACE",
            "BLOCK_MUD_STEP",
            "BLOCK_NETHERITE_BLOCK_BREAK",
            "BLOCK_NETHERITE_BLOCK_FALL",
            "BLOCK_NETHERITE_BLOCK_HIT",
            "BLOCK_NETHERITE_BLOCK_PLACE",
            "BLOCK_NETHERITE_BLOCK_STEP",
            "BLOCK_NETHERRACK_BREAK",
            "BLOCK_NETHERRACK_FALL",
            "BLOCK_NETHERRACK_HIT",
            "BLOCK_NETHERRACK_PLACE",
            "BLOCK_NETHERRACK_STEP",
            "BLOCK_NETHER_BRICKS_BREAK",
            "BLOCK_NETHER_BRICKS_FALL",
            "BLOCK_NETHER_BRICKS_HIT",
            "BLOCK_NETHER_BRICKS_PLACE",
            "BLOCK_NETHER_BRICKS_STEP",
            "BLOCK_NETHER_GOLD_ORE_BREAK",
            "BLOCK_NETHER_GOLD_ORE_FALL",
            "BLOCK_NETHER_GOLD_ORE_HIT",
            "BLOCK_NETHER_GOLD_ORE_PLACE",
            "BLOCK_NETHER_GOLD_ORE_STEP",
            "BLOCK_NETHER_ORE_BREAK",
            "BLOCK_NETHER_ORE_FALL",
            "BLOCK_NETHER_ORE_HIT",
            "BLOCK_NETHER_ORE_PLACE",
            "BLOCK_NETHER_ORE_STEP",
            "BLOCK_NETHER_SPROUTS_BREAK",
            "BLOCK_NETHER_SPROUTS_FALL",
            "BLOCK_NETHER_SPROUTS_HIT",
            "BLOCK_NETHER_SPROUTS_PLACE",
            "BLOCK_NETHER_SPROUTS_STEP",
            "BLOCK_NETHER_WART_BREAK",
            "BLOCK_NOTE_BLOCK_BANJO",
            "BLOCK_NOTE_BLOCK_BASEDRUM",
            "BLOCK_NOTE_BLOCK_BASS",
            "BLOCK_NOTE_BLOCK_BELL",
            "BLOCK_NOTE_BLOCK_BIT",
            "BLOCK_NOTE_BLOCK_CHIME",
            "BLOCK_NOTE_BLOCK_COW_BELL",
            "BLOCK_NOTE_BLOCK_DIDGERIDOO",
            "BLOCK_NOTE_BLOCK_FLUTE",
            "BLOCK_NOTE_BLOCK_GUITAR",
            "BLOCK_NOTE_BLOCK_HARP",
            "BLOCK_NOTE_BLOCK_HAT",
            "BLOCK_NOTE_BLOCK_IRON_XYLOPHONE",
            "BLOCK_NOTE_BLOCK_PLING",
            "BLOCK_NOTE_BLOCK_SNARE",
            "BLOCK_NOTE_BLOCK_XYLOPHONE",
            "BLOCK_NYLIUM_BREAK",
            "BLOCK_NYLIUM_FALL",
            "BLOCK_NYLIUM_HIT",
            "BLOCK_NYLIUM_PLACE",
            "BLOCK_NYLIUM_STEP",
            "BLOCK_PACKED_MUD_BREAK",
            "BLOCK_PACKED_MUD_FALL",
            "BLOCK_PACKED_MUD_HIT",
            "BLOCK_PACKED_MUD_PLACE",
            "BLOCK_PACKED_MUD_STEP",
            "BLOCK_PISTON_CONTRACT",
            "BLOCK_PISTON_EXTEND",
            "BLOCK_POINTED_DRIPSTONE_BREAK",
            "BLOCK_POINTED_DRIPSTONE_DRIP_LAVA",
            "BLOCK_POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON",
            "BLOCK_POINTED_DRIPSTONE_DRIP_WATER",
            "BLOCK_POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON",
            "BLOCK_POINTED_DRIPSTONE_FALL",
            "BLOCK_POINTED_DRIPSTONE_HIT",
            "BLOCK_POINTED_DRIPSTONE_LAND",
            "BLOCK_POINTED_DRIPSTONE_PLACE",
            "BLOCK_POINTED_DRIPSTONE_STEP",
            "BLOCK_POLISHED_DEEPSLATE_BREAK",
            "BLOCK_POLISHED_DEEPSLATE_FALL",
            "BLOCK_POLISHED_DEEPSLATE_HIT",
            "BLOCK_POLISHED_DEEPSLATE_PLACE",
            "BLOCK_POLISHED_DEEPSLATE_STEP",
            "BLOCK_PORTAL_AMBIENT",
            "BLOCK_PORTAL_TRAVEL",
            "BLOCK_PORTAL_TRIGGER",
            "BLOCK_POWDER_SNOW_BREAK",
            "BLOCK_POWDER_SNOW_FALL",
            "BLOCK_POWDER_SNOW_HIT",
            "BLOCK_POWDER_SNOW_PLACE",
            "BLOCK_POWDER_SNOW_STEP",
            "BLOCK_PUMPKIN_CARVE",
            "BLOCK_REDSTONE_TORCH_BURNOUT",
            "BLOCK_RESPAWN_ANCHOR_AMBIENT",
            "BLOCK_RESPAWN_ANCHOR_CHARGE",
            "BLOCK_RESPAWN_ANCHOR_DEPLETE",
            "BLOCK_RESPAWN_ANCHOR_SET_SPAWN",
            "BLOCK_ROOTED_DIRT_BREAK",
            "BLOCK_ROOTED_DIRT_FALL",
            "BLOCK_ROOTED_DIRT_HIT",
            "BLOCK_ROOTED_DIRT_PLACE",
            "BLOCK_ROOTED_DIRT_STEP",
            "BLOCK_ROOTS_BREAK",
            "BLOCK_ROOTS_FALL",
            "BLOCK_ROOTS_HIT",
            "BLOCK_ROOTS_PLACE",
            "BLOCK_ROOTS_STEP",
            "BLOCK_SAND_BREAK",
            "BLOCK_SAND_FALL",
            "BLOCK_SAND_HIT",
            "BLOCK_SAND_PLACE",
            "BLOCK_SAND_STEP",
            "BLOCK_SCAFFOLDING_BREAK",
            "BLOCK_SCAFFOLDING_FALL",
            "BLOCK_SCAFFOLDING_HIT",
            "BLOCK_SCAFFOLDING_PLACE",
            "BLOCK_SCAFFOLDING_STEP",
            "BLOCK_SCULK_BREAK",
            "BLOCK_SCULK_CATALYST_BLOOM",
            "BLOCK_SCULK_CATALYST_BREAK",
            "BLOCK_SCULK_CATALYST_FALL",
            "BLOCK_SCULK_CATALYST_HIT",
            "BLOCK_SCULK_CATALYST_PLACE",
            "BLOCK_SCULK_CATALYST_STEP",
            "BLOCK_SCULK_CHARGE",
            "BLOCK_SCULK_FALL",
            "BLOCK_SCULK_HIT",
            "BLOCK_SCULK_PLACE",
            "BLOCK_SCULK_SENSOR_BREAK",
            "BLOCK_SCULK_SENSOR_CLICKING",
            "BLOCK_SCULK_SENSOR_CLICKING_STOP",
            "BLOCK_SCULK_SENSOR_FALL",
            "BLOCK_SCULK_SENSOR_HIT",
            "BLOCK_SCULK_SENSOR_PLACE",
            "BLOCK_SCULK_SENSOR_STEP",
            "BLOCK_SCULK_SHRIEKER_BREAK",
            "BLOCK_SCULK_SHRIEKER_FALL",
            "BLOCK_SCULK_SHRIEKER_HIT",
            "BLOCK_SCULK_SHRIEKER_PLACE",
            "BLOCK_SCULK_SHRIEKER_SHRIEK",
            "BLOCK_SCULK_SHRIEKER_STEP",
            "BLOCK_SCULK_SPREAD",
            "BLOCK_SCULK_STEP",
            "BLOCK_SCULK_VEIN_BREAK",
            "BLOCK_SCULK_VEIN_FALL",
            "BLOCK_SCULK_VEIN_HIT",
            "BLOCK_SCULK_VEIN_PLACE",
            "BLOCK_SCULK_VEIN_STEP",
            "BLOCK_SHROOMLIGHT_BREAK",
            "BLOCK_SHROOMLIGHT_FALL",
            "BLOCK_SHROOMLIGHT_HIT",
            "BLOCK_SHROOMLIGHT_PLACE",
            "BLOCK_SHROOMLIGHT_STEP",
            "BLOCK_SHULKER_BOX_CLOSE",
            "BLOCK_SHULKER_BOX_OPEN",
            "BLOCK_SLIME_BLOCK_BREAK",
            "BLOCK_SLIME_BLOCK_FALL",
            "BLOCK_SLIME_BLOCK_HIT",
            "BLOCK_SLIME_BLOCK_PLACE",
            "BLOCK_SLIME_BLOCK_STEP",
            "BLOCK_SMALL_AMETHYST_BUD_BREAK",
            "BLOCK_SMALL_AMETHYST_BUD_PLACE",
            "BLOCK_SMALL_DRIPLEAF_BREAK",
            "BLOCK_SMALL_DRIPLEAF_FALL",
            "BLOCK_SMALL_DRIPLEAF_HIT",
            "BLOCK_SMALL_DRIPLEAF_PLACE",
            "BLOCK_SMALL_DRIPLEAF_STEP",
            "BLOCK_SMITHING_TABLE_USE",
            "BLOCK_SMOKER_SMOKE",
            "BLOCK_SNOW_BREAK",
            "BLOCK_SNOW_FALL",
            "BLOCK_SNOW_HIT",
            "BLOCK_SNOW_PLACE",
            "BLOCK_SNOW_STEP",
            "BLOCK_SOUL_SAND_BREAK",
            "BLOCK_SOUL_SAND_FALL",
            "BLOCK_SOUL_SAND_HIT",
            "BLOCK_SOUL_SAND_PLACE",
            "BLOCK_SOUL_SAND_STEP",
            "BLOCK_SOUL_SOIL_BREAK",
            "BLOCK_SOUL_SOIL_FALL",
            "BLOCK_SOUL_SOIL_HIT",
            "BLOCK_SOUL_SOIL_PLACE",
            "BLOCK_SOUL_SOIL_STEP",
            "BLOCK_SPORE_BLOSSOM_BREAK",
            "BLOCK_SPORE_BLOSSOM_FALL",
            "BLOCK_SPORE_BLOSSOM_HIT",
            "BLOCK_SPORE_BLOSSOM_PLACE",
            "BLOCK_SPORE_BLOSSOM_STEP",
            "BLOCK_STEM_BREAK",
            "BLOCK_STEM_FALL",
            "BLOCK_STEM_HIT",
            "BLOCK_STEM_PLACE",
            "BLOCK_STEM_STEP",
            "BLOCK_STONE_BREAK",
            "BLOCK_STONE_BUTTON_CLICK_OFF",
            "BLOCK_STONE_BUTTON_CLICK_ON",
            "BLOCK_STONE_FALL",
            "BLOCK_STONE_HIT",
            "BLOCK_STONE_PLACE",
            "BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_STONE_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_STONE_STEP",
            "BLOCK_SWEET_BERRY_BUSH_BREAK",
            "BLOCK_SWEET_BERRY_BUSH_PICK_BERRIES",
            "BLOCK_SWEET_BERRY_BUSH_PLACE",
            "BLOCK_TRIPWIRE_ATTACH",
            "BLOCK_TRIPWIRE_CLICK_OFF",
            "BLOCK_TRIPWIRE_CLICK_ON",
            "BLOCK_TRIPWIRE_DETACH",
            "BLOCK_TUFF_BREAK",
            "BLOCK_TUFF_FALL",
            "BLOCK_TUFF_HIT",
            "BLOCK_TUFF_PLACE",
            "BLOCK_TUFF_STEP",
            "BLOCK_VINE_BREAK",
            "BLOCK_VINE_FALL",
            "BLOCK_VINE_HIT",
            "BLOCK_VINE_PLACE",
            "BLOCK_VINE_STEP",
            "BLOCK_WART_BLOCK_BREAK",
            "BLOCK_WART_BLOCK_FALL",
            "BLOCK_WART_BLOCK_HIT",
            "BLOCK_WART_BLOCK_PLACE",
            "BLOCK_WART_BLOCK_STEP",
            "BLOCK_WATER_AMBIENT",
            "BLOCK_WEEPING_VINES_BREAK",
            "BLOCK_WEEPING_VINES_FALL",
            "BLOCK_WEEPING_VINES_HIT",
            "BLOCK_WEEPING_VINES_PLACE",
            "BLOCK_WEEPING_VINES_STEP",
            "BLOCK_WET_GRASS_BREAK",
            "BLOCK_WET_GRASS_FALL",
            "BLOCK_WET_GRASS_HIT",
            "BLOCK_WET_GRASS_PLACE",
            "BLOCK_WET_GRASS_STEP",
            "BLOCK_WOODEN_BUTTON_CLICK_OFF",
            "BLOCK_WOODEN_BUTTON_CLICK_ON",
            "BLOCK_WOODEN_DOOR_CLOSE",
            "BLOCK_WOODEN_DOOR_OPEN",
            "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF",
            "BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON",
            "BLOCK_WOODEN_TRAPDOOR_CLOSE",
            "BLOCK_WOODEN_TRAPDOOR_OPEN",
            "BLOCK_WOOD_BREAK",
            "BLOCK_WOOD_FALL",
            "BLOCK_WOOD_HIT",
            "BLOCK_WOOD_PLACE",
            "BLOCK_WOOD_STEP",
            "BLOCK_WOOL_BREAK",
            "BLOCK_WOOL_FALL",
            "BLOCK_WOOL_HIT",
            "BLOCK_WOOL_PLACE",
            "BLOCK_WOOL_STEP",
            "ENCHANT_THORNS_HIT",
            "ENTITY_ALLAY_AMBIENT_WITHOUT_ITEM",
            "ENTITY_ALLAY_AMBIENT_WITH_ITEM",
            "ENTITY_ALLAY_DEATH",
            "ENTITY_ALLAY_HURT",
            "ENTITY_ALLAY_ITEM_GIVEN",
            "ENTITY_ALLAY_ITEM_TAKEN",
            "ENTITY_ALLAY_ITEM_THROWN",
            "ENTITY_ARMOR_STAND_BREAK",
            "ENTITY_ARMOR_STAND_FALL",
            "ENTITY_ARMOR_STAND_HIT",
            "ENTITY_ARMOR_STAND_PLACE",
            "ENTITY_ARROW_HIT",
            "ENTITY_ARROW_HIT_PLAYER",
            "ENTITY_ARROW_SHOOT",
            "ENTITY_AXOLOTL_ATTACK",
            "ENTITY_AXOLOTL_DEATH",
            "ENTITY_AXOLOTL_HURT",
            "ENTITY_AXOLOTL_IDLE_AIR",
            "ENTITY_AXOLOTL_IDLE_WATER",
            "ENTITY_AXOLOTL_SPLASH",
            "ENTITY_AXOLOTL_SWIM",
            "ENTITY_BAT_AMBIENT",
            "ENTITY_BAT_DEATH",
            "ENTITY_BAT_HURT",
            "ENTITY_BAT_LOOP",
            "ENTITY_BAT_TAKEOFF",
            "ENTITY_BEE_DEATH",
            "ENTITY_BEE_HURT",
            "ENTITY_BEE_LOOP",
            "ENTITY_BEE_LOOP_AGGRESSIVE",
            "ENTITY_BEE_POLLINATE",
            "ENTITY_BEE_STING",
            "ENTITY_BLAZE_AMBIENT",
            "ENTITY_BLAZE_BURN",
            "ENTITY_BLAZE_DEATH",
            "ENTITY_BLAZE_HURT",
            "ENTITY_BLAZE_SHOOT",
            "ENTITY_BOAT_PADDLE_LAND",
            "ENTITY_BOAT_PADDLE_WATER",
            "ENTITY_CAT_AMBIENT",
            "ENTITY_CAT_BEG_FOR_FOOD",
            "ENTITY_CAT_DEATH",
            "ENTITY_CAT_EAT",
            "ENTITY_CAT_HISS",
            "ENTITY_CAT_HURT",
            "ENTITY_CAT_PURR",
            "ENTITY_CAT_PURREOW",
            "ENTITY_CAT_STRAY_AMBIENT",
            "ENTITY_CHICKEN_AMBIENT",
            "ENTITY_CHICKEN_DEATH",
            "ENTITY_CHICKEN_EGG",
            "ENTITY_CHICKEN_HURT",
            "ENTITY_CHICKEN_STEP",
            "ENTITY_COD_AMBIENT",
            "ENTITY_COD_DEATH",
            "ENTITY_COD_FLOP",
            "ENTITY_COD_HURT",
            "ENTITY_COW_AMBIENT",
            "ENTITY_COW_DEATH",
            "ENTITY_COW_HURT",
            "ENTITY_COW_MILK",
            "ENTITY_COW_STEP",
            "ENTITY_CREEPER_DEATH",
            "ENTITY_CREEPER_HURT",
            "ENTITY_CREEPER_PRIMED",
            "ENTITY_DOLPHIN_AMBIENT",
            "ENTITY_DOLPHIN_AMBIENT_WATER",
            "ENTITY_DOLPHIN_ATTACK",
            "ENTITY_DOLPHIN_DEATH",
            "ENTITY_DOLPHIN_EAT",
            "ENTITY_DOLPHIN_HURT",
            "ENTITY_DOLPHIN_JUMP",
            "ENTITY_DOLPHIN_PLAY",
            "ENTITY_DOLPHIN_SPLASH",
            "ENTITY_DOLPHIN_SWIM",
            "ENTITY_DONKEY_AMBIENT",
            "ENTITY_DONKEY_ANGRY",
            "ENTITY_DONKEY_CHEST",
            "ENTITY_DONKEY_DEATH",
            "ENTITY_DONKEY_EAT",
            "ENTITY_DONKEY_HURT",
            "ENTITY_DRAGON_FIREBALL_EXPLODE",
            "ENTITY_DROWNED_AMBIENT",
            "ENTITY_DROWNED_AMBIENT_WATER",
            "ENTITY_DROWNED_DEATH",
            "ENTITY_DROWNED_DEATH_WATER",
            "ENTITY_DROWNED_HURT",
            "ENTITY_DROWNED_HURT_WATER",
            "ENTITY_DROWNED_SHOOT",
            "ENTITY_DROWNED_STEP",
            "ENTITY_DROWNED_SWIM",
            "ENTITY_EGG_THROW",
            "ENTITY_ELDER_GUARDIAN_AMBIENT",
            "ENTITY_ELDER_GUARDIAN_AMBIENT_LAND",
            "ENTITY_ELDER_GUARDIAN_CURSE",
            "ENTITY_ELDER_GUARDIAN_DEATH",
            "ENTITY_ELDER_GUARDIAN_DEATH_LAND",
            "ENTITY_ELDER_GUARDIAN_FLOP",
            "ENTITY_ELDER_GUARDIAN_HURT",
            "ENTITY_ELDER_GUARDIAN_HURT_LAND",
            "ENTITY_ENDERMAN_AMBIENT",
            "ENTITY_ENDERMAN_DEATH",
            "ENTITY_ENDERMAN_HURT",
            "ENTITY_ENDERMAN_SCREAM",
            "ENTITY_ENDERMAN_STARE",
            "ENTITY_ENDERMAN_TELEPORT",
            "ENTITY_ENDERMITE_AMBIENT",
            "ENTITY_ENDERMITE_DEATH",
            "ENTITY_ENDERMITE_HURT",
            "ENTITY_ENDERMITE_STEP",
            "ENTITY_ENDER_DRAGON_AMBIENT",
            "ENTITY_ENDER_DRAGON_DEATH",
            "ENTITY_ENDER_DRAGON_FLAP",
            "ENTITY_ENDER_DRAGON_GROWL",
            "ENTITY_ENDER_DRAGON_HURT",
            "ENTITY_ENDER_DRAGON_SHOOT",
            "ENTITY_ENDER_EYE_DEATH",
            "ENTITY_ENDER_EYE_LAUNCH",
            "ENTITY_ENDER_PEARL_THROW",
            "ENTITY_EVOKER_AMBIENT",
            "ENTITY_EVOKER_CAST_SPELL",
            "ENTITY_EVOKER_CELEBRATE",
            "ENTITY_EVOKER_DEATH",
            "ENTITY_EVOKER_FANGS_ATTACK",
            "ENTITY_EVOKER_HURT",
            "ENTITY_EVOKER_PREPARE_ATTACK",
            "ENTITY_EVOKER_PREPARE_SUMMON",
            "ENTITY_EVOKER_PREPARE_WOLOLO",
            "ENTITY_EXPERIENCE_BOTTLE_THROW",
            "ENTITY_EXPERIENCE_ORB_PICKUP",
            "ENTITY_FIREWORK_ROCKET_BLAST",
            "ENTITY_FIREWORK_ROCKET_BLAST_FAR",
            "ENTITY_FIREWORK_ROCKET_LARGE_BLAST",
            "ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR",
            "ENTITY_FIREWORK_ROCKET_LAUNCH",
            "ENTITY_FIREWORK_ROCKET_SHOOT",
            "ENTITY_FIREWORK_ROCKET_TWINKLE",
            "ENTITY_FIREWORK_ROCKET_TWINKLE_FAR",
            "ENTITY_FISHING_BOBBER_RETRIEVE",
            "ENTITY_FISHING_BOBBER_SPLASH",
            "ENTITY_FISHING_BOBBER_THROW",
            "ENTITY_FISH_SWIM",
            "ENTITY_FOX_AGGRO",
            "ENTITY_FOX_AMBIENT",
            "ENTITY_FOX_BITE",
            "ENTITY_FOX_DEATH",
            "ENTITY_FOX_EAT",
            "ENTITY_FOX_HURT",
            "ENTITY_FOX_SCREECH",
            "ENTITY_FOX_SLEEP",
            "ENTITY_FOX_SNIFF",
            "ENTITY_FOX_SPIT",
            "ENTITY_FOX_TELEPORT",
            "ENTITY_FROG_AMBIENT",
            "ENTITY_FROG_DEATH",
            "ENTITY_FROG_EAT",
            "ENTITY_FROG_HURT",
            "ENTITY_FROG_LAY_SPAWN",
            "ENTITY_FROG_LONG_JUMP",
            "ENTITY_FROG_STEP",
            "ENTITY_FROG_TONGUE",
            "ENTITY_GENERIC_BIG_FALL",
            "ENTITY_GENERIC_BURN",
            "ENTITY_GENERIC_DEATH",
            "ENTITY_GENERIC_DRINK",
            "ENTITY_GENERIC_EAT",
            "ENTITY_GENERIC_EXPLODE",
            "ENTITY_GENERIC_EXTINGUISH_FIRE",
            "ENTITY_GENERIC_HURT",
            "ENTITY_GENERIC_SMALL_FALL",
            "ENTITY_GENERIC_SPLASH",
            "ENTITY_GENERIC_SWIM",
            "ENTITY_GHAST_AMBIENT",
            "ENTITY_GHAST_DEATH",
            "ENTITY_GHAST_HURT",
            "ENTITY_GHAST_SCREAM",
            "ENTITY_GHAST_SHOOT",
            "ENTITY_GHAST_WARN",
            "ENTITY_GLOW_ITEM_FRAME_ADD_ITEM",
            "ENTITY_GLOW_ITEM_FRAME_BREAK",
            "ENTITY_GLOW_ITEM_FRAME_PLACE",
            "ENTITY_GLOW_ITEM_FRAME_REMOVE_ITEM",
            "ENTITY_GLOW_ITEM_FRAME_ROTATE_ITEM",
            "ENTITY_GLOW_SQUID_AMBIENT",
            "ENTITY_GLOW_SQUID_DEATH",
            "ENTITY_GLOW_SQUID_HURT",
            "ENTITY_GLOW_SQUID_SQUIRT",
            "ENTITY_GOAT_AMBIENT",
            "ENTITY_GOAT_DEATH",
            "ENTITY_GOAT_EAT",
            "ENTITY_GOAT_HORN_BREAK",
            "ENTITY_GOAT_HURT",
            "ENTITY_GOAT_LONG_JUMP",
            "ENTITY_GOAT_MILK",
            "ENTITY_GOAT_PREPARE_RAM",
            "ENTITY_GOAT_RAM_IMPACT",
            "ENTITY_GOAT_SCREAMING_AMBIENT",
            "ENTITY_GOAT_SCREAMING_DEATH",
            "ENTITY_GOAT_SCREAMING_EAT",
            "ENTITY_GOAT_SCREAMING_HORN_BREAK",
            "ENTITY_GOAT_SCREAMING_HURT",
            "ENTITY_GOAT_SCREAMING_LONG_JUMP",
            "ENTITY_GOAT_SCREAMING_MILK",
            "ENTITY_GOAT_SCREAMING_PREPARE_RAM",
            "ENTITY_GOAT_SCREAMING_RAM_IMPACT",
            "ENTITY_GOAT_STEP",
            "ENTITY_GUARDIAN_AMBIENT",
            "ENTITY_GUARDIAN_AMBIENT_LAND",
            "ENTITY_GUARDIAN_ATTACK",
            "ENTITY_GUARDIAN_DEATH",
            "ENTITY_GUARDIAN_DEATH_LAND",
            "ENTITY_GUARDIAN_FLOP",
            "ENTITY_GUARDIAN_HURT",
            "ENTITY_GUARDIAN_HURT_LAND",
            "ENTITY_HOGLIN_AMBIENT",
            "ENTITY_HOGLIN_ANGRY",
            "ENTITY_HOGLIN_ATTACK",
            "ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_HOGLIN_DEATH",
            "ENTITY_HOGLIN_HURT",
            "ENTITY_HOGLIN_RETREAT",
            "ENTITY_HOGLIN_STEP",
            "ENTITY_HORSE_AMBIENT",
            "ENTITY_HORSE_ANGRY",
            "ENTITY_HORSE_ARMOR",
            "ENTITY_HORSE_BREATHE",
            "ENTITY_HORSE_DEATH",
            "ENTITY_HORSE_EAT",
            "ENTITY_HORSE_GALLOP",
            "ENTITY_HORSE_HURT",
            "ENTITY_HORSE_JUMP",
            "ENTITY_HORSE_LAND",
            "ENTITY_HORSE_SADDLE",
            "ENTITY_HORSE_STEP",
            "ENTITY_HORSE_STEP_WOOD",
            "ENTITY_HOSTILE_BIG_FALL",
            "ENTITY_HOSTILE_DEATH",
            "ENTITY_HOSTILE_HURT",
            "ENTITY_HOSTILE_SMALL_FALL",
            "ENTITY_HOSTILE_SPLASH",
            "ENTITY_HOSTILE_SWIM",
            "ENTITY_HUSK_AMBIENT",
            "ENTITY_HUSK_CONVERTED_TO_ZOMBIE",
            "ENTITY_HUSK_DEATH",
            "ENTITY_HUSK_HURT",
            "ENTITY_HUSK_STEP",
            "ENTITY_ILLUSIONER_AMBIENT",
            "ENTITY_ILLUSIONER_CAST_SPELL",
            "ENTITY_ILLUSIONER_DEATH",
            "ENTITY_ILLUSIONER_HURT",
            "ENTITY_ILLUSIONER_MIRROR_MOVE",
            "ENTITY_ILLUSIONER_PREPARE_BLINDNESS",
            "ENTITY_ILLUSIONER_PREPARE_MIRROR",
            "ENTITY_IRON_GOLEM_ATTACK",
            "ENTITY_IRON_GOLEM_DAMAGE",
            "ENTITY_IRON_GOLEM_DEATH",
            "ENTITY_IRON_GOLEM_HURT",
            "ENTITY_IRON_GOLEM_REPAIR",
            "ENTITY_IRON_GOLEM_STEP",
            "ENTITY_ITEM_BREAK",
            "ENTITY_ITEM_FRAME_ADD_ITEM",
            "ENTITY_ITEM_FRAME_BREAK",
            "ENTITY_ITEM_FRAME_PLACE",
            "ENTITY_ITEM_FRAME_REMOVE_ITEM",
            "ENTITY_ITEM_FRAME_ROTATE_ITEM",
            "ENTITY_ITEM_PICKUP",
            "ENTITY_LEASH_KNOT_BREAK",
            "ENTITY_LEASH_KNOT_PLACE",
            "ENTITY_LIGHTNING_BOLT_IMPACT",
            "ENTITY_LIGHTNING_BOLT_THUNDER",
            "ENTITY_LINGERING_POTION_THROW",
            "ENTITY_LLAMA_AMBIENT",
            "ENTITY_LLAMA_ANGRY",
            "ENTITY_LLAMA_CHEST",
            "ENTITY_LLAMA_DEATH",
            "ENTITY_LLAMA_EAT",
            "ENTITY_LLAMA_HURT",
            "ENTITY_LLAMA_SPIT",
            "ENTITY_LLAMA_STEP",
            "ENTITY_LLAMA_SWAG",
            "ENTITY_MAGMA_CUBE_DEATH",
            "ENTITY_MAGMA_CUBE_DEATH_SMALL",
            "ENTITY_MAGMA_CUBE_HURT",
            "ENTITY_MAGMA_CUBE_HURT_SMALL",
            "ENTITY_MAGMA_CUBE_JUMP",
            "ENTITY_MAGMA_CUBE_SQUISH",
            "ENTITY_MAGMA_CUBE_SQUISH_SMALL",
            "ENTITY_MINECART_INSIDE",
            "ENTITY_MINECART_INSIDE_UNDERWATER",
            "ENTITY_MINECART_RIDING",
            "ENTITY_MOOSHROOM_CONVERT",
            "ENTITY_MOOSHROOM_EAT",
            "ENTITY_MOOSHROOM_MILK",
            "ENTITY_MOOSHROOM_SHEAR",
            "ENTITY_MOOSHROOM_SUSPICIOUS_MILK",
            "ENTITY_MULE_AMBIENT",
            "ENTITY_MULE_ANGRY",
            "ENTITY_MULE_CHEST",
            "ENTITY_MULE_DEATH",
            "ENTITY_MULE_EAT",
            "ENTITY_MULE_HURT",
            "ENTITY_OCELOT_AMBIENT",
            "ENTITY_OCELOT_DEATH",
            "ENTITY_OCELOT_HURT",
            "ENTITY_PAINTING_BREAK",
            "ENTITY_PAINTING_PLACE",
            "ENTITY_PANDA_AGGRESSIVE_AMBIENT",
            "ENTITY_PANDA_AMBIENT",
            "ENTITY_PANDA_BITE",
            "ENTITY_PANDA_CANT_BREED",
            "ENTITY_PANDA_DEATH",
            "ENTITY_PANDA_EAT",
            "ENTITY_PANDA_HURT",
            "ENTITY_PANDA_PRE_SNEEZE",
            "ENTITY_PANDA_SNEEZE",
            "ENTITY_PANDA_STEP",
            "ENTITY_PANDA_WORRIED_AMBIENT",
            "ENTITY_PARROT_AMBIENT",
            "ENTITY_PARROT_DEATH",
            "ENTITY_PARROT_EAT",
            "ENTITY_PARROT_FLY",
            "ENTITY_PARROT_HURT",
            "ENTITY_PARROT_IMITATE_BLAZE",
            "ENTITY_PARROT_IMITATE_CREEPER",
            "ENTITY_PARROT_IMITATE_DROWNED",
            "ENTITY_PARROT_IMITATE_ELDER_GUARDIAN",
            "ENTITY_PARROT_IMITATE_ENDERMITE",
            "ENTITY_PARROT_IMITATE_ENDER_DRAGON",
            "ENTITY_PARROT_IMITATE_EVOKER",
            "ENTITY_PARROT_IMITATE_GHAST",
            "ENTITY_PARROT_IMITATE_GUARDIAN",
            "ENTITY_PARROT_IMITATE_HOGLIN",
            "ENTITY_PARROT_IMITATE_HUSK",
            "ENTITY_PARROT_IMITATE_ILLUSIONER",
            "ENTITY_PARROT_IMITATE_MAGMA_CUBE",
            "ENTITY_PARROT_IMITATE_PHANTOM",
            "ENTITY_PARROT_IMITATE_PIGLIN",
            "ENTITY_PARROT_IMITATE_PIGLIN_BRUTE",
            "ENTITY_PARROT_IMITATE_PILLAGER",
            "ENTITY_PARROT_IMITATE_RAVAGER",
            "ENTITY_PARROT_IMITATE_SHULKER",
            "ENTITY_PARROT_IMITATE_SILVERFISH",
            "ENTITY_PARROT_IMITATE_SKELETON",
            "ENTITY_PARROT_IMITATE_SLIME",
            "ENTITY_PARROT_IMITATE_SPIDER",
            "ENTITY_PARROT_IMITATE_STRAY",
            "ENTITY_PARROT_IMITATE_VEX",
            "ENTITY_PARROT_IMITATE_VINDICATOR",
            "ENTITY_PARROT_IMITATE_WARDEN",
            "ENTITY_PARROT_IMITATE_WITCH",
            "ENTITY_PARROT_IMITATE_WITHER",
            "ENTITY_PARROT_IMITATE_WITHER_SKELETON",
            "ENTITY_PARROT_IMITATE_ZOGLIN",
            "ENTITY_PARROT_IMITATE_ZOMBIE",
            "ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER",
            "ENTITY_PARROT_STEP",
            "ENTITY_PHANTOM_AMBIENT",
            "ENTITY_PHANTOM_BITE",
            "ENTITY_PHANTOM_DEATH",
            "ENTITY_PHANTOM_FLAP",
            "ENTITY_PHANTOM_HURT",
            "ENTITY_PHANTOM_SWOOP",
            "ENTITY_PIGLIN_ADMIRING_ITEM",
            "ENTITY_PIGLIN_AMBIENT",
            "ENTITY_PIGLIN_ANGRY",
            "ENTITY_PIGLIN_BRUTE_AMBIENT",
            "ENTITY_PIGLIN_BRUTE_ANGRY",
            "ENTITY_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_PIGLIN_BRUTE_DEATH",
            "ENTITY_PIGLIN_BRUTE_HURT",
            "ENTITY_PIGLIN_BRUTE_STEP",
            "ENTITY_PIGLIN_CELEBRATE",
            "ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED",
            "ENTITY_PIGLIN_DEATH",
            "ENTITY_PIGLIN_HURT",
            "ENTITY_PIGLIN_JEALOUS",
            "ENTITY_PIGLIN_RETREAT",
            "ENTITY_PIGLIN_STEP",
            "ENTITY_PIG_AMBIENT",
            "ENTITY_PIG_DEATH",
            "ENTITY_PIG_HURT",
            "ENTITY_PIG_SADDLE",
            "ENTITY_PIG_STEP",
            "ENTITY_PILLAGER_AMBIENT",
            "ENTITY_PILLAGER_CELEBRATE",
            "ENTITY_PILLAGER_DEATH",
            "ENTITY_PILLAGER_HURT",
            "ENTITY_PLAYER_ATTACK_CRIT",
            "ENTITY_PLAYER_ATTACK_KNOCKBACK",
            "ENTITY_PLAYER_ATTACK_NODAMAGE",
            "ENTITY_PLAYER_ATTACK_STRONG",
            "ENTITY_PLAYER_ATTACK_SWEEP",
            "ENTITY_PLAYER_ATTACK_WEAK",
            "ENTITY_PLAYER_BIG_FALL",
            "ENTITY_PLAYER_BREATH",
            "ENTITY_PLAYER_BURP",
            "ENTITY_PLAYER_DEATH",
            "ENTITY_PLAYER_HURT",
            "ENTITY_PLAYER_HURT_DROWN",
            "ENTITY_PLAYER_HURT_FREEZE",
            "ENTITY_PLAYER_HURT_ON_FIRE",
            "ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH",
            "ENTITY_PLAYER_LEVELUP",
            "ENTITY_PLAYER_SMALL_FALL",
            "ENTITY_PLAYER_SPLASH",
            "ENTITY_PLAYER_SPLASH_HIGH_SPEED",
            "ENTITY_PLAYER_SWIM",
            "ENTITY_POLAR_BEAR_AMBIENT",
            "ENTITY_POLAR_BEAR_AMBIENT_BABY",
            "ENTITY_POLAR_BEAR_DEATH",
            "ENTITY_POLAR_BEAR_HURT",
            "ENTITY_POLAR_BEAR_STEP",
            "ENTITY_POLAR_BEAR_WARNING",
            "ENTITY_PUFFER_FISH_AMBIENT",
            "ENTITY_PUFFER_FISH_BLOW_OUT",
            "ENTITY_PUFFER_FISH_BLOW_UP",
            "ENTITY_PUFFER_FISH_DEATH",
            "ENTITY_PUFFER_FISH_FLOP",
            "ENTITY_PUFFER_FISH_HURT",
            "ENTITY_PUFFER_FISH_STING",
            "ENTITY_RABBIT_AMBIENT",
            "ENTITY_RABBIT_ATTACK",
            "ENTITY_RABBIT_DEATH",
            "ENTITY_RABBIT_HURT",
            "ENTITY_RABBIT_JUMP",
            "ENTITY_RAVAGER_AMBIENT",
            "ENTITY_RAVAGER_ATTACK",
            "ENTITY_RAVAGER_CELEBRATE",
            "ENTITY_RAVAGER_DEATH",
            "ENTITY_RAVAGER_HURT",
            "ENTITY_RAVAGER_ROAR",
            "ENTITY_RAVAGER_STEP",
            "ENTITY_RAVAGER_STUNNED",
            "ENTITY_SALMON_AMBIENT",
            "ENTITY_SALMON_DEATH",
            "ENTITY_SALMON_FLOP",
            "ENTITY_SALMON_HURT",
            "ENTITY_SHEEP_AMBIENT",
            "ENTITY_SHEEP_DEATH",
            "ENTITY_SHEEP_HURT",
            "ENTITY_SHEEP_SHEAR",
            "ENTITY_SHEEP_STEP",
            "ENTITY_SHULKER_AMBIENT",
            "ENTITY_SHULKER_BULLET_HIT",
            "ENTITY_SHULKER_BULLET_HURT",
            "ENTITY_SHULKER_CLOSE",
            "ENTITY_SHULKER_DEATH",
            "ENTITY_SHULKER_HURT",
            "ENTITY_SHULKER_HURT_CLOSED",
            "ENTITY_SHULKER_OPEN",
            "ENTITY_SHULKER_SHOOT",
            "ENTITY_SHULKER_TELEPORT",
            "ENTITY_SILVERFISH_AMBIENT",
            "ENTITY_SILVERFISH_DEATH",
            "ENTITY_SILVERFISH_HURT",
            "ENTITY_SILVERFISH_STEP",
            "ENTITY_SKELETON_AMBIENT",
            "ENTITY_SKELETON_CONVERTED_TO_STRAY",
            "ENTITY_SKELETON_DEATH",
            "ENTITY_SKELETON_HORSE_AMBIENT",
            "ENTITY_SKELETON_HORSE_AMBIENT_WATER",
            "ENTITY_SKELETON_HORSE_DEATH",
            "ENTITY_SKELETON_HORSE_GALLOP_WATER",
            "ENTITY_SKELETON_HORSE_HURT",
            "ENTITY_SKELETON_HORSE_JUMP_WATER",
            "ENTITY_SKELETON_HORSE_STEP_WATER",
            "ENTITY_SKELETON_HORSE_SWIM",
            "ENTITY_SKELETON_HURT",
            "ENTITY_SKELETON_SHOOT",
            "ENTITY_SKELETON_STEP",
            "ENTITY_SLIME_ATTACK",
            "ENTITY_SLIME_DEATH",
            "ENTITY_SLIME_DEATH_SMALL",
            "ENTITY_SLIME_HURT",
            "ENTITY_SLIME_HURT_SMALL",
            "ENTITY_SLIME_JUMP",
            "ENTITY_SLIME_JUMP_SMALL",
            "ENTITY_SLIME_SQUISH",
            "ENTITY_SLIME_SQUISH_SMALL",
            "ENTITY_SNOWBALL_THROW",
            "ENTITY_SNOW_GOLEM_AMBIENT",
            "ENTITY_SNOW_GOLEM_DEATH",
            "ENTITY_SNOW_GOLEM_HURT",
            "ENTITY_SNOW_GOLEM_SHEAR",
            "ENTITY_SNOW_GOLEM_SHOOT",
            "ENTITY_SPIDER_AMBIENT",
            "ENTITY_SPIDER_DEATH",
            "ENTITY_SPIDER_HURT",
            "ENTITY_SPIDER_STEP",
            "ENTITY_SPLASH_POTION_BREAK",
            "ENTITY_SPLASH_POTION_THROW",
            "ENTITY_SQUID_AMBIENT",
            "ENTITY_SQUID_DEATH",
            "ENTITY_SQUID_HURT",
            "ENTITY_SQUID_SQUIRT",
            "ENTITY_STRAY_AMBIENT",
            "ENTITY_STRAY_DEATH",
            "ENTITY_STRAY_HURT",
            "ENTITY_STRAY_STEP",
            "ENTITY_STRIDER_AMBIENT",
            "ENTITY_STRIDER_DEATH",
            "ENTITY_STRIDER_EAT",
            "ENTITY_STRIDER_HAPPY",
            "ENTITY_STRIDER_HURT",
            "ENTITY_STRIDER_RETREAT",
            "ENTITY_STRIDER_SADDLE",
            "ENTITY_STRIDER_STEP",
            "ENTITY_STRIDER_STEP_LAVA",
            "ENTITY_TADPOLE_DEATH",
            "ENTITY_TADPOLE_FLOP",
            "ENTITY_TADPOLE_GROW_UP",
            "ENTITY_TADPOLE_HURT",
            "ENTITY_TNT_PRIMED",
            "ENTITY_TROPICAL_FISH_AMBIENT",
            "ENTITY_TROPICAL_FISH_DEATH",
            "ENTITY_TROPICAL_FISH_FLOP",
            "ENTITY_TROPICAL_FISH_HURT",
            "ENTITY_TURTLE_AMBIENT_LAND",
            "ENTITY_TURTLE_DEATH",
            "ENTITY_TURTLE_DEATH_BABY",
            "ENTITY_TURTLE_EGG_BREAK",
            "ENTITY_TURTLE_EGG_CRACK",
            "ENTITY_TURTLE_EGG_HATCH",
            "ENTITY_TURTLE_HURT",
            "ENTITY_TURTLE_HURT_BABY",
            "ENTITY_TURTLE_LAY_EGG",
            "ENTITY_TURTLE_SHAMBLE",
            "ENTITY_TURTLE_SHAMBLE_BABY",
            "ENTITY_TURTLE_SWIM",
            "ENTITY_VEX_AMBIENT",
            "ENTITY_VEX_CHARGE",
            "ENTITY_VEX_DEATH",
            "ENTITY_VEX_HURT",
            "ENTITY_VILLAGER_AMBIENT",
            "ENTITY_VILLAGER_CELEBRATE",
            "ENTITY_VILLAGER_DEATH",
            "ENTITY_VILLAGER_HURT",
            "ENTITY_VILLAGER_NO",
            "ENTITY_VILLAGER_TRADE",
            "ENTITY_VILLAGER_WORK_ARMORER",
            "ENTITY_VILLAGER_WORK_BUTCHER",
            "ENTITY_VILLAGER_WORK_CARTOGRAPHER",
            "ENTITY_VILLAGER_WORK_CLERIC",
            "ENTITY_VILLAGER_WORK_FARMER",
            "ENTITY_VILLAGER_WORK_FISHERMAN",
            "ENTITY_VILLAGER_WORK_FLETCHER",
            "ENTITY_VILLAGER_WORK_LEATHERWORKER",
            "ENTITY_VILLAGER_WORK_LIBRARIAN",
            "ENTITY_VILLAGER_WORK_MASON",
            "ENTITY_VILLAGER_WORK_SHEPHERD",
            "ENTITY_VILLAGER_WORK_TOOLSMITH",
            "ENTITY_VILLAGER_WORK_WEAPONSMITH",
            "ENTITY_VILLAGER_YES",
            "ENTITY_VINDICATOR_AMBIENT",
            "ENTITY_VINDICATOR_CELEBRATE",
            "ENTITY_VINDICATOR_DEATH",
            "ENTITY_VINDICATOR_HURT",
            "ENTITY_WANDERING_TRADER_AMBIENT",
            "ENTITY_WANDERING_TRADER_DEATH",
            "ENTITY_WANDERING_TRADER_DISAPPEARED",
            "ENTITY_WANDERING_TRADER_DRINK_MILK",
            "ENTITY_WANDERING_TRADER_DRINK_POTION",
            "ENTITY_WANDERING_TRADER_HURT",
            "ENTITY_WANDERING_TRADER_NO",
            "ENTITY_WANDERING_TRADER_REAPPEARED",
            "ENTITY_WANDERING_TRADER_TRADE",
            "ENTITY_WANDERING_TRADER_YES",
            "ENTITY_WARDEN_AGITATED",
            "ENTITY_WARDEN_AMBIENT",
            "ENTITY_WARDEN_ANGRY",
            "ENTITY_WARDEN_ATTACK_IMPACT",
            "ENTITY_WARDEN_DEATH",
            "ENTITY_WARDEN_DIG",
            "ENTITY_WARDEN_EMERGE",
            "ENTITY_WARDEN_HEARTBEAT",
            "ENTITY_WARDEN_HURT",
            "ENTITY_WARDEN_LISTENING",
            "ENTITY_WARDEN_LISTENING_ANGRY",
            "ENTITY_WARDEN_NEARBY_CLOSE",
            "ENTITY_WARDEN_NEARBY_CLOSER",
            "ENTITY_WARDEN_NEARBY_CLOSEST",
            "ENTITY_WARDEN_ROAR",
            "ENTITY_WARDEN_SNIFF",
            "ENTITY_WARDEN_SONIC_BOOM",
            "ENTITY_WARDEN_SONIC_CHARGE",
            "ENTITY_WARDEN_STEP",
            "ENTITY_WARDEN_TENDRIL_CLICKS",
            "ENTITY_WITCH_AMBIENT",
            "ENTITY_WITCH_CELEBRATE",
            "ENTITY_WITCH_DEATH",
            "ENTITY_WITCH_DRINK",
            "ENTITY_WITCH_HURT",
            "ENTITY_WITCH_THROW",
            "ENTITY_WITHER_AMBIENT",
            "ENTITY_WITHER_BREAK_BLOCK",
            "ENTITY_WITHER_DEATH",
            "ENTITY_WITHER_HURT",
            "ENTITY_WITHER_SHOOT",
            "ENTITY_WITHER_SKELETON_AMBIENT",
            "ENTITY_WITHER_SKELETON_DEATH",
            "ENTITY_WITHER_SKELETON_HURT",
            "ENTITY_WITHER_SKELETON_STEP",
            "ENTITY_WITHER_SPAWN",
            "ENTITY_WOLF_AMBIENT",
            "ENTITY_WOLF_DEATH",
            "ENTITY_WOLF_GROWL",
            "ENTITY_WOLF_HOWL",
            "ENTITY_WOLF_HURT",
            "ENTITY_WOLF_PANT",
            "ENTITY_WOLF_SHAKE",
            "ENTITY_WOLF_STEP",
            "ENTITY_WOLF_WHINE",
            "ENTITY_ZOGLIN_AMBIENT",
            "ENTITY_ZOGLIN_ANGRY",
            "ENTITY_ZOGLIN_ATTACK",
            "ENTITY_ZOGLIN_DEATH",
            "ENTITY_ZOGLIN_HURT",
            "ENTITY_ZOGLIN_STEP",
            "ENTITY_ZOMBIE_AMBIENT",
            "ENTITY_ZOMBIE_ATTACK_IRON_DOOR",
            "ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR",
            "ENTITY_ZOMBIE_BREAK_WOODEN_DOOR",
            "ENTITY_ZOMBIE_CONVERTED_TO_DROWNED",
            "ENTITY_ZOMBIE_DEATH",
            "ENTITY_ZOMBIE_DESTROY_EGG",
            "ENTITY_ZOMBIE_HORSE_AMBIENT",
            "ENTITY_ZOMBIE_HORSE_DEATH",
            "ENTITY_ZOMBIE_HORSE_HURT",
            "ENTITY_ZOMBIE_HURT",
            "ENTITY_ZOMBIE_INFECT",
            "ENTITY_ZOMBIE_STEP",
            "ENTITY_ZOMBIE_VILLAGER_AMBIENT",
            "ENTITY_ZOMBIE_VILLAGER_CONVERTED",
            "ENTITY_ZOMBIE_VILLAGER_CURE",
            "ENTITY_ZOMBIE_VILLAGER_DEATH",
            "ENTITY_ZOMBIE_VILLAGER_HURT",
            "ENTITY_ZOMBIE_VILLAGER_STEP",
            "ENTITY_ZOMBIFIED_PIGLIN_AMBIENT",
            "ENTITY_ZOMBIFIED_PIGLIN_ANGRY",
            "ENTITY_ZOMBIFIED_PIGLIN_DEATH",
            "ENTITY_ZOMBIFIED_PIGLIN_HURT",
            "EVENT_RAID_HORN",
            "ITEM_ARMOR_EQUIP_CHAIN",
            "ITEM_ARMOR_EQUIP_DIAMOND",
            "ITEM_ARMOR_EQUIP_ELYTRA",
            "ITEM_ARMOR_EQUIP_GENERIC",
            "ITEM_ARMOR_EQUIP_GOLD",
            "ITEM_ARMOR_EQUIP_IRON",
            "ITEM_ARMOR_EQUIP_LEATHER",
            "ITEM_ARMOR_EQUIP_NETHERITE",
            "ITEM_ARMOR_EQUIP_TURTLE",
            "ITEM_AXE_SCRAPE",
            "ITEM_AXE_STRIP",
            "ITEM_AXE_WAX_OFF",
            "ITEM_BONE_MEAL_USE",
            "ITEM_BOOK_PAGE_TURN",
            "ITEM_BOOK_PUT",
            "ITEM_BOTTLE_EMPTY",
            "ITEM_BOTTLE_FILL",
            "ITEM_BOTTLE_FILL_DRAGONBREATH",
            "ITEM_BUCKET_EMPTY",
            "ITEM_BUCKET_EMPTY_AXOLOTL",
            "ITEM_BUCKET_EMPTY_FISH",
            "ITEM_BUCKET_EMPTY_LAVA",
            "ITEM_BUCKET_EMPTY_POWDER_SNOW",
            "ITEM_BUCKET_EMPTY_TADPOLE",
            "ITEM_BUCKET_FILL",
            "ITEM_BUCKET_FILL_AXOLOTL",
            "ITEM_BUCKET_FILL_FISH",
            "ITEM_BUCKET_FILL_LAVA",
            "ITEM_BUCKET_FILL_POWDER_SNOW",
            "ITEM_BUCKET_FILL_TADPOLE",
            "ITEM_BUNDLE_DROP_CONTENTS",
            "ITEM_BUNDLE_INSERT",
            "ITEM_BUNDLE_REMOVE_ONE",
            "ITEM_CHORUS_FRUIT_TELEPORT",
            "ITEM_CROP_PLANT",
            "ITEM_CROSSBOW_HIT",
            "ITEM_CROSSBOW_LOADING_END",
            "ITEM_CROSSBOW_LOADING_MIDDLE",
            "ITEM_CROSSBOW_LOADING_START",
            "ITEM_CROSSBOW_QUICK_CHARGE_1",
            "ITEM_CROSSBOW_QUICK_CHARGE_2",
            "ITEM_CROSSBOW_QUICK_CHARGE_3",
            "ITEM_CROSSBOW_SHOOT",
            "ITEM_DYE_USE",
            "ITEM_ELYTRA_FLYING",
            "ITEM_FIRECHARGE_USE",
            "ITEM_FLINTANDSTEEL_USE",
            "ITEM_GLOW_INK_SAC_USE",
            "ITEM_GOAT_HORN_PLAY",
            "ITEM_GOAT_HORN_SOUND_0",
            "ITEM_GOAT_HORN_SOUND_1",
            "ITEM_GOAT_HORN_SOUND_2",
            "ITEM_GOAT_HORN_SOUND_3",
            "ITEM_GOAT_HORN_SOUND_4",
            "ITEM_GOAT_HORN_SOUND_5",
            "ITEM_GOAT_HORN_SOUND_6",
            "ITEM_GOAT_HORN_SOUND_7",
            "ITEM_HOE_TILL",
            "ITEM_HONEYCOMB_WAX_ON",
            "ITEM_HONEY_BOTTLE_DRINK",
            "ITEM_INK_SAC_USE",
            "ITEM_LODESTONE_COMPASS_LOCK",
            "ITEM_NETHER_WART_PLANT",
            "ITEM_SHIELD_BLOCK",
            "ITEM_SHIELD_BREAK",
            "ITEM_SHOVEL_FLATTEN",
            "ITEM_SPYGLASS_STOP_USING",
            "ITEM_SPYGLASS_USE",
            "ITEM_TOTEM_USE",
            "ITEM_TRIDENT_HIT",
            "ITEM_TRIDENT_HIT_GROUND",
            "ITEM_TRIDENT_RETURN",
            "ITEM_TRIDENT_RIPTIDE_1",
            "ITEM_TRIDENT_RIPTIDE_2",
            "ITEM_TRIDENT_RIPTIDE_3",
            "ITEM_TRIDENT_THROW",
            "ITEM_TRIDENT_THUNDER",
            "MUSIC_CREATIVE",
            "MUSIC_CREDITS",
            "MUSIC_DISC_11",
            "MUSIC_DISC_13",
            "MUSIC_DISC_5",
            "MUSIC_DISC_BLOCKS",
            "MUSIC_DISC_CAT",
            "MUSIC_DISC_CHIRP",
            "MUSIC_DISC_FAR",
            "MUSIC_DISC_MALL",
            "MUSIC_DISC_MELLOHI",
            "MUSIC_DISC_OTHERSIDE",
            "MUSIC_DISC_PIGSTEP",
            "MUSIC_DISC_STAL",
            "MUSIC_DISC_STRAD",
            "MUSIC_DISC_WAIT",
            "MUSIC_DISC_WARD",
            "MUSIC_DRAGON",
            "MUSIC_END",
            "MUSIC_GAME",
            "MUSIC_MENU",
            "MUSIC_NETHER_BASALT_DELTAS",
            "MUSIC_NETHER_CRIMSON_FOREST",
            "MUSIC_NETHER_NETHER_WASTES",
            "MUSIC_NETHER_SOUL_SAND_VALLEY",
            "MUSIC_NETHER_WARPED_FOREST",
            "MUSIC_OVERWORLD_DEEP_DARK",
            "MUSIC_OVERWORLD_DRIPSTONE_CAVES",
            "MUSIC_OVERWORLD_FROZEN_PEAKS",
            "MUSIC_OVERWORLD_GROVE",
            "MUSIC_OVERWORLD_JAGGED_PEAKS",
            "MUSIC_OVERWORLD_JUNGLE_AND_FOREST",
            "MUSIC_OVERWORLD_LUSH_CAVES",
            "MUSIC_OVERWORLD_MEADOW",
            "MUSIC_OVERWORLD_OLD_GROWTH_TAIGA",
            "MUSIC_OVERWORLD_SNOWY_SLOPES",
            "MUSIC_OVERWORLD_STONY_PEAKS",
            "MUSIC_OVERWORLD_SWAMP",
            "MUSIC_UNDER_WATER",
            "PARTICLE_SOUL_ESCAPE",
            "UI_BUTTON_CLICK",
            "UI_CARTOGRAPHY_TABLE_TAKE_RESULT",
            "UI_LOOM_SELECT_PATTERN",
            "UI_LOOM_TAKE_RESULT",
            "UI_STONECUTTER_SELECT_RECIPE",
            "UI_STONECUTTER_TAKE_RESULT",
            "UI_TOAST_CHALLENGE_COMPLETE",
            "UI_TOAST_IN",
            "UI_TOAST_OUT",
            "WEATHER_RAIN",
            "WEATHER_RAIN_ABOVE"
        ]},
        "obj-com-volmit-iris-engine-object-irislootreference": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irislootmode",
                        "description": "mode\nAdd = add on top of parent tables, Replace = clear first then add these. Clear = Remove all and dont add loot from this or parent.\n   \nLootMode\nA loot mode is used to describe what to do with the existing loot layers before adding this loot. Using ADD will simply add this table to the building list of tables (i.e. add dimension tables, region tables then biome tables). By using clear or replace, you remove the parent tables before and add just your tables.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid LootMode (use ctrl+space for auto complete!)"
                    },
                    "tables": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/erzloot"},
                        "description": "tables\nAdd loot table registries here\n   \nList<Loot>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Loot (use ctrl+space for auto complete!)"
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 0,
                        "description": "multiplier\nIncrease the chance of loot in this area\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
