{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://volmit.com/iris-schema/irisdimension.json",
    "description": "Represents a dimension",
    "type": "object",
    "properties": {
        "preprocessors": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzscripts"},
            "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
        },
        "name": {
            "type": "string",
            "minLength": 2,
            "description": "name\nThe human readable name of this dimension\n   \nText\n\n    \n* Default Value is A Dimension\n* Minimum Length allowed is 2"
        },
        "logicalHeight": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2032,
            "description": "logicalHeight\nMaximum height at which players can be teleported to through gameplay.\n   \nInteger\n\n    \n* Default Value is 256\n* Minimum allowed is 1\n* Maximum allowed is 2032"
        },
        "stronghold": {
            "type": "string",
            "$ref": "#/definitions/erzjigsaw-structures",
            "description": "stronghold\nIf defined, Iris will place the given jigsaw structure where minecraft should place the overworld stronghold.\n   \nIris Jigsaw Structure\n\nMust be a valid jigsaw-structures (use ctrl+space for auto complete!)"
        },
        "debugChunkCrossSections": {
            "type": "boolean",
            "description": "debugChunkCrossSections\nIf set to true, Iris will remove chunks to allow visualizing cross sections of chunks easily\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "explodeBiomePalettes": {
            "type": "boolean",
            "description": "explodeBiomePalettes\nVertically split up the biome palettes with 3 air blocks in between to visualize them\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "studioMode": {
            "type": "string",
            "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-studiomode",
            "description": "studioMode\nStudio Mode for testing different parts of the world\n   \nStudioMode\nRepresents a studio mode\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid StudioMode (use ctrl+space for auto complete!)"
        },
        "explodeBiomePaletteSize": {
            "type": "integer",
            "minimum": 1,
            "maximum": 16,
            "description": "explodeBiomePaletteSize\nCustomize the palette height explosion\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 16"
        },
        "debugCrossSectionsMod": {
            "type": "integer",
            "minimum": 2,
            "maximum": 16,
            "description": "debugCrossSectionsMod\nEvery X/Z % debugCrossSectionsMod == 0 cuts the chunk\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 2\n* Maximum allowed is 16"
        },
        "strongholdJumpDistance": {
            "type": "integer",
            "description": "strongholdJumpDistance\nThe average distance between strongholds\n   \nInteger\n\n    \n* Default Value is 1280"
        },
        "maxStrongholds": {
            "type": "integer",
            "description": "maxStrongholds\nDefine the maximum strongholds to place\n   \nInteger\n\n    \n* Default Value is 14"
        },
        "aggressiveBiomeReshuffle": {
            "type": "boolean",
            "description": "aggressiveBiomeReshuffle\nImproves the biome grid variation by shuffling the cell grid more depending on the seed. This makes biomes across multiple seeds look far different than before.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "treeSettings": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iristreesettings",
                    "description": "treeSettings\nTree growth override settings\n   \nTreeSettings (Object)\nTree growth override settings\n    \nYou can instead specify \"snippet/tree-settings/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-tree-settings",
                    "description": "treeSettings\nTree growth override settings\n   \nTreeSettings (Object)\nTree growth override settings\n    \nYou can instead specify \"snippet/tree-settings/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "treeSettings\nTree growth override settings\n   \nTreeSettings (Object)\nTree growth override settings\n    \nYou can instead specify \"snippet/tree-settings/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "resourcePack": {
            "type": "string",
            "description": "resourcePack\nUpon joining this world, Iris will send a resource pack request to the client. If they have previously selected yes, it will auto-switch depending on which dimension they go to.\n   \nText\n\n    \n* Default Value is "
        },
        "entitySpawners": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzspawners"},
            "description": "entitySpawners\nSpawn Entities in this dimension over time. Iris will continually replenish these mobs just like vanilla does.\n   \nList<Spawner>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Spawner (use ctrl+space for auto complete!)"
        },
        "loot": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislootreference",
                    "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-loot-registry",
                    "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "loot\nReference loot tables in this area\n   \nLootReference (Object)\nRepresents a loot entry\n    \nYou can instead specify \"snippet/loot-registry/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "version": {
            "type": "integer",
            "minimum": 0,
            "description": "version\nThe version of this dimension. Changing this will stop users from accidentally upgrading (and breaking their worlds).\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 0"
        },
        "blockDrops": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdrops"},
            "description": "blockDrops\nDefine custom block drops for this dimension\n   \nList of BlockDropss (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "bedrock": {
            "type": "boolean",
            "description": "bedrock\nShould bedrock be generated or not.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "landChance": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "landChance\nThe land chance. Up to 1.0 for total land or 0.0 for total sea\n   \nNumber\n\n    \n* Default Value is 0.625\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
        },
        "regionStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "regionStyle\nThe placement style of regions\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "regionStyle\nThe placement style of regions\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "regionStyle\nThe placement style of regions\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "continentalStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "continentalStyle\nThe placement style of land/sea\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "continentalStyle\nThe placement style of land/sea\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "continentalStyle\nThe placement style of land/sea\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "landBiomeStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "landBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "landBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "landBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "shoreBiomeStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "shoreBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "shoreBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "shoreBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "seaBiomeStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "seaBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "seaBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "seaBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "caveBiomeStyle": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                    "description": "caveBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-style",
                    "description": "caveBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "caveBiomeStyle\nThe placement style of biomes\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "debugSmartBore": {
            "type": "boolean",
            "description": "debugSmartBore\nInstead of filling objects with air, fills them with cobweb so you can see them\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "decorate": {
            "type": "boolean",
            "description": "decorate\nGenerate decorations or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "postProcessing": {
            "type": "boolean",
            "description": "postProcessing\nUse post processing or not\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "postProcessingSlabs": {
            "type": "boolean",
            "description": "postProcessingSlabs\nAdd slabs in post processing\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "postProcessingWalls": {
            "type": "boolean",
            "description": "postProcessingWalls\nAdd painted walls in post processing\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "carving": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscarving",
                    "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-carving",
                    "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "carving\nCarving configuration for the dimension\n   \nCarving (Object)\nRepresents a carving configuration\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "fluidBodies": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisfluidbodies",
                    "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-fluid-bodies",
                    "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "fluidBodies\nConfiguration of fluid bodies such as rivers & lakes\n   \nFluidBodies (Object)\nRepresents a fluid body configuration\n    \nYou can instead specify \"snippet/fluid-bodies/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "environment": {
            "type": "string",
            "$ref": "#/definitions/enum-org-bukkit-world-environment",
            "description": "environment\nThe world environment\n   \nEnvironment\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Environment (use ctrl+space for auto complete!)"
        },
        "regions": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/erzregions"},
            "description": "regions\nDefine all of the regions to include in this dimension. Dimensions -> Regions -> Biomes -> Objects etc\n   \nList<Region>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Region (use ctrl+space for auto complete!)"
        },
        "jigsawStructures": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisjigsawstructureplacement"},
            "description": "jigsawStructures\nJigsaw structures\n   \nList of JigsawStructurePlacements (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "fluidHeight": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1024,
            "description": "fluidHeight\nThe fluid height for this dimension\n   \nInteger\n\n    \n* Default Value is 63\n* Minimum allowed is 0\n* Maximum allowed is 1024"
        },
        "dimensionHeight": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisrange",
                    "description": "dimensionHeight\nDefine the min and max Y bounds of this dimension. Please keep in mind that Iris internally generates from 0 to (max - min). \n\nFor example at -64 to 320, Iris is internally generating to 0 to 384, then on outputting chunks, it shifts it down by the min height (64 blocks). The default is -64 to 320. \n\nThe fluid height is placed at (fluid height + min height). So a fluid height of 63 would actually show up in the world at 1.\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-range",
                    "description": "dimensionHeight\nDefine the min and max Y bounds of this dimension. Please keep in mind that Iris internally generates from 0 to (max - min). \n\nFor example at -64 to 320, Iris is internally generating to 0 to 384, then on outputting chunks, it shifts it down by the min height (64 blocks). The default is -64 to 320. \n\nThe fluid height is placed at (fluid height + min height). So a fluid height of 63 would actually show up in the world at 1.\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "dimensionHeight\nDefine the min and max Y bounds of this dimension. Please keep in mind that Iris internally generates from 0 to (max - min). \n\nFor example at -64 to 320, Iris is internally generating to 0 to 384, then on outputting chunks, it shifts it down by the min height (64 blocks). The default is -64 to 320. \n\nThe fluid height is placed at (fluid height + min height). So a fluid height of 63 would actually show up in the world at 1.\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "focus": {
            "type": "string",
            "$ref": "#/definitions/erzbiomes",
            "description": "focus\nKeep this either undefined or empty. Setting any biome name into this will force iris to only generate the specified biome. Great for testing.\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
        },
        "focusRegion": {
            "type": "string",
            "$ref": "#/definitions/erzregions",
            "description": "focusRegion\nKeep this either undefined or empty. Setting any region name into this will force iris to only generate the specified region. Great for testing.\n   \nIris Region\n\n    \n* Default Value is \nMust be a valid regions (use ctrl+space for auto complete!)"
        },
        "biomeZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "biomeZoom\nZoom in or out the biome size. Higher = bigger biomes\n   \nNumber\n\n    \n* Default Value is 5.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "dimensionAngleDeg": {
            "type": "number",
            "minimum": 0,
            "maximum": 360,
            "description": "dimensionAngleDeg\nYou can rotate the input coordinates by an angle. This can make terrain appear more natural (less sharp corners and lines). This literally rotates the entire dimension by an angle. Hint: Try 12 degrees or something not on a 90 or 45 degree angle.\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 360.0"
        },
        "mode": {
            "anyOf": [
                {
                    "!required": true,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisdimensionmode",
                    "description": "mode\nDefine the mode of this dimension (required!)\n   \nDimensionMode (Object)\nRepresents a dimensional mode\n    \nYou can instead specify \"snippet/dimension-mode/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-dimension-mode",
                    "description": "mode\nDefine the mode of this dimension (required!)\n   \nDimensionMode (Object)\nRepresents a dimensional mode\n    \nYou can instead specify \"snippet/dimension-mode/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "mode\nDefine the mode of this dimension (required!)\n   \nDimensionMode (Object)\nRepresents a dimensional mode\n    \nYou can instead specify \"snippet/dimension-mode/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "coordFractureDistance": {
            "type": "number",
            "minimum": 0,
            "maximum": 8192,
            "description": "coordFractureDistance\nCoordinate fracturing applies noise to the input coordinates. This creates the 'iris swirls' and wavy features. The distance pushes these waves further into places they shouldnt be. This is a block value multiplier.\n   \nNumber\n\n    \n* Default Value is 20.0\n* Minimum allowed is 0.0\n* Maximum allowed is 8192.0"
        },
        "coordFractureZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "coordFractureZoom\nCoordinate fracturing zoom. Higher = less frequent warping, Lower = more frequent and rapid warping / swirls.\n   \nNumber\n\n    \n* Default Value is 8.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "landZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "landZoom\nThis zooms in the land space\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "seaZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "seaZoom\nThis zooms oceanic biomes\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "continentZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "continentZoom\nZoom in continents\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "regionZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "regionZoom\nChange the size of regions\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "useMantle": {
            "type": "boolean",
            "description": "useMantle\nDisable this to stop placing objects, entities, features & updates\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "preventLeafDecay": {
            "type": "boolean",
            "description": "preventLeafDecay\nPrevent Leaf decay as if placed in creative mode\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "deposits": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisdepositgenerator"},
            "description": "deposits\nDefine global deposit generators\n   \nList of DepositGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "overlayNoise": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle"},
            "description": "overlayNoise\nOverlay additional noise on top of the interoplated terrain.\n   \nList of ShapedGeneratorStyles (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "infiniteEnergy": {
            "type": "boolean",
            "description": "infiniteEnergy\nIf true, the spawner system has infinite energy. This is NOT recommended because it would allow for mobs to keep spawning over and over without a rate limit\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "maximumEnergy": {
            "type": "number",
            "minimum": 0,
            "maximum": 10000,
            "description": "maximumEnergy\nThis is the maximum energy you can have in a dimension\n   \nNumber\n\n    \n* Default Value is 1000.0\n* Minimum allowed is 0.0\n* Maximum allowed is 10000.0"
        },
        "rockZoom": {
            "type": "number",
            "minimum": 1.0E-4,
            "maximum": 512,
            "description": "rockZoom\nThe rock zoom mostly for zooming in on a wispy palette\n   \nNumber\n\n    \n* Default Value is 5.0\n* Minimum allowed is 1.0E-4\n* Maximum allowed is 512.0"
        },
        "rockPalette": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                    "description": "rockPalette\nThe palette of blocks for 'stone'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-palette",
                    "description": "rockPalette\nThe palette of blocks for 'stone'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "rockPalette\nThe palette of blocks for 'stone'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "fluidPalette": {
            "anyOf": [
                {
                    "!required": false,
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                    "description": "fluidPalette\nThe palette of blocks for 'water'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                {
                    "type": "string",
                    "$ref": "#/definitions/enum-snippet-palette",
                    "description": "fluidPalette\nThe palette of blocks for 'water'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            ],
            "description": "fluidPalette\nThe palette of blocks for 'water'\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "removeCartographersDueToCrash": {
            "type": "boolean",
            "description": "removeCartographersDueToCrash\nRemove cartographers so they do not crash the server (Iris worlds only)\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
        },
        "notifyPlayersOfCartographerCancelledRadius": {
            "type": "integer",
            "description": "notifyPlayersOfCartographerCancelledRadius\nNotify players of cancelled cartographer villager in this radius in blocks (set to -1 to disable, -2 for everyone)\n   \nInteger\n\n    \n* Default Value is 30"
        },
        "ores": {
            "type": "array",
            "minItems": 1,
            "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisoregenerator"},
            "description": "ores\nCollection of ores to be generated\n   \nList of OreGenerators (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
        },
        "caveLavaHeight": {
            "type": "integer",
            "minimum": 0,
            "maximum": 318,
            "description": "caveLavaHeight\nThe Subterrain Fluid Layer Height\n   \nInteger\n\n    \n* Default Value is 8\n* Minimum allowed is 0\n* Maximum allowed is 318"
        }
    },
    "definitions": {
        "enum-snippet-worm": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisrange": {"anyOf": [
            {
                "description": "Represents a range",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-attribute-attribute": {"enum": [
            "GENERIC_MAX_HEALTH",
            "GENERIC_FOLLOW_RANGE",
            "GENERIC_KNOCKBACK_RESISTANCE",
            "GENERIC_MOVEMENT_SPEED",
            "GENERIC_FLYING_SPEED",
            "GENERIC_ATTACK_DAMAGE",
            "GENERIC_ATTACK_KNOCKBACK",
            "GENERIC_ATTACK_SPEED",
            "GENERIC_ARMOR",
            "GENERIC_ARMOR_TOUGHNESS",
            "GENERIC_LUCK",
            "HORSE_JUMP_STRENGTH",
            "ZOMBIE_SPAWN_REINFORCEMENTS"
        ]},
        "obj-com-volmit-iris-engine-object-irisloot": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "slotTypes": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-inventoryslottype",
                        "description": "slotTypes\nThe target inventory slot types to fill this loot with\n   \nInventorySlotType\nAn inventory slot type is used to represent a type of slot for items to fit into in any given inventory.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InventorySlotType (use ctrl+space for auto complete!)"
                    },
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nThe sub rarity of this loot. Calculated after this loot table has been picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "minAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minAmount\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxAmount": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxAmount\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "displayName": {
                        "type": "string",
                        "minLength": 1,
                        "description": "displayName\nThe display name of this item\n   \nText\n\n* Minimum Length allowed is 1"
                    },
                    "minDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "minDurability\nMinimum durability percent\n   \nNumber\n\n    \n* Default Value is 0.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "maxDurability": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "maxDurability\nMaximum durability percent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    },
                    "customModel": {
                        "type": "integer",
                        "description": "customModel\nDefine a custom model identifier 1.14+ only\n   \nInteger\n"
                    },
                    "unbreakable": {
                        "type": "boolean",
                        "description": "unbreakable\nSet this to true to prevent it from being broken\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "itemFlags": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/enum-org-bukkit-inventory-itemflag"},
                        "description": "itemFlags\nThe item flags to add\n   \nList of ItemFlags\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid ItemFlag (use ctrl+space for auto complete!)"
                    },
                    "enchantments": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisenchantment"},
                        "description": "enchantments\nApply enchantments to this item\n   \nList of Enchantments (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "attributes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisattributemodifier"},
                        "description": "attributes\nApply attribute modifiers to this item\n   \nList of AttributeModifiers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "lore": {
                        "type": "array",
                        "minItems": 1,
                        "description": "lore\nAdd lore to this item\n   \nList of Text\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "type": {
                        "type": "string",
                        "$ref": "#/definitions/enum-item-type",
                        "description": "type\nThis is the item or block type. Does not accept minecraft:*, only materials such as DIAMOND_SWORD or DIRT. The exception are modded materials, as they require a namespace.\n   \nItem Type\n\n    \n* Default Value is \nMust be a valid Item Type (use ctrl+space for auto complete!)"
                    },
                    "dyeColor": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-dyecolor",
                        "description": "dyeColor\nThe dye color\n   \nDyeColor\n\nMust be a valid DyeColor (use ctrl+space for auto complete!)"
                    },
                    "leatherColor": {
                        "type": "string",
                        "description": "leatherColor\nThe leather armor color\n   \nText\n"
                    },
                    "customNbt": {
                        "type": "object",
                        "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                        "description": "customNbt\nDefines a custom NBT Tag for the item.\n   \nKMap (Object)\n"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-shaped-style": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisimagemap": {"anyOf": [
            {
                "description": "Represents an image map",
                "type": "object",
                "properties": {
                    "image": {
                        "type": "string",
                        "$ref": "#/definitions/erzimages",
                        "description": "image\nDefine the png image to read in this noise map\n   \nIris Image\n\n    \n* Default Value is \nMust be a valid images (use ctrl+space for auto complete!)"
                    },
                    "coordinateScale": {
                        "type": "number",
                        "minimum": 1,
                        "description": "coordinateScale\nThe amount of distance a single pixel is when reading this map, reading x=13, would still read pixel 0 if the scale is 32. You can zoom this externally through noise styles for zooming out.\n   \nNumber\n\n    \n* Default Value is 32.0\n* Minimum allowed is 1.0"
                    },
                    "interpolationMethod": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod",
                        "description": "interpolationMethod\nThe interpolation method if the coordinateScale is greater than 1. This blends the image into noise. For nearest neighbor, use NONE.\n   \nInterpolationMethod\nAn interpolation method (or function) is simply a method of smoothing a position based on surrounding points on a grid. Bicubic for example is smoother, but has 4 times the checks than Bilinear for example. Try using BILINEAR_STARCAST_9 for beautiful results.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid InterpolationMethod (use ctrl+space for auto complete!)"
                    },
                    "channel": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisimagechannel",
                        "description": "channel\nThe channel of the image to read from. This basically converts image data into a number betwen 0 to 1 per pixel using a certain 'channel/filter'\n   \nImageChannel\nDetermines a derived channel of an image to read\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid ImageChannel (use ctrl+space for auto complete!)"
                    },
                    "inverted": {
                        "type": "boolean",
                        "description": "inverted\nInvert the channel input\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "tiled": {
                        "type": "boolean",
                        "description": "tiled\nTile the image coordinates\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "centered": {
                        "type": "boolean",
                        "description": "centered\nCenter 0,0 to the center of the image instead of the top left.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irismaterialpalette": {"anyOf": [
            {
                "description": "A palette of materials",
                "type": "object",
                "properties": {
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style of noise\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-4,
                        "description": "zoom\nThe terrain zoom mostly for zooming in on a wispy palette\n   \nNumber\n\n    \n* Default Value is 5.0\n* Minimum allowed is 1.0E-4"
                    },
                    "palette": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "palette\nThe palette of blocks to be used in this layer\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzregions": {"enum": [
            "mountains",
            "desert"
        ]},
        "enum-snippet-dimension-mode": {"enum": []},
        "enum-item-type": {"enum": [
            "air",
            "stone",
            "granite",
            "polished_granite",
            "diorite",
            "polished_diorite",
            "andesite",
            "polished_andesite",
            "deepslate",
            "cobbled_deepslate",
            "polished_deepslate",
            "calcite",
            "tuff",
            "dripstone_block",
            "grass_block",
            "dirt",
            "coarse_dirt",
            "podzol",
            "rooted_dirt",
            "mud",
            "crimson_nylium",
            "warped_nylium",
            "cobblestone",
            "oak_planks",
            "spruce_planks",
            "birch_planks",
            "jungle_planks",
            "acacia_planks",
            "dark_oak_planks",
            "mangrove_planks",
            "crimson_planks",
            "warped_planks",
            "oak_sapling",
            "spruce_sapling",
            "birch_sapling",
            "jungle_sapling",
            "acacia_sapling",
            "dark_oak_sapling",
            "mangrove_propagule",
            "bedrock",
            "sand",
            "red_sand",
            "gravel",
            "coal_ore",
            "deepslate_coal_ore",
            "iron_ore",
            "deepslate_iron_ore",
            "copper_ore",
            "deepslate_copper_ore",
            "gold_ore",
            "deepslate_gold_ore",
            "redstone_ore",
            "deepslate_redstone_ore",
            "emerald_ore",
            "deepslate_emerald_ore",
            "lapis_ore",
            "deepslate_lapis_ore",
            "diamond_ore",
            "deepslate_diamond_ore",
            "nether_gold_ore",
            "nether_quartz_ore",
            "ancient_debris",
            "coal_block",
            "raw_iron_block",
            "raw_copper_block",
            "raw_gold_block",
            "amethyst_block",
            "budding_amethyst",
            "iron_block",
            "copper_block",
            "gold_block",
            "diamond_block",
            "netherite_block",
            "exposed_copper",
            "weathered_copper",
            "oxidized_copper",
            "cut_copper",
            "exposed_cut_copper",
            "weathered_cut_copper",
            "oxidized_cut_copper",
            "cut_copper_stairs",
            "exposed_cut_copper_stairs",
            "weathered_cut_copper_stairs",
            "oxidized_cut_copper_stairs",
            "cut_copper_slab",
            "exposed_cut_copper_slab",
            "weathered_cut_copper_slab",
            "oxidized_cut_copper_slab",
            "waxed_copper_block",
            "waxed_exposed_copper",
            "waxed_weathered_copper",
            "waxed_oxidized_copper",
            "waxed_cut_copper",
            "waxed_exposed_cut_copper",
            "waxed_weathered_cut_copper",
            "waxed_oxidized_cut_copper",
            "waxed_cut_copper_stairs",
            "waxed_exposed_cut_copper_stairs",
            "waxed_weathered_cut_copper_stairs",
            "waxed_oxidized_cut_copper_stairs",
            "waxed_cut_copper_slab",
            "waxed_exposed_cut_copper_slab",
            "waxed_weathered_cut_copper_slab",
            "waxed_oxidized_cut_copper_slab",
            "oak_log",
            "spruce_log",
            "birch_log",
            "jungle_log",
            "acacia_log",
            "dark_oak_log",
            "mangrove_log",
            "mangrove_roots",
            "muddy_mangrove_roots",
            "crimson_stem",
            "warped_stem",
            "stripped_oak_log",
            "stripped_spruce_log",
            "stripped_birch_log",
            "stripped_jungle_log",
            "stripped_acacia_log",
            "stripped_dark_oak_log",
            "stripped_mangrove_log",
            "stripped_crimson_stem",
            "stripped_warped_stem",
            "stripped_oak_wood",
            "stripped_spruce_wood",
            "stripped_birch_wood",
            "stripped_jungle_wood",
            "stripped_acacia_wood",
            "stripped_dark_oak_wood",
            "stripped_mangrove_wood",
            "stripped_crimson_hyphae",
            "stripped_warped_hyphae",
            "oak_wood",
            "spruce_wood",
            "birch_wood",
            "jungle_wood",
            "acacia_wood",
            "dark_oak_wood",
            "mangrove_wood",
            "crimson_hyphae",
            "warped_hyphae",
            "oak_leaves",
            "spruce_leaves",
            "birch_leaves",
            "jungle_leaves",
            "acacia_leaves",
            "dark_oak_leaves",
            "mangrove_leaves",
            "azalea_leaves",
            "flowering_azalea_leaves",
            "sponge",
            "wet_sponge",
            "glass",
            "tinted_glass",
            "lapis_block",
            "sandstone",
            "chiseled_sandstone",
            "cut_sandstone",
            "cobweb",
            "grass",
            "fern",
            "azalea",
            "flowering_azalea",
            "dead_bush",
            "seagrass",
            "sea_pickle",
            "white_wool",
            "orange_wool",
            "magenta_wool",
            "light_blue_wool",
            "yellow_wool",
            "lime_wool",
            "pink_wool",
            "gray_wool",
            "light_gray_wool",
            "cyan_wool",
            "purple_wool",
            "blue_wool",
            "brown_wool",
            "green_wool",
            "red_wool",
            "black_wool",
            "dandelion",
            "poppy",
            "blue_orchid",
            "allium",
            "azure_bluet",
            "red_tulip",
            "orange_tulip",
            "white_tulip",
            "pink_tulip",
            "oxeye_daisy",
            "cornflower",
            "lily_of_the_valley",
            "wither_rose",
            "spore_blossom",
            "brown_mushroom",
            "red_mushroom",
            "crimson_fungus",
            "warped_fungus",
            "crimson_roots",
            "warped_roots",
            "nether_sprouts",
            "weeping_vines",
            "twisting_vines",
            "sugar_cane",
            "kelp",
            "moss_carpet",
            "moss_block",
            "hanging_roots",
            "big_dripleaf",
            "small_dripleaf",
            "bamboo",
            "oak_slab",
            "spruce_slab",
            "birch_slab",
            "jungle_slab",
            "acacia_slab",
            "dark_oak_slab",
            "mangrove_slab",
            "crimson_slab",
            "warped_slab",
            "stone_slab",
            "smooth_stone_slab",
            "sandstone_slab",
            "cut_sandstone_slab",
            "petrified_oak_slab",
            "cobblestone_slab",
            "brick_slab",
            "stone_brick_slab",
            "mud_brick_slab",
            "nether_brick_slab",
            "quartz_slab",
            "red_sandstone_slab",
            "cut_red_sandstone_slab",
            "purpur_slab",
            "prismarine_slab",
            "prismarine_brick_slab",
            "dark_prismarine_slab",
            "smooth_quartz",
            "smooth_red_sandstone",
            "smooth_sandstone",
            "smooth_stone",
            "bricks",
            "bookshelf",
            "mossy_cobblestone",
            "obsidian",
            "torch",
            "end_rod",
            "chorus_plant",
            "chorus_flower",
            "purpur_block",
            "purpur_pillar",
            "purpur_stairs",
            "spawner",
            "chest",
            "crafting_table",
            "farmland",
            "furnace",
            "ladder",
            "cobblestone_stairs",
            "snow",
            "ice",
            "snow_block",
            "cactus",
            "clay",
            "jukebox",
            "oak_fence",
            "spruce_fence",
            "birch_fence",
            "jungle_fence",
            "acacia_fence",
            "dark_oak_fence",
            "mangrove_fence",
            "crimson_fence",
            "warped_fence",
            "pumpkin",
            "carved_pumpkin",
            "jack_o_lantern",
            "netherrack",
            "soul_sand",
            "soul_soil",
            "basalt",
            "polished_basalt",
            "smooth_basalt",
            "soul_torch",
            "glowstone",
            "infested_stone",
            "infested_cobblestone",
            "infested_stone_bricks",
            "infested_mossy_stone_bricks",
            "infested_cracked_stone_bricks",
            "infested_chiseled_stone_bricks",
            "infested_deepslate",
            "stone_bricks",
            "mossy_stone_bricks",
            "cracked_stone_bricks",
            "chiseled_stone_bricks",
            "packed_mud",
            "mud_bricks",
            "deepslate_bricks",
            "cracked_deepslate_bricks",
            "deepslate_tiles",
            "cracked_deepslate_tiles",
            "chiseled_deepslate",
            "reinforced_deepslate",
            "brown_mushroom_block",
            "red_mushroom_block",
            "mushroom_stem",
            "iron_bars",
            "chain",
            "glass_pane",
            "melon",
            "vine",
            "glow_lichen",
            "brick_stairs",
            "stone_brick_stairs",
            "mud_brick_stairs",
            "mycelium",
            "lily_pad",
            "nether_bricks",
            "cracked_nether_bricks",
            "chiseled_nether_bricks",
            "nether_brick_fence",
            "nether_brick_stairs",
            "sculk",
            "sculk_vein",
            "sculk_catalyst",
            "sculk_shrieker",
            "enchanting_table",
            "end_portal_frame",
            "end_stone",
            "end_stone_bricks",
            "dragon_egg",
            "sandstone_stairs",
            "ender_chest",
            "emerald_block",
            "oak_stairs",
            "spruce_stairs",
            "birch_stairs",
            "jungle_stairs",
            "acacia_stairs",
            "dark_oak_stairs",
            "mangrove_stairs",
            "crimson_stairs",
            "warped_stairs",
            "command_block",
            "beacon",
            "cobblestone_wall",
            "mossy_cobblestone_wall",
            "brick_wall",
            "prismarine_wall",
            "red_sandstone_wall",
            "mossy_stone_brick_wall",
            "granite_wall",
            "stone_brick_wall",
            "mud_brick_wall",
            "nether_brick_wall",
            "andesite_wall",
            "red_nether_brick_wall",
            "sandstone_wall",
            "end_stone_brick_wall",
            "diorite_wall",
            "blackstone_wall",
            "polished_blackstone_wall",
            "polished_blackstone_brick_wall",
            "cobbled_deepslate_wall",
            "polished_deepslate_wall",
            "deepslate_brick_wall",
            "deepslate_tile_wall",
            "anvil",
            "chipped_anvil",
            "damaged_anvil",
            "chiseled_quartz_block",
            "quartz_block",
            "quartz_bricks",
            "quartz_pillar",
            "quartz_stairs",
            "white_terracotta",
            "orange_terracotta",
            "magenta_terracotta",
            "light_blue_terracotta",
            "yellow_terracotta",
            "lime_terracotta",
            "pink_terracotta",
            "gray_terracotta",
            "light_gray_terracotta",
            "cyan_terracotta",
            "purple_terracotta",
            "blue_terracotta",
            "brown_terracotta",
            "green_terracotta",
            "red_terracotta",
            "black_terracotta",
            "barrier",
            "light",
            "hay_block",
            "white_carpet",
            "orange_carpet",
            "magenta_carpet",
            "light_blue_carpet",
            "yellow_carpet",
            "lime_carpet",
            "pink_carpet",
            "gray_carpet",
            "light_gray_carpet",
            "cyan_carpet",
            "purple_carpet",
            "blue_carpet",
            "brown_carpet",
            "green_carpet",
            "red_carpet",
            "black_carpet",
            "terracotta",
            "packed_ice",
            "dirt_path",
            "sunflower",
            "lilac",
            "rose_bush",
            "peony",
            "tall_grass",
            "large_fern",
            "white_stained_glass",
            "orange_stained_glass",
            "magenta_stained_glass",
            "light_blue_stained_glass",
            "yellow_stained_glass",
            "lime_stained_glass",
            "pink_stained_glass",
            "gray_stained_glass",
            "light_gray_stained_glass",
            "cyan_stained_glass",
            "purple_stained_glass",
            "blue_stained_glass",
            "brown_stained_glass",
            "green_stained_glass",
            "red_stained_glass",
            "black_stained_glass",
            "white_stained_glass_pane",
            "orange_stained_glass_pane",
            "magenta_stained_glass_pane",
            "light_blue_stained_glass_pane",
            "yellow_stained_glass_pane",
            "lime_stained_glass_pane",
            "pink_stained_glass_pane",
            "gray_stained_glass_pane",
            "light_gray_stained_glass_pane",
            "cyan_stained_glass_pane",
            "purple_stained_glass_pane",
            "blue_stained_glass_pane",
            "brown_stained_glass_pane",
            "green_stained_glass_pane",
            "red_stained_glass_pane",
            "black_stained_glass_pane",
            "prismarine",
            "prismarine_bricks",
            "dark_prismarine",
            "prismarine_stairs",
            "prismarine_brick_stairs",
            "dark_prismarine_stairs",
            "sea_lantern",
            "red_sandstone",
            "chiseled_red_sandstone",
            "cut_red_sandstone",
            "red_sandstone_stairs",
            "repeating_command_block",
            "chain_command_block",
            "magma_block",
            "nether_wart_block",
            "warped_wart_block",
            "red_nether_bricks",
            "bone_block",
            "structure_void",
            "shulker_box",
            "white_shulker_box",
            "orange_shulker_box",
            "magenta_shulker_box",
            "light_blue_shulker_box",
            "yellow_shulker_box",
            "lime_shulker_box",
            "pink_shulker_box",
            "gray_shulker_box",
            "light_gray_shulker_box",
            "cyan_shulker_box",
            "purple_shulker_box",
            "blue_shulker_box",
            "brown_shulker_box",
            "green_shulker_box",
            "red_shulker_box",
            "black_shulker_box",
            "white_glazed_terracotta",
            "orange_glazed_terracotta",
            "magenta_glazed_terracotta",
            "light_blue_glazed_terracotta",
            "yellow_glazed_terracotta",
            "lime_glazed_terracotta",
            "pink_glazed_terracotta",
            "gray_glazed_terracotta",
            "light_gray_glazed_terracotta",
            "cyan_glazed_terracotta",
            "purple_glazed_terracotta",
            "blue_glazed_terracotta",
            "brown_glazed_terracotta",
            "green_glazed_terracotta",
            "red_glazed_terracotta",
            "black_glazed_terracotta",
            "white_concrete",
            "orange_concrete",
            "magenta_concrete",
            "light_blue_concrete",
            "yellow_concrete",
            "lime_concrete",
            "pink_concrete",
            "gray_concrete",
            "light_gray_concrete",
            "cyan_concrete",
            "purple_concrete",
            "blue_concrete",
            "brown_concrete",
            "green_concrete",
            "red_concrete",
            "black_concrete",
            "white_concrete_powder",
            "orange_concrete_powder",
            "magenta_concrete_powder",
            "light_blue_concrete_powder",
            "yellow_concrete_powder",
            "lime_concrete_powder",
            "pink_concrete_powder",
            "gray_concrete_powder",
            "light_gray_concrete_powder",
            "cyan_concrete_powder",
            "purple_concrete_powder",
            "blue_concrete_powder",
            "brown_concrete_powder",
            "green_concrete_powder",
            "red_concrete_powder",
            "black_concrete_powder",
            "turtle_egg",
            "dead_tube_coral_block",
            "dead_brain_coral_block",
            "dead_bubble_coral_block",
            "dead_fire_coral_block",
            "dead_horn_coral_block",
            "tube_coral_block",
            "brain_coral_block",
            "bubble_coral_block",
            "fire_coral_block",
            "horn_coral_block",
            "tube_coral",
            "brain_coral",
            "bubble_coral",
            "fire_coral",
            "horn_coral",
            "dead_brain_coral",
            "dead_bubble_coral",
            "dead_fire_coral",
            "dead_horn_coral",
            "dead_tube_coral",
            "tube_coral_fan",
            "brain_coral_fan",
            "bubble_coral_fan",
            "fire_coral_fan",
            "horn_coral_fan",
            "dead_tube_coral_fan",
            "dead_brain_coral_fan",
            "dead_bubble_coral_fan",
            "dead_fire_coral_fan",
            "dead_horn_coral_fan",
            "blue_ice",
            "conduit",
            "polished_granite_stairs",
            "smooth_red_sandstone_stairs",
            "mossy_stone_brick_stairs",
            "polished_diorite_stairs",
            "mossy_cobblestone_stairs",
            "end_stone_brick_stairs",
            "stone_stairs",
            "smooth_sandstone_stairs",
            "smooth_quartz_stairs",
            "granite_stairs",
            "andesite_stairs",
            "red_nether_brick_stairs",
            "polished_andesite_stairs",
            "diorite_stairs",
            "cobbled_deepslate_stairs",
            "polished_deepslate_stairs",
            "deepslate_brick_stairs",
            "deepslate_tile_stairs",
            "polished_granite_slab",
            "smooth_red_sandstone_slab",
            "mossy_stone_brick_slab",
            "polished_diorite_slab",
            "mossy_cobblestone_slab",
            "end_stone_brick_slab",
            "smooth_sandstone_slab",
            "smooth_quartz_slab",
            "granite_slab",
            "andesite_slab",
            "red_nether_brick_slab",
            "polished_andesite_slab",
            "diorite_slab",
            "cobbled_deepslate_slab",
            "polished_deepslate_slab",
            "deepslate_brick_slab",
            "deepslate_tile_slab",
            "scaffolding",
            "redstone",
            "redstone_torch",
            "redstone_block",
            "repeater",
            "comparator",
            "piston",
            "sticky_piston",
            "slime_block",
            "honey_block",
            "observer",
            "hopper",
            "dispenser",
            "dropper",
            "lectern",
            "target",
            "lever",
            "lightning_rod",
            "daylight_detector",
            "sculk_sensor",
            "tripwire_hook",
            "trapped_chest",
            "tnt",
            "redstone_lamp",
            "note_block",
            "stone_button",
            "polished_blackstone_button",
            "oak_button",
            "spruce_button",
            "birch_button",
            "jungle_button",
            "acacia_button",
            "dark_oak_button",
            "mangrove_button",
            "crimson_button",
            "warped_button",
            "stone_pressure_plate",
            "polished_blackstone_pressure_plate",
            "light_weighted_pressure_plate",
            "heavy_weighted_pressure_plate",
            "oak_pressure_plate",
            "spruce_pressure_plate",
            "birch_pressure_plate",
            "jungle_pressure_plate",
            "acacia_pressure_plate",
            "dark_oak_pressure_plate",
            "mangrove_pressure_plate",
            "crimson_pressure_plate",
            "warped_pressure_plate",
            "iron_door",
            "oak_door",
            "spruce_door",
            "birch_door",
            "jungle_door",
            "acacia_door",
            "dark_oak_door",
            "mangrove_door",
            "crimson_door",
            "warped_door",
            "iron_trapdoor",
            "oak_trapdoor",
            "spruce_trapdoor",
            "birch_trapdoor",
            "jungle_trapdoor",
            "acacia_trapdoor",
            "dark_oak_trapdoor",
            "mangrove_trapdoor",
            "crimson_trapdoor",
            "warped_trapdoor",
            "oak_fence_gate",
            "spruce_fence_gate",
            "birch_fence_gate",
            "jungle_fence_gate",
            "acacia_fence_gate",
            "dark_oak_fence_gate",
            "mangrove_fence_gate",
            "crimson_fence_gate",
            "warped_fence_gate",
            "powered_rail",
            "detector_rail",
            "rail",
            "activator_rail",
            "saddle",
            "minecart",
            "chest_minecart",
            "furnace_minecart",
            "tnt_minecart",
            "hopper_minecart",
            "carrot_on_a_stick",
            "warped_fungus_on_a_stick",
            "elytra",
            "oak_boat",
            "oak_chest_boat",
            "spruce_boat",
            "spruce_chest_boat",
            "birch_boat",
            "birch_chest_boat",
            "jungle_boat",
            "jungle_chest_boat",
            "acacia_boat",
            "acacia_chest_boat",
            "dark_oak_boat",
            "dark_oak_chest_boat",
            "mangrove_boat",
            "mangrove_chest_boat",
            "structure_block",
            "jigsaw",
            "turtle_helmet",
            "scute",
            "flint_and_steel",
            "apple",
            "bow",
            "arrow",
            "coal",
            "charcoal",
            "diamond",
            "emerald",
            "lapis_lazuli",
            "quartz",
            "amethyst_shard",
            "raw_iron",
            "iron_ingot",
            "raw_copper",
            "copper_ingot",
            "raw_gold",
            "gold_ingot",
            "netherite_ingot",
            "netherite_scrap",
            "wooden_sword",
            "wooden_shovel",
            "wooden_pickaxe",
            "wooden_axe",
            "wooden_hoe",
            "stone_sword",
            "stone_shovel",
            "stone_pickaxe",
            "stone_axe",
            "stone_hoe",
            "golden_sword",
            "golden_shovel",
            "golden_pickaxe",
            "golden_axe",
            "golden_hoe",
            "iron_sword",
            "iron_shovel",
            "iron_pickaxe",
            "iron_axe",
            "iron_hoe",
            "diamond_sword",
            "diamond_shovel",
            "diamond_pickaxe",
            "diamond_axe",
            "diamond_hoe",
            "netherite_sword",
            "netherite_shovel",
            "netherite_pickaxe",
            "netherite_axe",
            "netherite_hoe",
            "stick",
            "bowl",
            "mushroom_stew",
            "string",
            "feather",
            "gunpowder",
            "wheat_seeds",
            "wheat",
            "bread",
            "leather_helmet",
            "leather_chestplate",
            "leather_leggings",
            "leather_boots",
            "chainmail_helmet",
            "chainmail_chestplate",
            "chainmail_leggings",
            "chainmail_boots",
            "iron_helmet",
            "iron_chestplate",
            "iron_leggings",
            "iron_boots",
            "diamond_helmet",
            "diamond_chestplate",
            "diamond_leggings",
            "diamond_boots",
            "golden_helmet",
            "golden_chestplate",
            "golden_leggings",
            "golden_boots",
            "netherite_helmet",
            "netherite_chestplate",
            "netherite_leggings",
            "netherite_boots",
            "flint",
            "porkchop",
            "cooked_porkchop",
            "painting",
            "golden_apple",
            "enchanted_golden_apple",
            "oak_sign",
            "spruce_sign",
            "birch_sign",
            "jungle_sign",
            "acacia_sign",
            "dark_oak_sign",
            "mangrove_sign",
            "crimson_sign",
            "warped_sign",
            "bucket",
            "water_bucket",
            "lava_bucket",
            "powder_snow_bucket",
            "snowball",
            "leather",
            "milk_bucket",
            "pufferfish_bucket",
            "salmon_bucket",
            "cod_bucket",
            "tropical_fish_bucket",
            "axolotl_bucket",
            "tadpole_bucket",
            "brick",
            "clay_ball",
            "dried_kelp_block",
            "paper",
            "book",
            "slime_ball",
            "egg",
            "compass",
            "recovery_compass",
            "bundle",
            "fishing_rod",
            "clock",
            "spyglass",
            "glowstone_dust",
            "cod",
            "salmon",
            "tropical_fish",
            "pufferfish",
            "cooked_cod",
            "cooked_salmon",
            "ink_sac",
            "glow_ink_sac",
            "cocoa_beans",
            "white_dye",
            "orange_dye",
            "magenta_dye",
            "light_blue_dye",
            "yellow_dye",
            "lime_dye",
            "pink_dye",
            "gray_dye",
            "light_gray_dye",
            "cyan_dye",
            "purple_dye",
            "blue_dye",
            "brown_dye",
            "green_dye",
            "red_dye",
            "black_dye",
            "bone_meal",
            "bone",
            "sugar",
            "cake",
            "white_bed",
            "orange_bed",
            "magenta_bed",
            "light_blue_bed",
            "yellow_bed",
            "lime_bed",
            "pink_bed",
            "gray_bed",
            "light_gray_bed",
            "cyan_bed",
            "purple_bed",
            "blue_bed",
            "brown_bed",
            "green_bed",
            "red_bed",
            "black_bed",
            "cookie",
            "filled_map",
            "shears",
            "melon_slice",
            "dried_kelp",
            "pumpkin_seeds",
            "melon_seeds",
            "beef",
            "cooked_beef",
            "chicken",
            "cooked_chicken",
            "rotten_flesh",
            "ender_pearl",
            "blaze_rod",
            "ghast_tear",
            "gold_nugget",
            "nether_wart",
            "potion",
            "glass_bottle",
            "spider_eye",
            "fermented_spider_eye",
            "blaze_powder",
            "magma_cream",
            "brewing_stand",
            "cauldron",
            "ender_eye",
            "glistering_melon_slice",
            "allay_spawn_egg",
            "axolotl_spawn_egg",
            "bat_spawn_egg",
            "bee_spawn_egg",
            "blaze_spawn_egg",
            "cat_spawn_egg",
            "cave_spider_spawn_egg",
            "chicken_spawn_egg",
            "cod_spawn_egg",
            "cow_spawn_egg",
            "creeper_spawn_egg",
            "dolphin_spawn_egg",
            "donkey_spawn_egg",
            "drowned_spawn_egg",
            "elder_guardian_spawn_egg",
            "enderman_spawn_egg",
            "endermite_spawn_egg",
            "evoker_spawn_egg",
            "fox_spawn_egg",
            "frog_spawn_egg",
            "ghast_spawn_egg",
            "glow_squid_spawn_egg",
            "goat_spawn_egg",
            "guardian_spawn_egg",
            "hoglin_spawn_egg",
            "horse_spawn_egg",
            "husk_spawn_egg",
            "llama_spawn_egg",
            "magma_cube_spawn_egg",
            "mooshroom_spawn_egg",
            "mule_spawn_egg",
            "ocelot_spawn_egg",
            "panda_spawn_egg",
            "parrot_spawn_egg",
            "phantom_spawn_egg",
            "pig_spawn_egg",
            "piglin_spawn_egg",
            "piglin_brute_spawn_egg",
            "pillager_spawn_egg",
            "polar_bear_spawn_egg",
            "pufferfish_spawn_egg",
            "rabbit_spawn_egg",
            "ravager_spawn_egg",
            "salmon_spawn_egg",
            "sheep_spawn_egg",
            "shulker_spawn_egg",
            "silverfish_spawn_egg",
            "skeleton_spawn_egg",
            "skeleton_horse_spawn_egg",
            "slime_spawn_egg",
            "spider_spawn_egg",
            "squid_spawn_egg",
            "stray_spawn_egg",
            "strider_spawn_egg",
            "tadpole_spawn_egg",
            "trader_llama_spawn_egg",
            "tropical_fish_spawn_egg",
            "turtle_spawn_egg",
            "vex_spawn_egg",
            "villager_spawn_egg",
            "vindicator_spawn_egg",
            "wandering_trader_spawn_egg",
            "warden_spawn_egg",
            "witch_spawn_egg",
            "wither_skeleton_spawn_egg",
            "wolf_spawn_egg",
            "zoglin_spawn_egg",
            "zombie_spawn_egg",
            "zombie_horse_spawn_egg",
            "zombie_villager_spawn_egg",
            "zombified_piglin_spawn_egg",
            "experience_bottle",
            "fire_charge",
            "writable_book",
            "written_book",
            "item_frame",
            "glow_item_frame",
            "flower_pot",
            "carrot",
            "potato",
            "baked_potato",
            "poisonous_potato",
            "map",
            "golden_carrot",
            "skeleton_skull",
            "wither_skeleton_skull",
            "player_head",
            "zombie_head",
            "creeper_head",
            "dragon_head",
            "nether_star",
            "pumpkin_pie",
            "firework_rocket",
            "firework_star",
            "enchanted_book",
            "nether_brick",
            "prismarine_shard",
            "prismarine_crystals",
            "rabbit",
            "cooked_rabbit",
            "rabbit_stew",
            "rabbit_foot",
            "rabbit_hide",
            "armor_stand",
            "iron_horse_armor",
            "golden_horse_armor",
            "diamond_horse_armor",
            "leather_horse_armor",
            "lead",
            "name_tag",
            "command_block_minecart",
            "mutton",
            "cooked_mutton",
            "white_banner",
            "orange_banner",
            "magenta_banner",
            "light_blue_banner",
            "yellow_banner",
            "lime_banner",
            "pink_banner",
            "gray_banner",
            "light_gray_banner",
            "cyan_banner",
            "purple_banner",
            "blue_banner",
            "brown_banner",
            "green_banner",
            "red_banner",
            "black_banner",
            "end_crystal",
            "chorus_fruit",
            "popped_chorus_fruit",
            "beetroot",
            "beetroot_seeds",
            "beetroot_soup",
            "dragon_breath",
            "splash_potion",
            "spectral_arrow",
            "tipped_arrow",
            "lingering_potion",
            "shield",
            "totem_of_undying",
            "shulker_shell",
            "iron_nugget",
            "knowledge_book",
            "debug_stick",
            "music_disc_13",
            "music_disc_cat",
            "music_disc_blocks",
            "music_disc_chirp",
            "music_disc_far",
            "music_disc_mall",
            "music_disc_mellohi",
            "music_disc_stal",
            "music_disc_strad",
            "music_disc_ward",
            "music_disc_11",
            "music_disc_wait",
            "music_disc_otherside",
            "music_disc_5",
            "music_disc_pigstep",
            "disc_fragment_5",
            "trident",
            "phantom_membrane",
            "nautilus_shell",
            "heart_of_the_sea",
            "crossbow",
            "suspicious_stew",
            "loom",
            "flower_banner_pattern",
            "creeper_banner_pattern",
            "skull_banner_pattern",
            "mojang_banner_pattern",
            "globe_banner_pattern",
            "piglin_banner_pattern",
            "goat_horn",
            "composter",
            "barrel",
            "smoker",
            "blast_furnace",
            "cartography_table",
            "fletching_table",
            "grindstone",
            "smithing_table",
            "stonecutter",
            "bell",
            "lantern",
            "soul_lantern",
            "sweet_berries",
            "glow_berries",
            "campfire",
            "soul_campfire",
            "shroomlight",
            "honeycomb",
            "bee_nest",
            "beehive",
            "honey_bottle",
            "honeycomb_block",
            "lodestone",
            "crying_obsidian",
            "blackstone",
            "blackstone_slab",
            "blackstone_stairs",
            "gilded_blackstone",
            "polished_blackstone",
            "polished_blackstone_slab",
            "polished_blackstone_stairs",
            "chiseled_polished_blackstone",
            "polished_blackstone_bricks",
            "polished_blackstone_brick_slab",
            "polished_blackstone_brick_stairs",
            "cracked_polished_blackstone_bricks",
            "respawn_anchor",
            "candle",
            "white_candle",
            "orange_candle",
            "magenta_candle",
            "light_blue_candle",
            "yellow_candle",
            "lime_candle",
            "pink_candle",
            "gray_candle",
            "light_gray_candle",
            "cyan_candle",
            "purple_candle",
            "blue_candle",
            "brown_candle",
            "green_candle",
            "red_candle",
            "black_candle",
            "small_amethyst_bud",
            "medium_amethyst_bud",
            "large_amethyst_bud",
            "amethyst_cluster",
            "pointed_dripstone",
            "ochre_froglight",
            "verdant_froglight",
            "pearlescent_froglight",
            "frogspawn",
            "echo_shard",
            "water",
            "lava",
            "tall_seagrass",
            "piston_head",
            "moving_piston",
            "wall_torch",
            "fire",
            "soul_fire",
            "redstone_wire",
            "oak_wall_sign",
            "spruce_wall_sign",
            "birch_wall_sign",
            "acacia_wall_sign",
            "jungle_wall_sign",
            "dark_oak_wall_sign",
            "mangrove_wall_sign",
            "redstone_wall_torch",
            "soul_wall_torch",
            "nether_portal",
            "attached_pumpkin_stem",
            "attached_melon_stem",
            "pumpkin_stem",
            "melon_stem",
            "water_cauldron",
            "lava_cauldron",
            "powder_snow_cauldron",
            "end_portal",
            "cocoa",
            "tripwire",
            "potted_oak_sapling",
            "potted_spruce_sapling",
            "potted_birch_sapling",
            "potted_jungle_sapling",
            "potted_acacia_sapling",
            "potted_dark_oak_sapling",
            "potted_mangrove_propagule",
            "potted_fern",
            "potted_dandelion",
            "potted_poppy",
            "potted_blue_orchid",
            "potted_allium",
            "potted_azure_bluet",
            "potted_red_tulip",
            "potted_orange_tulip",
            "potted_white_tulip",
            "potted_pink_tulip",
            "potted_oxeye_daisy",
            "potted_cornflower",
            "potted_lily_of_the_valley",
            "potted_wither_rose",
            "potted_red_mushroom",
            "potted_brown_mushroom",
            "potted_dead_bush",
            "potted_cactus",
            "carrots",
            "potatoes",
            "skeleton_wall_skull",
            "wither_skeleton_wall_skull",
            "zombie_wall_head",
            "player_wall_head",
            "creeper_wall_head",
            "dragon_wall_head",
            "white_wall_banner",
            "orange_wall_banner",
            "magenta_wall_banner",
            "light_blue_wall_banner",
            "yellow_wall_banner",
            "lime_wall_banner",
            "pink_wall_banner",
            "gray_wall_banner",
            "light_gray_wall_banner",
            "cyan_wall_banner",
            "purple_wall_banner",
            "blue_wall_banner",
            "brown_wall_banner",
            "green_wall_banner",
            "red_wall_banner",
            "black_wall_banner",
            "beetroots",
            "end_gateway",
            "frosted_ice",
            "kelp_plant",
            "dead_tube_coral_wall_fan",
            "dead_brain_coral_wall_fan",
            "dead_bubble_coral_wall_fan",
            "dead_fire_coral_wall_fan",
            "dead_horn_coral_wall_fan",
            "tube_coral_wall_fan",
            "brain_coral_wall_fan",
            "bubble_coral_wall_fan",
            "fire_coral_wall_fan",
            "horn_coral_wall_fan",
            "bamboo_sapling",
            "potted_bamboo",
            "void_air",
            "cave_air",
            "bubble_column",
            "sweet_berry_bush",
            "weeping_vines_plant",
            "twisting_vines_plant",
            "crimson_wall_sign",
            "warped_wall_sign",
            "potted_crimson_fungus",
            "potted_warped_fungus",
            "potted_crimson_roots",
            "potted_warped_roots",
            "candle_cake",
            "white_candle_cake",
            "orange_candle_cake",
            "magenta_candle_cake",
            "light_blue_candle_cake",
            "yellow_candle_cake",
            "lime_candle_cake",
            "pink_candle_cake",
            "gray_candle_cake",
            "light_gray_candle_cake",
            "cyan_candle_cake",
            "purple_candle_cake",
            "blue_candle_cake",
            "brown_candle_cake",
            "green_candle_cake",
            "red_candle_cake",
            "black_candle_cake",
            "powder_snow",
            "cave_vines",
            "cave_vines_plant",
            "big_dripleaf_stem",
            "potted_azalea_bush",
            "potted_flowering_azalea_bush"
        ]},
        "obj-com-volmit-iris-engine-object-iriscarving": {"anyOf": [
            {
                "description": "Represents a carving configuration",
                "type": "object",
                "properties": {
                    "caves": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriscaveplacer"},
                        "description": "caves\nDefine cave placers\n   \nList of CavePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "ravines": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisravineplacer"},
                        "description": "ravines\nDefine ravine placers\n   \nList of RavinePlacers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "elipsoids": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-iriselipsoid"},
                        "description": "elipsoids\nDefine elipsoids\n   \nList of Elipsoids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "spheres": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irissphere"},
                        "description": "spheres\nDefine spheres\n   \nList of Spheres (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "pyramids": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irispyramid"},
                        "description": "pyramids\nDefine pyramids\n   \nList of Pyramids (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzcaves": {"enum": ["cave"]},
        "enum-snippet-fluid-bodies": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisenchantment": {"anyOf": [
            {
                "description": "Represents an enchantment & level",
                "type": "object",
                "properties": {
                    "enchantment": {
                        "type": "string",
                        "$ref": "#/definitions/enum-enchantment",
                        "description": "enchantment\nThe enchantment\n   \nEnchantment Type\n\nMust be a valid Enchantment Type (use ctrl+space for auto complete!)"
                    },
                    "minLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "minLevel\nMinimum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "maxLevel": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "maxLevel\nMaximum amount of this loot\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this enchantment is applied (0 to 1)\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-style": {"enum": []},
        "enum-enchantment": {"enum": [
            "fire_protection",
            "sharpness",
            "flame",
            "soul_speed",
            "aqua_affinity",
            "punch",
            "loyalty",
            "depth_strider",
            "vanishing_curse",
            "unbreaking",
            "knockback",
            "luck_of_the_sea",
            "binding_curse",
            "fortune",
            "protection",
            "efficiency",
            "mending",
            "frost_walker",
            "lure",
            "looting",
            "piercing",
            "blast_protection",
            "smite",
            "multishot",
            "swift_sneak",
            "fire_aspect",
            "channeling",
            "sweeping",
            "thorns",
            "bane_of_arthropods",
            "respiration",
            "riptide",
            "silk_touch",
            "quick_charge",
            "projectile_protection",
            "impaling",
            "feather_falling",
            "power",
            "infinity"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisdimensionmodetype": {"oneOf": [
            {
                "const": "OVERWORLD",
                "description": "Typical dimensions. Has a fluid height, and all features of a biome based world"
            },
            {
                "const": "SUPERFLAT",
                "description": "Ultra fast, but very limited in features. Only supports terrain & biomes. No decorations, mobs, objects, or anything of the sort!"
            },
            {
                "const": "ENCLOSURE",
                "description": "Like the nether, a ceiling & floor carved out"
            },
            {
                "const": "ISLANDS",
                "description": "Floating islands of terrain"
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisblockdrops": {"anyOf": [
            {
                "description": "Represents a block drop list",
                "type": "object",
                "properties": {
                    "blocks": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "blocks\nThe blocks that drop loot\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "exactBlocks": {
                        "type": "boolean",
                        "description": "exactBlocks\nIf exact blocks is set to true, minecraft:barrel[axis=x] will only drop for that axis. When exact is false (default) any barrel will drop the defined drops.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "drops": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisloot"},
                        "description": "drops\nAdd in specific items to drop\n   \nList of Loots (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "skipParents": {
                        "type": "boolean",
                        "description": "skipParents\nIf this is in a biome, setting skipParents to true will ignore the drops in the region and dimension for this block type. The default (false) will allow all three nodes to fire and add to a list of drops.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "replaceVanillaDrops": {
                        "type": "boolean",
                        "description": "replaceVanillaDrops\nRemoves the default vanilla block drops and only drops the given items & any parent loot tables specified for this block type.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisblockdata": {
            "description": "Represents Block Data",
            "type": "object",
            "properties": {
                "preprocessors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {"$ref": "#/definitions/erzscripts"},
                    "description": "preprocessors\nPreprocess this object in-memory when it's loaded, run scripts using the variable 'Iris.getPreprocessorObject()' and modify properties about this object before it's used.\n   \nList<Script>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Script (use ctrl+space for auto complete!)"
                },
                "block": {
                    "type": "string",
                    "$ref": "#/definitions/enum-block-type",
                    "description": "block\nThe block to use\n   \nBlock Type\n\n    \n* Default Value is air\nMust be a valid Block Type (use ctrl+space for auto complete!)"
                },
                "debug": {
                    "type": "boolean",
                    "description": "debug\nDebug this block by printing it to the console when it's used. Must have debug turned on in settings.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "weight": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000,
                    "description": "weight\nThe weight is used when this block data is inside of a list of blockdata. A weight of two is just as if you placed two of the same block data values in the same list making it more common when randomly picked.\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1\n* Maximum allowed is 1000"
                },
                "backup": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata",
                    "description": "backup\nIf the block cannot be created on this version, Iris will attempt to use this backup block data instead.\n   \nBlockData (Object)\nRepresents Block Data"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/obj-com-volmit-iris-util-collection-kmap",
                    "description": "data\nOptional properties for this block data such as 'waterlogged': true\n   \nKMap (Object)\n\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            }
        },
        "oneof-enum-com-volmit-iris-engine-object-noisestyle": {"oneOf": [
            {
                "const": "STATIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BILINEAR",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_BICUBIC",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "STATIC_HERMITE",
                "description": "White Noise is like static. Useful for block scattering but not terrain."
            },
            {
                "const": "IRIS",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "CLOVER",
                "description": "Clover Noise"
            },
            {
                "const": "CLOVER_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_3",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_6",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_9",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE_STARCAST_12",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BILINEAR",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_BICUBIC",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CLOVER_HERMITE",
                "description": "CLOVER noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "VASCULAR",
                "description": "Vascular noise gets higher as the position nears a cell border."
            },
            {
                "const": "FLAT",
                "description": "It always returns 0.5"
            },
            {
                "const": "CELLULAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_3",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_6",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_9",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE_STARCAST_12",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BILINEAR",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_BICUBIC",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "CELLULAR_HERMITE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders."
            },
            {
                "const": "NOWHERE",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CELLULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CLOVER",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SIMPLEX",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_GLOB",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_VASCULAR",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_CUBIC",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_SUPERFRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "NOWHERE_FRACTAL",
                "description": "Classic German Engineering"
            },
            {
                "const": "IRIS_DOUBLE",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_THICK",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "IRIS_HALF",
                "description": "Wispy Perlin-looking simplex noise. The 'iris' style noise."
            },
            {
                "const": "SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise."
            },
            {
                "const": "FRACTAL_SMOKE",
                "description": "Very Detailed smoke using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "VASCULAR_THIN",
                "description": "Thinner Veins."
            },
            {
                "const": "SIMPLEX_CELLS",
                "description": "Cells of simplex noise"
            },
            {
                "const": "SIMPLEX_VASCULAR",
                "description": "Veins of simplex noise"
            },
            {
                "const": "FRACTAL_WATER",
                "description": "Very Detailed fluid using simplex fractured with fractal billow simplex at high octaves."
            },
            {
                "const": "PERLIN",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_HALF",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_DOUBLE",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "PERLIN_IRIS_THICK",
                "description": "Perlin. Like simplex but more natural"
            },
            {
                "const": "FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_PERLIN",
                "description": "Billow Fractal Perlin Noise. 2 Octaves"
            },
            {
                "const": "FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_HALF",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_HALF",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_BILLOW_IRIS_THICK",
                "description": "Billow Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_FBM_IRIS_THICK",
                "description": "FBM Fractal Iris Noise. Single octave."
            },
            {
                "const": "FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. Single octave."
            },
            {
                "const": "BIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "BIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 2 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "TRIOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 3 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUADOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 4 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "QUINTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 5 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEXOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 6 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "SEPTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 7 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "OCTOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 8 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "NONOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 9 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_RM_SIMPLEX",
                "description": "Rigid Multi Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_BILLOW_SIMPLEX",
                "description": "Billow Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "VIGOCTAVE_FRACTAL_FBM_SIMPLEX",
                "description": "FBM Fractal Simplex Noise. 10 octaves."
            },
            {
                "const": "BIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 2 octaves"
            },
            {
                "const": "TRIOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 3 octaves"
            },
            {
                "const": "QUADOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 4 octaves"
            },
            {
                "const": "QUINTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 5 octaves"
            },
            {
                "const": "SEXOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 6 octaves"
            },
            {
                "const": "SEPTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 7 octaves"
            },
            {
                "const": "OCTOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 8 octaves"
            },
            {
                "const": "NONOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 9 octaves"
            },
            {
                "const": "VIGOCTAVE_SIMPLEX",
                "description": "Basic, Smooth & Fast Simplex noise. Uses 10 octaves"
            },
            {
                "const": "GLOB",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_HALF",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_DOUBLE",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "GLOB_IRIS_THICK",
                "description": "Glob noise is like cellular, but with globs..."
            },
            {
                "const": "CUBIC",
                "description": "Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_THICK",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_HALF",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "FRACTAL_CUBIC_IRIS_DOUBLE",
                "description": "Fractal Cubic Noise With Iris Swirls"
            },
            {
                "const": "BIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 2 Octaves"
            },
            {
                "const": "TRIOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 3 Octaves"
            },
            {
                "const": "QUADOCTAVE_FRACTAL_CUBIC",
                "description": "Fractal Cubic Noise, 4 Octaves"
            },
            {
                "const": "CUBIC_IRIS",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_HALF",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_DOUBLE",
                "description": "Cubic Noise"
            },
            {
                "const": "CUBIC_IRIS_THICK",
                "description": "Cubic Noise"
            },
            {
                "const": "CELLULAR_IRIS",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_THICK",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_DOUBLE",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_IRIS_HALF",
                "description": "Cellular noise creates the same noise level for cells, changes noise level on cell borders. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "CELLULAR_HEIGHT",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell"
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_DOUBLE",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_THICK",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "CELLULAR_HEIGHT_IRIS_HALF",
                "description": "Inverse of vascular, height gets to 1.0 as it approaches the center of a cell, using the iris style."
            },
            {
                "const": "VASCULAR_IRIS",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_DOUBLE",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_THICK",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            },
            {
                "const": "VASCULAR_IRIS_HALF",
                "description": "Vascular noise gets higher as the position nears a cell border. Cells are distorted using Iris styled wispy noise."
            }
        ]},
        "obj-com-volmit-iris-engine-object-irisdimensionmode": {"anyOf": [
            {
                "description": "Represents a dimensional mode",
                "type": "object",
                "properties": {"type": {
                    "type": "string",
                    "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irisdimensionmodetype",
                    "description": "type\nThe dimension type\n   \nDimensionModeType\nThe type of dimension this is\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid DimensionModeType (use ctrl+space for auto complete!)"
                }}
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisworm": {"anyOf": [
            {
                "description": "Generate worms",
                "type": "object",
                "properties": {
                    "xStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xStyle\nThe style used to determine the curvature of this worm's x\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yStyle\nThe style used to determine the curvature of this worm's y\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zStyle\nThe style used to determine the curvature of this worm's z\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "maxDistance": {
                        "type": "integer",
                        "description": "maxDistance\nThe max block distance this worm can travel from its start. This can have performance implications at ranges over 1,000 blocks but it's not too serious, test.\n   \nInteger\n\n    \n* Default Value is 128"
                    },
                    "maxIterations": {
                        "type": "integer",
                        "description": "maxIterations\nThe iterations this worm can make\n   \nInteger\n\n    \n* Default Value is 512"
                    },
                    "allowLoops": {
                        "type": "boolean",
                        "description": "allowLoops\nBy default if a worm loops back into itself, it stops at that point and does not continue. This is an optimization, to prevent this turn this option on.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "girth": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "girth\nThe thickness of the worms. Each individual worm has the same thickness while traveling however, each spawned worm will vary in thickness.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisoregenerator": {
            "description": "Ore Layer",
            "type": "object",
            "properties": {
                "palette": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irismaterialpalette",
                            "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-palette",
                            "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "palette\nThe palette of 'ore' generated\n   \nMaterialPalette (Object)\nA palette of materials\n    \nYou can instead specify \"snippet/palette/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "chanceStyle": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                            "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-style",
                            "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "chanceStyle\nThe generator style for the 'ore'\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "generateSurface": {
                    "type": "boolean",
                    "description": "generateSurface\nWill ores generate on the surface of the terrain layer\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                },
                "threshold": {
                    "type": "number",
                    "description": "threshold\nThreshold for rate of generation\n   \nNumber\n\n    \n* Default Value is 0.5"
                },
                "range": {
                    "anyOf": [
                        {
                            "!required": false,
                            "type": "object",
                            "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisrange",
                            "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        },
                        {
                            "type": "string",
                            "$ref": "#/definitions/enum-snippet-range",
                            "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                        }
                    ],
                    "description": "range\nHeight limit (min, max)\n   \nRange (Object)\nRepresents a range\n    \nYou can instead specify \"snippet/range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                }
            }
        },
        "obj-com-volmit-iris-engine-object-irisfluidbodies": {"anyOf": [
            {
                "description": "Represents a fluid body configuration",
                "type": "object",
                "properties": {
                    "rivers": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisriver"},
                        "description": "rivers\nDefine rivers\n   \nList of Rivers (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "lakes": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irislake"},
                        "description": "lakes\nDefine lakes\n   \nList of Lakes (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irislake": {"anyOf": [
            {
                "description": "Represents an Iris Lake",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "widthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "depthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "worm": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisworm",
                                "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-worm",
                                "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "worm\nDefine the shape of this lake\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this lake to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-org-bukkit-world-environment": {"enum": [
            "NORMAL",
            "NETHER",
            "THE_END",
            "CUSTOM"
        ]},
        "erzbiomes": {"enum": [
            "sands-cliffs",
            "sands-high",
            "crater",
            "sands",
            "sands-red"
        ]},
        "obj-com-volmit-iris-engine-object-irisdepositgenerator": {"anyOf": [
            {
                "description": "Creates ore & other block deposits underground",
                "type": "object",
                "properties": {
                    "minHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2032,
                        "description": "minHeight\nThe minimum height this deposit can generate at\n   \nInteger\n\n    \n* Default Value is 7\n* Minimum allowed is 0\n* Maximum allowed is 2032"
                    },
                    "maxHeight": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2032,
                        "description": "maxHeight\nThe maximum height this deposit can generate at\n   \nInteger\n\n    \n* Default Value is 55\n* Minimum allowed is 0\n* Maximum allowed is 2032"
                    },
                    "minSize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 8192,
                        "description": "minSize\nThe minimum amount of deposit blocks per clump\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 8192"
                    },
                    "maxSize": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 8192,
                        "description": "maxSize\nThe maximum amount of deposit blocks per clump\n   \nInteger\n\n    \n* Default Value is 64\n* Minimum allowed is 1\n* Maximum allowed is 8192"
                    },
                    "maxPerChunk": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 128,
                        "description": "maxPerChunk\nThe maximum amount of clumps per chunk\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 128"
                    },
                    "minPerChunk": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 128,
                        "description": "minPerChunk\nThe minimum amount of clumps per chunk\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 0\n* Maximum allowed is 128"
                    },
                    "palette": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisblockdata"},
                        "description": "palette\nThe palette of blocks to be used in this deposit generator\n   \nList of BlockDatas (Objects)\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list."
                    },
                    "varience": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 64,
                        "description": "varience\nOre varience is how many different objects clumps iris will create\n   \nInteger\n\n    \n* Default Value is 3\n* Minimum allowed is 1\n* Maximum allowed is 64"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisriver": {"anyOf": [
            {
                "description": "Represents an Iris river",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "width": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "width\nThe width style of this river\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "worm": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisworm",
                                "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-worm",
                                "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "worm\nDefine the shape of this river\n   \nWorm (Object)\nGenerate worms\n    \nYou can instead specify \"snippet/worm/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this river to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "widthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "widthStyle\nThe width style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "depthStyle": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-shaped-style",
                                "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "depthStyle\nThe depth style of this lake\n   \nShapedGeneratorStyle (Object)\nThis represents a generator with a min and max height\n    \nYou can instead specify \"snippet/shaped-style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-carving": {"enum": []},
        "erzexpressions": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisshapedgeneratorstyle": {"anyOf": [
            {
                "description": "This represents a generator with a min and max height",
                "type": "object",
                "properties": {
                    "generator": {
                        "anyOf": [
                            {
                                "!required": true,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "generator\nThe generator id\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "min": {
                        "type": "integer",
                        "minimum": -2032,
                        "maximum": 2032,
                        "description": "min\nThe min block value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -2032\n* Maximum allowed is 2032"
                    },
                    "max": {
                        "type": "integer",
                        "minimum": -2032,
                        "maximum": 2032,
                        "description": "max\nThe max block value\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is -2032\n* Maximum allowed is 2032"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzjigsaw-structures": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisattributemodifier": {"anyOf": [
            {
                "description": "Represents an attribute modifier for an item or an entity. This allows you to create modifications to basic game attributes such as MAX_HEALTH or ARMOR_VALUE.",
                "type": "object",
                "properties": {
                    "attribute": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attribute",
                        "description": "attribute\nThe Attribute type. This type is pulled from the game attributes. Zombie & Horse attributes will not work on non-zombie/horse entities.\nUsing an attribute on an item will have affects when held, or worn. There is no way to specify further granularity as the game picks this depending on the item type.\n   \nAttribute\n\nMust be a valid Attribute (use ctrl+space for auto complete!)"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "description": "name\nThe Attribute Name is used internally only for the game. This value should be unique to all other attributes applied to this item/entity. It is not shown in game.\n   \nText\n\n    \n* Default Value is \n* Minimum Length allowed is 2"
                    },
                    "operation": {
                        "type": "string",
                        "$ref": "#/definitions/enum-org-bukkit-attribute-attributemodifier-operation",
                        "description": "operation\nThe application operation (add number is default). Add Number adds to the default value. \nAdd scalar_1 will multiply by 1 for example if the health is 20 and you multiply_scalar_1 by 0.5, the health will result in 30, not 10. Use negative values to achieve that.\n   \nOperation\n\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid Operation (use ctrl+space for auto complete!)"
                    },
                    "minAmount": {
                        "type": "number",
                        "description": "minAmount\nMinimum amount for this modifier. Iris randomly chooses an amount, this is the minimum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "maxAmount": {
                        "type": "number",
                        "description": "maxAmount\nMaximum amount for this modifier Iris randomly chooses an amount, this is the maximum it can choose randomly for this attribute.\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "chance": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "chance\nThe chance that this attribute is applied (0 to 1). If the chance is 0.5 (50%), then Iris will only apply this attribute 50% of the time.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0\n* Maximum allowed is 1.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-tree-settings": {"enum": []},
        "obj-com-volmit-iris-engine-object-iristreesettings": {"anyOf": [
            {
                "description": "Tree growth override settings",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "enabled\nTurn replacing on and off\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-iristreemodes",
                        "description": "mode\nObject picking modes\n   \nTreeModes\nSapling override object picking options\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid TreeModes (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-iriscaveplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "cave": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzcaves",
                        "description": "cave\nThe cave to place\n   \nIris Cave\n\n* Minimum Length allowed is 1\nMust be a valid caves (use ctrl+space for auto complete!)"
                    },
                    "breakSurface": {
                        "type": "boolean",
                        "description": "breakSurface\nIf set to true, this cave is allowed to break the surface\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "caveStartHeight": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "caveStartHeight\nThe height range this cave can spawn at. If breakSurface is false, the output of this range will be clamped by the current world height to prevent surface breaking.\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-block-type": {"enum": [
            "minecraft:air",
            "minecraft:stone",
            "minecraft:granite",
            "minecraft:polished_granite",
            "minecraft:diorite",
            "minecraft:polished_diorite",
            "minecraft:andesite",
            "minecraft:polished_andesite",
            "minecraft:deepslate",
            "minecraft:cobbled_deepslate",
            "minecraft:polished_deepslate",
            "minecraft:calcite",
            "minecraft:tuff",
            "minecraft:dripstone_block",
            "minecraft:grass_block",
            "minecraft:dirt",
            "minecraft:coarse_dirt",
            "minecraft:podzol",
            "minecraft:rooted_dirt",
            "minecraft:mud",
            "minecraft:crimson_nylium",
            "minecraft:warped_nylium",
            "minecraft:cobblestone",
            "minecraft:oak_planks",
            "minecraft:spruce_planks",
            "minecraft:birch_planks",
            "minecraft:jungle_planks",
            "minecraft:acacia_planks",
            "minecraft:dark_oak_planks",
            "minecraft:mangrove_planks",
            "minecraft:crimson_planks",
            "minecraft:warped_planks",
            "minecraft:oak_sapling",
            "minecraft:spruce_sapling",
            "minecraft:birch_sapling",
            "minecraft:jungle_sapling",
            "minecraft:acacia_sapling",
            "minecraft:dark_oak_sapling",
            "minecraft:mangrove_propagule",
            "minecraft:bedrock",
            "minecraft:sand",
            "minecraft:red_sand",
            "minecraft:gravel",
            "minecraft:coal_ore",
            "minecraft:deepslate_coal_ore",
            "minecraft:iron_ore",
            "minecraft:deepslate_iron_ore",
            "minecraft:copper_ore",
            "minecraft:deepslate_copper_ore",
            "minecraft:gold_ore",
            "minecraft:deepslate_gold_ore",
            "minecraft:redstone_ore",
            "minecraft:deepslate_redstone_ore",
            "minecraft:emerald_ore",
            "minecraft:deepslate_emerald_ore",
            "minecraft:lapis_ore",
            "minecraft:deepslate_lapis_ore",
            "minecraft:diamond_ore",
            "minecraft:deepslate_diamond_ore",
            "minecraft:nether_gold_ore",
            "minecraft:nether_quartz_ore",
            "minecraft:ancient_debris",
            "minecraft:coal_block",
            "minecraft:raw_iron_block",
            "minecraft:raw_copper_block",
            "minecraft:raw_gold_block",
            "minecraft:amethyst_block",
            "minecraft:budding_amethyst",
            "minecraft:iron_block",
            "minecraft:copper_block",
            "minecraft:gold_block",
            "minecraft:diamond_block",
            "minecraft:netherite_block",
            "minecraft:exposed_copper",
            "minecraft:weathered_copper",
            "minecraft:oxidized_copper",
            "minecraft:cut_copper",
            "minecraft:exposed_cut_copper",
            "minecraft:weathered_cut_copper",
            "minecraft:oxidized_cut_copper",
            "minecraft:cut_copper_stairs",
            "minecraft:exposed_cut_copper_stairs",
            "minecraft:weathered_cut_copper_stairs",
            "minecraft:oxidized_cut_copper_stairs",
            "minecraft:cut_copper_slab",
            "minecraft:exposed_cut_copper_slab",
            "minecraft:weathered_cut_copper_slab",
            "minecraft:oxidized_cut_copper_slab",
            "minecraft:waxed_copper_block",
            "minecraft:waxed_exposed_copper",
            "minecraft:waxed_weathered_copper",
            "minecraft:waxed_oxidized_copper",
            "minecraft:waxed_cut_copper",
            "minecraft:waxed_exposed_cut_copper",
            "minecraft:waxed_weathered_cut_copper",
            "minecraft:waxed_oxidized_cut_copper",
            "minecraft:waxed_cut_copper_stairs",
            "minecraft:waxed_exposed_cut_copper_stairs",
            "minecraft:waxed_weathered_cut_copper_stairs",
            "minecraft:waxed_oxidized_cut_copper_stairs",
            "minecraft:waxed_cut_copper_slab",
            "minecraft:waxed_exposed_cut_copper_slab",
            "minecraft:waxed_weathered_cut_copper_slab",
            "minecraft:waxed_oxidized_cut_copper_slab",
            "minecraft:oak_log",
            "minecraft:spruce_log",
            "minecraft:birch_log",
            "minecraft:jungle_log",
            "minecraft:acacia_log",
            "minecraft:dark_oak_log",
            "minecraft:mangrove_log",
            "minecraft:mangrove_roots",
            "minecraft:muddy_mangrove_roots",
            "minecraft:crimson_stem",
            "minecraft:warped_stem",
            "minecraft:stripped_oak_log",
            "minecraft:stripped_spruce_log",
            "minecraft:stripped_birch_log",
            "minecraft:stripped_jungle_log",
            "minecraft:stripped_acacia_log",
            "minecraft:stripped_dark_oak_log",
            "minecraft:stripped_mangrove_log",
            "minecraft:stripped_crimson_stem",
            "minecraft:stripped_warped_stem",
            "minecraft:stripped_oak_wood",
            "minecraft:stripped_spruce_wood",
            "minecraft:stripped_birch_wood",
            "minecraft:stripped_jungle_wood",
            "minecraft:stripped_acacia_wood",
            "minecraft:stripped_dark_oak_wood",
            "minecraft:stripped_mangrove_wood",
            "minecraft:stripped_crimson_hyphae",
            "minecraft:stripped_warped_hyphae",
            "minecraft:oak_wood",
            "minecraft:spruce_wood",
            "minecraft:birch_wood",
            "minecraft:jungle_wood",
            "minecraft:acacia_wood",
            "minecraft:dark_oak_wood",
            "minecraft:mangrove_wood",
            "minecraft:crimson_hyphae",
            "minecraft:warped_hyphae",
            "minecraft:oak_leaves",
            "minecraft:spruce_leaves",
            "minecraft:birch_leaves",
            "minecraft:jungle_leaves",
            "minecraft:acacia_leaves",
            "minecraft:dark_oak_leaves",
            "minecraft:mangrove_leaves",
            "minecraft:azalea_leaves",
            "minecraft:flowering_azalea_leaves",
            "minecraft:sponge",
            "minecraft:wet_sponge",
            "minecraft:glass",
            "minecraft:tinted_glass",
            "minecraft:lapis_block",
            "minecraft:sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:cut_sandstone",
            "minecraft:cobweb",
            "minecraft:grass",
            "minecraft:fern",
            "minecraft:azalea",
            "minecraft:flowering_azalea",
            "minecraft:dead_bush",
            "minecraft:seagrass",
            "minecraft:sea_pickle",
            "minecraft:white_wool",
            "minecraft:orange_wool",
            "minecraft:magenta_wool",
            "minecraft:light_blue_wool",
            "minecraft:yellow_wool",
            "minecraft:lime_wool",
            "minecraft:pink_wool",
            "minecraft:gray_wool",
            "minecraft:light_gray_wool",
            "minecraft:cyan_wool",
            "minecraft:purple_wool",
            "minecraft:blue_wool",
            "minecraft:brown_wool",
            "minecraft:green_wool",
            "minecraft:red_wool",
            "minecraft:black_wool",
            "minecraft:dandelion",
            "minecraft:poppy",
            "minecraft:blue_orchid",
            "minecraft:allium",
            "minecraft:azure_bluet",
            "minecraft:red_tulip",
            "minecraft:orange_tulip",
            "minecraft:white_tulip",
            "minecraft:pink_tulip",
            "minecraft:oxeye_daisy",
            "minecraft:cornflower",
            "minecraft:lily_of_the_valley",
            "minecraft:wither_rose",
            "minecraft:spore_blossom",
            "minecraft:brown_mushroom",
            "minecraft:red_mushroom",
            "minecraft:crimson_fungus",
            "minecraft:warped_fungus",
            "minecraft:crimson_roots",
            "minecraft:warped_roots",
            "minecraft:nether_sprouts",
            "minecraft:weeping_vines",
            "minecraft:twisting_vines",
            "minecraft:sugar_cane",
            "minecraft:kelp",
            "minecraft:moss_carpet",
            "minecraft:moss_block",
            "minecraft:hanging_roots",
            "minecraft:big_dripleaf",
            "minecraft:small_dripleaf",
            "minecraft:bamboo",
            "minecraft:oak_slab",
            "minecraft:spruce_slab",
            "minecraft:birch_slab",
            "minecraft:jungle_slab",
            "minecraft:acacia_slab",
            "minecraft:dark_oak_slab",
            "minecraft:mangrove_slab",
            "minecraft:crimson_slab",
            "minecraft:warped_slab",
            "minecraft:stone_slab",
            "minecraft:smooth_stone_slab",
            "minecraft:sandstone_slab",
            "minecraft:cut_sandstone_slab",
            "minecraft:petrified_oak_slab",
            "minecraft:cobblestone_slab",
            "minecraft:brick_slab",
            "minecraft:stone_brick_slab",
            "minecraft:mud_brick_slab",
            "minecraft:nether_brick_slab",
            "minecraft:quartz_slab",
            "minecraft:red_sandstone_slab",
            "minecraft:cut_red_sandstone_slab",
            "minecraft:purpur_slab",
            "minecraft:prismarine_slab",
            "minecraft:prismarine_brick_slab",
            "minecraft:dark_prismarine_slab",
            "minecraft:smooth_quartz",
            "minecraft:smooth_red_sandstone",
            "minecraft:smooth_sandstone",
            "minecraft:smooth_stone",
            "minecraft:bricks",
            "minecraft:bookshelf",
            "minecraft:mossy_cobblestone",
            "minecraft:obsidian",
            "minecraft:torch",
            "minecraft:end_rod",
            "minecraft:chorus_plant",
            "minecraft:chorus_flower",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_stairs",
            "minecraft:spawner",
            "minecraft:chest",
            "minecraft:crafting_table",
            "minecraft:farmland",
            "minecraft:furnace",
            "minecraft:ladder",
            "minecraft:cobblestone_stairs",
            "minecraft:snow",
            "minecraft:ice",
            "minecraft:snow_block",
            "minecraft:cactus",
            "minecraft:clay",
            "minecraft:jukebox",
            "minecraft:oak_fence",
            "minecraft:spruce_fence",
            "minecraft:birch_fence",
            "minecraft:jungle_fence",
            "minecraft:acacia_fence",
            "minecraft:dark_oak_fence",
            "minecraft:mangrove_fence",
            "minecraft:crimson_fence",
            "minecraft:warped_fence",
            "minecraft:pumpkin",
            "minecraft:carved_pumpkin",
            "minecraft:jack_o_lantern",
            "minecraft:netherrack",
            "minecraft:soul_sand",
            "minecraft:soul_soil",
            "minecraft:basalt",
            "minecraft:polished_basalt",
            "minecraft:smooth_basalt",
            "minecraft:soul_torch",
            "minecraft:glowstone",
            "minecraft:infested_stone",
            "minecraft:infested_cobblestone",
            "minecraft:infested_stone_bricks",
            "minecraft:infested_mossy_stone_bricks",
            "minecraft:infested_cracked_stone_bricks",
            "minecraft:infested_chiseled_stone_bricks",
            "minecraft:infested_deepslate",
            "minecraft:stone_bricks",
            "minecraft:mossy_stone_bricks",
            "minecraft:cracked_stone_bricks",
            "minecraft:chiseled_stone_bricks",
            "minecraft:packed_mud",
            "minecraft:mud_bricks",
            "minecraft:deepslate_bricks",
            "minecraft:cracked_deepslate_bricks",
            "minecraft:deepslate_tiles",
            "minecraft:cracked_deepslate_tiles",
            "minecraft:chiseled_deepslate",
            "minecraft:reinforced_deepslate",
            "minecraft:brown_mushroom_block",
            "minecraft:red_mushroom_block",
            "minecraft:mushroom_stem",
            "minecraft:iron_bars",
            "minecraft:chain",
            "minecraft:glass_pane",
            "minecraft:melon",
            "minecraft:vine",
            "minecraft:glow_lichen",
            "minecraft:brick_stairs",
            "minecraft:stone_brick_stairs",
            "minecraft:mud_brick_stairs",
            "minecraft:mycelium",
            "minecraft:lily_pad",
            "minecraft:nether_bricks",
            "minecraft:cracked_nether_bricks",
            "minecraft:chiseled_nether_bricks",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_stairs",
            "minecraft:sculk",
            "minecraft:sculk_vein",
            "minecraft:sculk_catalyst",
            "minecraft:sculk_shrieker",
            "minecraft:enchanting_table",
            "minecraft:end_portal_frame",
            "minecraft:end_stone",
            "minecraft:end_stone_bricks",
            "minecraft:dragon_egg",
            "minecraft:sandstone_stairs",
            "minecraft:ender_chest",
            "minecraft:emerald_block",
            "minecraft:oak_stairs",
            "minecraft:spruce_stairs",
            "minecraft:birch_stairs",
            "minecraft:jungle_stairs",
            "minecraft:acacia_stairs",
            "minecraft:dark_oak_stairs",
            "minecraft:mangrove_stairs",
            "minecraft:crimson_stairs",
            "minecraft:warped_stairs",
            "minecraft:command_block",
            "minecraft:beacon",
            "minecraft:cobblestone_wall",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:brick_wall",
            "minecraft:prismarine_wall",
            "minecraft:red_sandstone_wall",
            "minecraft:mossy_stone_brick_wall",
            "minecraft:granite_wall",
            "minecraft:stone_brick_wall",
            "minecraft:mud_brick_wall",
            "minecraft:nether_brick_wall",
            "minecraft:andesite_wall",
            "minecraft:red_nether_brick_wall",
            "minecraft:sandstone_wall",
            "minecraft:end_stone_brick_wall",
            "minecraft:diorite_wall",
            "minecraft:blackstone_wall",
            "minecraft:polished_blackstone_wall",
            "minecraft:polished_blackstone_brick_wall",
            "minecraft:cobbled_deepslate_wall",
            "minecraft:polished_deepslate_wall",
            "minecraft:deepslate_brick_wall",
            "minecraft:deepslate_tile_wall",
            "minecraft:anvil",
            "minecraft:chipped_anvil",
            "minecraft:damaged_anvil",
            "minecraft:chiseled_quartz_block",
            "minecraft:quartz_block",
            "minecraft:quartz_bricks",
            "minecraft:quartz_pillar",
            "minecraft:quartz_stairs",
            "minecraft:white_terracotta",
            "minecraft:orange_terracotta",
            "minecraft:magenta_terracotta",
            "minecraft:light_blue_terracotta",
            "minecraft:yellow_terracotta",
            "minecraft:lime_terracotta",
            "minecraft:pink_terracotta",
            "minecraft:gray_terracotta",
            "minecraft:light_gray_terracotta",
            "minecraft:cyan_terracotta",
            "minecraft:purple_terracotta",
            "minecraft:blue_terracotta",
            "minecraft:brown_terracotta",
            "minecraft:green_terracotta",
            "minecraft:red_terracotta",
            "minecraft:black_terracotta",
            "minecraft:barrier",
            "minecraft:light",
            "minecraft:hay_block",
            "minecraft:white_carpet",
            "minecraft:orange_carpet",
            "minecraft:magenta_carpet",
            "minecraft:light_blue_carpet",
            "minecraft:yellow_carpet",
            "minecraft:lime_carpet",
            "minecraft:pink_carpet",
            "minecraft:gray_carpet",
            "minecraft:light_gray_carpet",
            "minecraft:cyan_carpet",
            "minecraft:purple_carpet",
            "minecraft:blue_carpet",
            "minecraft:brown_carpet",
            "minecraft:green_carpet",
            "minecraft:red_carpet",
            "minecraft:black_carpet",
            "minecraft:terracotta",
            "minecraft:packed_ice",
            "minecraft:dirt_path",
            "minecraft:sunflower",
            "minecraft:lilac",
            "minecraft:rose_bush",
            "minecraft:peony",
            "minecraft:tall_grass",
            "minecraft:large_fern",
            "minecraft:white_stained_glass",
            "minecraft:orange_stained_glass",
            "minecraft:magenta_stained_glass",
            "minecraft:light_blue_stained_glass",
            "minecraft:yellow_stained_glass",
            "minecraft:lime_stained_glass",
            "minecraft:pink_stained_glass",
            "minecraft:gray_stained_glass",
            "minecraft:light_gray_stained_glass",
            "minecraft:cyan_stained_glass",
            "minecraft:purple_stained_glass",
            "minecraft:blue_stained_glass",
            "minecraft:brown_stained_glass",
            "minecraft:green_stained_glass",
            "minecraft:red_stained_glass",
            "minecraft:black_stained_glass",
            "minecraft:white_stained_glass_pane",
            "minecraft:orange_stained_glass_pane",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:lime_stained_glass_pane",
            "minecraft:pink_stained_glass_pane",
            "minecraft:gray_stained_glass_pane",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:purple_stained_glass_pane",
            "minecraft:blue_stained_glass_pane",
            "minecraft:brown_stained_glass_pane",
            "minecraft:green_stained_glass_pane",
            "minecraft:red_stained_glass_pane",
            "minecraft:black_stained_glass_pane",
            "minecraft:prismarine",
            "minecraft:prismarine_bricks",
            "minecraft:dark_prismarine",
            "minecraft:prismarine_stairs",
            "minecraft:prismarine_brick_stairs",
            "minecraft:dark_prismarine_stairs",
            "minecraft:sea_lantern",
            "minecraft:red_sandstone",
            "minecraft:chiseled_red_sandstone",
            "minecraft:cut_red_sandstone",
            "minecraft:red_sandstone_stairs",
            "minecraft:repeating_command_block",
            "minecraft:chain_command_block",
            "minecraft:magma_block",
            "minecraft:nether_wart_block",
            "minecraft:warped_wart_block",
            "minecraft:red_nether_bricks",
            "minecraft:bone_block",
            "minecraft:structure_void",
            "minecraft:shulker_box",
            "minecraft:white_shulker_box",
            "minecraft:orange_shulker_box",
            "minecraft:magenta_shulker_box",
            "minecraft:light_blue_shulker_box",
            "minecraft:yellow_shulker_box",
            "minecraft:lime_shulker_box",
            "minecraft:pink_shulker_box",
            "minecraft:gray_shulker_box",
            "minecraft:light_gray_shulker_box",
            "minecraft:cyan_shulker_box",
            "minecraft:purple_shulker_box",
            "minecraft:blue_shulker_box",
            "minecraft:brown_shulker_box",
            "minecraft:green_shulker_box",
            "minecraft:red_shulker_box",
            "minecraft:black_shulker_box",
            "minecraft:white_glazed_terracotta",
            "minecraft:orange_glazed_terracotta",
            "minecraft:magenta_glazed_terracotta",
            "minecraft:light_blue_glazed_terracotta",
            "minecraft:yellow_glazed_terracotta",
            "minecraft:lime_glazed_terracotta",
            "minecraft:pink_glazed_terracotta",
            "minecraft:gray_glazed_terracotta",
            "minecraft:light_gray_glazed_terracotta",
            "minecraft:cyan_glazed_terracotta",
            "minecraft:purple_glazed_terracotta",
            "minecraft:blue_glazed_terracotta",
            "minecraft:brown_glazed_terracotta",
            "minecraft:green_glazed_terracotta",
            "minecraft:red_glazed_terracotta",
            "minecraft:black_glazed_terracotta",
            "minecraft:white_concrete",
            "minecraft:orange_concrete",
            "minecraft:magenta_concrete",
            "minecraft:light_blue_concrete",
            "minecraft:yellow_concrete",
            "minecraft:lime_concrete",
            "minecraft:pink_concrete",
            "minecraft:gray_concrete",
            "minecraft:light_gray_concrete",
            "minecraft:cyan_concrete",
            "minecraft:purple_concrete",
            "minecraft:blue_concrete",
            "minecraft:brown_concrete",
            "minecraft:green_concrete",
            "minecraft:red_concrete",
            "minecraft:black_concrete",
            "minecraft:white_concrete_powder",
            "minecraft:orange_concrete_powder",
            "minecraft:magenta_concrete_powder",
            "minecraft:light_blue_concrete_powder",
            "minecraft:yellow_concrete_powder",
            "minecraft:lime_concrete_powder",
            "minecraft:pink_concrete_powder",
            "minecraft:gray_concrete_powder",
            "minecraft:light_gray_concrete_powder",
            "minecraft:cyan_concrete_powder",
            "minecraft:purple_concrete_powder",
            "minecraft:blue_concrete_powder",
            "minecraft:brown_concrete_powder",
            "minecraft:green_concrete_powder",
            "minecraft:red_concrete_powder",
            "minecraft:black_concrete_powder",
            "minecraft:turtle_egg",
            "minecraft:dead_tube_coral_block",
            "minecraft:dead_brain_coral_block",
            "minecraft:dead_bubble_coral_block",
            "minecraft:dead_fire_coral_block",
            "minecraft:dead_horn_coral_block",
            "minecraft:tube_coral_block",
            "minecraft:brain_coral_block",
            "minecraft:bubble_coral_block",
            "minecraft:fire_coral_block",
            "minecraft:horn_coral_block",
            "minecraft:tube_coral",
            "minecraft:brain_coral",
            "minecraft:bubble_coral",
            "minecraft:fire_coral",
            "minecraft:horn_coral",
            "minecraft:dead_brain_coral",
            "minecraft:dead_bubble_coral",
            "minecraft:dead_fire_coral",
            "minecraft:dead_horn_coral",
            "minecraft:dead_tube_coral",
            "minecraft:tube_coral_fan",
            "minecraft:brain_coral_fan",
            "minecraft:bubble_coral_fan",
            "minecraft:fire_coral_fan",
            "minecraft:horn_coral_fan",
            "minecraft:dead_tube_coral_fan",
            "minecraft:dead_brain_coral_fan",
            "minecraft:dead_bubble_coral_fan",
            "minecraft:dead_fire_coral_fan",
            "minecraft:dead_horn_coral_fan",
            "minecraft:blue_ice",
            "minecraft:conduit",
            "minecraft:polished_granite_stairs",
            "minecraft:smooth_red_sandstone_stairs",
            "minecraft:mossy_stone_brick_stairs",
            "minecraft:polished_diorite_stairs",
            "minecraft:mossy_cobblestone_stairs",
            "minecraft:end_stone_brick_stairs",
            "minecraft:stone_stairs",
            "minecraft:smooth_sandstone_stairs",
            "minecraft:smooth_quartz_stairs",
            "minecraft:granite_stairs",
            "minecraft:andesite_stairs",
            "minecraft:red_nether_brick_stairs",
            "minecraft:polished_andesite_stairs",
            "minecraft:diorite_stairs",
            "minecraft:cobbled_deepslate_stairs",
            "minecraft:polished_deepslate_stairs",
            "minecraft:deepslate_brick_stairs",
            "minecraft:deepslate_tile_stairs",
            "minecraft:polished_granite_slab",
            "minecraft:smooth_red_sandstone_slab",
            "minecraft:mossy_stone_brick_slab",
            "minecraft:polished_diorite_slab",
            "minecraft:mossy_cobblestone_slab",
            "minecraft:end_stone_brick_slab",
            "minecraft:smooth_sandstone_slab",
            "minecraft:smooth_quartz_slab",
            "minecraft:granite_slab",
            "minecraft:andesite_slab",
            "minecraft:red_nether_brick_slab",
            "minecraft:polished_andesite_slab",
            "minecraft:diorite_slab",
            "minecraft:cobbled_deepslate_slab",
            "minecraft:polished_deepslate_slab",
            "minecraft:deepslate_brick_slab",
            "minecraft:deepslate_tile_slab",
            "minecraft:scaffolding",
            "minecraft:redstone_torch",
            "minecraft:redstone_block",
            "minecraft:repeater",
            "minecraft:comparator",
            "minecraft:piston",
            "minecraft:sticky_piston",
            "minecraft:slime_block",
            "minecraft:honey_block",
            "minecraft:observer",
            "minecraft:hopper",
            "minecraft:dispenser",
            "minecraft:dropper",
            "minecraft:lectern",
            "minecraft:target",
            "minecraft:lever",
            "minecraft:lightning_rod",
            "minecraft:daylight_detector",
            "minecraft:sculk_sensor",
            "minecraft:tripwire_hook",
            "minecraft:trapped_chest",
            "minecraft:tnt",
            "minecraft:redstone_lamp",
            "minecraft:note_block",
            "minecraft:stone_button",
            "minecraft:polished_blackstone_button",
            "minecraft:oak_button",
            "minecraft:spruce_button",
            "minecraft:birch_button",
            "minecraft:jungle_button",
            "minecraft:acacia_button",
            "minecraft:dark_oak_button",
            "minecraft:mangrove_button",
            "minecraft:crimson_button",
            "minecraft:warped_button",
            "minecraft:stone_pressure_plate",
            "minecraft:polished_blackstone_pressure_plate",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:oak_pressure_plate",
            "minecraft:spruce_pressure_plate",
            "minecraft:birch_pressure_plate",
            "minecraft:jungle_pressure_plate",
            "minecraft:acacia_pressure_plate",
            "minecraft:dark_oak_pressure_plate",
            "minecraft:mangrove_pressure_plate",
            "minecraft:crimson_pressure_plate",
            "minecraft:warped_pressure_plate",
            "minecraft:iron_door",
            "minecraft:oak_door",
            "minecraft:spruce_door",
            "minecraft:birch_door",
            "minecraft:jungle_door",
            "minecraft:acacia_door",
            "minecraft:dark_oak_door",
            "minecraft:mangrove_door",
            "minecraft:crimson_door",
            "minecraft:warped_door",
            "minecraft:iron_trapdoor",
            "minecraft:oak_trapdoor",
            "minecraft:spruce_trapdoor",
            "minecraft:birch_trapdoor",
            "minecraft:jungle_trapdoor",
            "minecraft:acacia_trapdoor",
            "minecraft:dark_oak_trapdoor",
            "minecraft:mangrove_trapdoor",
            "minecraft:crimson_trapdoor",
            "minecraft:warped_trapdoor",
            "minecraft:oak_fence_gate",
            "minecraft:spruce_fence_gate",
            "minecraft:birch_fence_gate",
            "minecraft:jungle_fence_gate",
            "minecraft:acacia_fence_gate",
            "minecraft:dark_oak_fence_gate",
            "minecraft:mangrove_fence_gate",
            "minecraft:crimson_fence_gate",
            "minecraft:warped_fence_gate",
            "minecraft:powered_rail",
            "minecraft:detector_rail",
            "minecraft:rail",
            "minecraft:activator_rail",
            "minecraft:structure_block",
            "minecraft:jigsaw",
            "minecraft:wheat",
            "minecraft:oak_sign",
            "minecraft:spruce_sign",
            "minecraft:birch_sign",
            "minecraft:jungle_sign",
            "minecraft:acacia_sign",
            "minecraft:dark_oak_sign",
            "minecraft:mangrove_sign",
            "minecraft:crimson_sign",
            "minecraft:warped_sign",
            "minecraft:dried_kelp_block",
            "minecraft:cake",
            "minecraft:white_bed",
            "minecraft:orange_bed",
            "minecraft:magenta_bed",
            "minecraft:light_blue_bed",
            "minecraft:yellow_bed",
            "minecraft:lime_bed",
            "minecraft:pink_bed",
            "minecraft:gray_bed",
            "minecraft:light_gray_bed",
            "minecraft:cyan_bed",
            "minecraft:purple_bed",
            "minecraft:blue_bed",
            "minecraft:brown_bed",
            "minecraft:green_bed",
            "minecraft:red_bed",
            "minecraft:black_bed",
            "minecraft:nether_wart",
            "minecraft:brewing_stand",
            "minecraft:cauldron",
            "minecraft:flower_pot",
            "minecraft:skeleton_skull",
            "minecraft:wither_skeleton_skull",
            "minecraft:player_head",
            "minecraft:zombie_head",
            "minecraft:creeper_head",
            "minecraft:dragon_head",
            "minecraft:white_banner",
            "minecraft:orange_banner",
            "minecraft:magenta_banner",
            "minecraft:light_blue_banner",
            "minecraft:yellow_banner",
            "minecraft:lime_banner",
            "minecraft:pink_banner",
            "minecraft:gray_banner",
            "minecraft:light_gray_banner",
            "minecraft:cyan_banner",
            "minecraft:purple_banner",
            "minecraft:blue_banner",
            "minecraft:brown_banner",
            "minecraft:green_banner",
            "minecraft:red_banner",
            "minecraft:black_banner",
            "minecraft:loom",
            "minecraft:composter",
            "minecraft:barrel",
            "minecraft:smoker",
            "minecraft:blast_furnace",
            "minecraft:cartography_table",
            "minecraft:fletching_table",
            "minecraft:grindstone",
            "minecraft:smithing_table",
            "minecraft:stonecutter",
            "minecraft:bell",
            "minecraft:lantern",
            "minecraft:soul_lantern",
            "minecraft:campfire",
            "minecraft:soul_campfire",
            "minecraft:shroomlight",
            "minecraft:bee_nest",
            "minecraft:beehive",
            "minecraft:honeycomb_block",
            "minecraft:lodestone",
            "minecraft:crying_obsidian",
            "minecraft:blackstone",
            "minecraft:blackstone_slab",
            "minecraft:blackstone_stairs",
            "minecraft:gilded_blackstone",
            "minecraft:polished_blackstone",
            "minecraft:polished_blackstone_slab",
            "minecraft:polished_blackstone_stairs",
            "minecraft:chiseled_polished_blackstone",
            "minecraft:polished_blackstone_bricks",
            "minecraft:polished_blackstone_brick_slab",
            "minecraft:polished_blackstone_brick_stairs",
            "minecraft:cracked_polished_blackstone_bricks",
            "minecraft:respawn_anchor",
            "minecraft:candle",
            "minecraft:white_candle",
            "minecraft:orange_candle",
            "minecraft:magenta_candle",
            "minecraft:light_blue_candle",
            "minecraft:yellow_candle",
            "minecraft:lime_candle",
            "minecraft:pink_candle",
            "minecraft:gray_candle",
            "minecraft:light_gray_candle",
            "minecraft:cyan_candle",
            "minecraft:purple_candle",
            "minecraft:blue_candle",
            "minecraft:brown_candle",
            "minecraft:green_candle",
            "minecraft:red_candle",
            "minecraft:black_candle",
            "minecraft:small_amethyst_bud",
            "minecraft:medium_amethyst_bud",
            "minecraft:large_amethyst_bud",
            "minecraft:amethyst_cluster",
            "minecraft:pointed_dripstone",
            "minecraft:ochre_froglight",
            "minecraft:verdant_froglight",
            "minecraft:pearlescent_froglight",
            "minecraft:frogspawn",
            "minecraft:water",
            "minecraft:lava",
            "minecraft:tall_seagrass",
            "minecraft:piston_head",
            "minecraft:moving_piston",
            "minecraft:wall_torch",
            "minecraft:fire",
            "minecraft:soul_fire",
            "minecraft:redstone_wire",
            "minecraft:oak_wall_sign",
            "minecraft:spruce_wall_sign",
            "minecraft:birch_wall_sign",
            "minecraft:acacia_wall_sign",
            "minecraft:jungle_wall_sign",
            "minecraft:dark_oak_wall_sign",
            "minecraft:mangrove_wall_sign",
            "minecraft:redstone_wall_torch",
            "minecraft:soul_wall_torch",
            "minecraft:nether_portal",
            "minecraft:attached_pumpkin_stem",
            "minecraft:attached_melon_stem",
            "minecraft:pumpkin_stem",
            "minecraft:melon_stem",
            "minecraft:water_cauldron",
            "minecraft:lava_cauldron",
            "minecraft:powder_snow_cauldron",
            "minecraft:end_portal",
            "minecraft:cocoa",
            "minecraft:tripwire",
            "minecraft:potted_oak_sapling",
            "minecraft:potted_spruce_sapling",
            "minecraft:potted_birch_sapling",
            "minecraft:potted_jungle_sapling",
            "minecraft:potted_acacia_sapling",
            "minecraft:potted_dark_oak_sapling",
            "minecraft:potted_mangrove_propagule",
            "minecraft:potted_fern",
            "minecraft:potted_dandelion",
            "minecraft:potted_poppy",
            "minecraft:potted_blue_orchid",
            "minecraft:potted_allium",
            "minecraft:potted_azure_bluet",
            "minecraft:potted_red_tulip",
            "minecraft:potted_orange_tulip",
            "minecraft:potted_white_tulip",
            "minecraft:potted_pink_tulip",
            "minecraft:potted_oxeye_daisy",
            "minecraft:potted_cornflower",
            "minecraft:potted_lily_of_the_valley",
            "minecraft:potted_wither_rose",
            "minecraft:potted_red_mushroom",
            "minecraft:potted_brown_mushroom",
            "minecraft:potted_dead_bush",
            "minecraft:potted_cactus",
            "minecraft:carrots",
            "minecraft:potatoes",
            "minecraft:skeleton_wall_skull",
            "minecraft:wither_skeleton_wall_skull",
            "minecraft:zombie_wall_head",
            "minecraft:player_wall_head",
            "minecraft:creeper_wall_head",
            "minecraft:dragon_wall_head",
            "minecraft:white_wall_banner",
            "minecraft:orange_wall_banner",
            "minecraft:magenta_wall_banner",
            "minecraft:light_blue_wall_banner",
            "minecraft:yellow_wall_banner",
            "minecraft:lime_wall_banner",
            "minecraft:pink_wall_banner",
            "minecraft:gray_wall_banner",
            "minecraft:light_gray_wall_banner",
            "minecraft:cyan_wall_banner",
            "minecraft:purple_wall_banner",
            "minecraft:blue_wall_banner",
            "minecraft:brown_wall_banner",
            "minecraft:green_wall_banner",
            "minecraft:red_wall_banner",
            "minecraft:black_wall_banner",
            "minecraft:beetroots",
            "minecraft:end_gateway",
            "minecraft:frosted_ice",
            "minecraft:kelp_plant",
            "minecraft:dead_tube_coral_wall_fan",
            "minecraft:dead_brain_coral_wall_fan",
            "minecraft:dead_bubble_coral_wall_fan",
            "minecraft:dead_fire_coral_wall_fan",
            "minecraft:dead_horn_coral_wall_fan",
            "minecraft:tube_coral_wall_fan",
            "minecraft:brain_coral_wall_fan",
            "minecraft:bubble_coral_wall_fan",
            "minecraft:fire_coral_wall_fan",
            "minecraft:horn_coral_wall_fan",
            "minecraft:bamboo_sapling",
            "minecraft:potted_bamboo",
            "minecraft:void_air",
            "minecraft:cave_air",
            "minecraft:bubble_column",
            "minecraft:sweet_berry_bush",
            "minecraft:weeping_vines_plant",
            "minecraft:twisting_vines_plant",
            "minecraft:crimson_wall_sign",
            "minecraft:warped_wall_sign",
            "minecraft:potted_crimson_fungus",
            "minecraft:potted_warped_fungus",
            "minecraft:potted_crimson_roots",
            "minecraft:potted_warped_roots",
            "minecraft:candle_cake",
            "minecraft:white_candle_cake",
            "minecraft:orange_candle_cake",
            "minecraft:magenta_candle_cake",
            "minecraft:light_blue_candle_cake",
            "minecraft:yellow_candle_cake",
            "minecraft:lime_candle_cake",
            "minecraft:pink_candle_cake",
            "minecraft:gray_candle_cake",
            "minecraft:light_gray_candle_cake",
            "minecraft:cyan_candle_cake",
            "minecraft:purple_candle_cake",
            "minecraft:blue_candle_cake",
            "minecraft:brown_candle_cake",
            "minecraft:green_candle_cake",
            "minecraft:red_candle_cake",
            "minecraft:black_candle_cake",
            "minecraft:powder_snow",
            "minecraft:cave_vines",
            "minecraft:cave_vines_plant",
            "minecraft:big_dripleaf_stem",
            "minecraft:potted_azalea_bush",
            "minecraft:potted_flowering_azalea_bush"
        ]},
        "obj-com-volmit-iris-engine-object-irispyramid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "baseWidth": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "baseWidth\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irissphere": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "radius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "radius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "erzspawners": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisravineplacer": {"anyOf": [
            {
                "description": "Translate objects",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per chunk/fork basis\n   \nInteger\n\n    \n* Default Value is 15\n* Minimum allowed is 1"
                    },
                    "ravine": {
                        "type": "string",
                        "minLength": 1,
                        "$ref": "#/definitions/erzravines",
                        "description": "ravine\nThe ravine to place\n   \nIris Ravine\n\n* Minimum Length allowed is 1\nMust be a valid ravines (use ctrl+space for auto complete!)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-engine-object-studiomode": {"oneOf": [
            {
                "const": "NORMAL",
                "description": "No Description for NORMAL"
            },
            {
                "const": "BIOME_BUFFET_1x1",
                "description": "No Description for BIOME_BUFFET_1x1"
            },
            {
                "const": "BIOME_BUFFET_3x3",
                "description": "No Description for BIOME_BUFFET_3x3"
            },
            {
                "const": "BIOME_BUFFET_5x5",
                "description": "No Description for BIOME_BUFFET_5x5"
            },
            {
                "const": "BIOME_BUFFET_9x9",
                "description": "No Description for BIOME_BUFFET_9x9"
            },
            {
                "const": "BIOME_BUFFET_18x18",
                "description": "No Description for BIOME_BUFFET_18x18"
            },
            {
                "const": "BIOME_BUFFET_36x36",
                "description": "No Description for BIOME_BUFFET_36x36"
            },
            {
                "const": "REGION_BUFFET",
                "description": "No Description for REGION_BUFFET"
            },
            {
                "const": "OBJECT_BUFFET",
                "description": "No Description for OBJECT_BUFFET"
            }
        ]},
        "erzloot": {"enum": []},
        "erzravines": {"enum": []},
        "enum-snippet-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-iriselipsoid": {"anyOf": [
            {
                "description": "Represents an procedural eliptical shape",
                "type": "object",
                "properties": {
                    "rarity": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "rarity\nTypically a 1 in RARITY on a per fork basis\n   \nInteger\n\n    \n* Default Value is 1\n* Minimum allowed is 1"
                    },
                    "customBiome": {
                        "type": "string",
                        "$ref": "#/definitions/erzbiomes",
                        "description": "customBiome\nForce this cave to only generate the specified custom biome\n   \nIris Biome\n\n    \n* Default Value is \nMust be a valid biomes (use ctrl+space for auto complete!)"
                    },
                    "xRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "xRadius\nThe styled random radius for x\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "yRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "yRadius\nThe styled random radius for y\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "zRadius": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisstyledrange",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style-range",
                                "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "zRadius\nThe styled random radius for z\n   \nStyledRange (Object)\nRepresents a range styled with a custom generator\n    \nYou can instead specify \"snippet/style-range/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]},
        "oneof-enum-com-volmit-iris-util-interpolation-interpolationmethod": {"oneOf": [
            {
                "const": "NONE",
                "description": "No interpolation. Nearest Neighbor (bad for terrain, great for performance)."
            },
            {
                "const": "BILINEAR",
                "description": "Uses 4 nearby points in a square to calculate a 2d slope. Very fast but creates square artifacts. See: https://en.wikipedia.org/wiki/Bilinear_interpolation"
            },
            {
                "const": "STARCAST_3",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 3 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_6",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 6 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_9",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 9 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "STARCAST_12",
                "description": "Starcast is Iris's own creation. It uses raytrace checks to find a horizontal boundary nearby. 12 Checks in a circle. Typically starcast is used with another interpolation method. See BILINEAR_STARCAST_9 For example. Starcast is meant to 'break up' large, abrupt cliffs to make cheap interpolation smoother."
            },
            {
                "const": "BILINEAR_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "BILINEAR_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with bilinear."
            },
            {
                "const": "HERMITE_STARCAST_3",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_6",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_9",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "HERMITE_STARCAST_12",
                "description": "Uses starcast to break up the abrupt sharp cliffs, then smooths the rest out with hermite."
            },
            {
                "const": "BILINEAR_BEZIER",
                "description": "Uses bilinear but on a bezier curve. See: https://en.wikipedia.org/wiki/Bezier_curve"
            },
            {
                "const": "BILINEAR_PARAMETRIC_2",
                "description": "Uses Bilinear but with parametric curves alpha 2."
            },
            {
                "const": "BILINEAR_PARAMETRIC_4",
                "description": "Uses Bilinear but with parametric curves alpha 4."
            },
            {
                "const": "BILINEAR_PARAMETRIC_1_5",
                "description": "Uses Bilinear but with parametric curves alpha 1.5."
            },
            {
                "const": "BICUBIC",
                "description": "Bicubic noise creates 4, 4-point splines for a total of 16 checks. Bcubic can go higher than expected and lower than expected right before a large change in slope."
            },
            {
                "const": "HERMITE",
                "description": "Hermite is similar to bicubic, but faster and it can be tuned a little bit"
            },
            {
                "const": "CATMULL_ROM_SPLINE",
                "description": "Essentially bicubic with zero tension"
            },
            {
                "const": "HERMITE_TENSE",
                "description": "Essentially bicubic with max tension"
            },
            {
                "const": "HERMITE_LOOSE",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_HALF_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_POSITIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            },
            {
                "const": "HERMITE_LOOSE_FULL_NEGATIVE_BIAS",
                "description": "Hermite is similar to bicubic, this variant reduces the dimple artifacts of bicubic"
            }
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irisimagechannel": {"oneOf": [
            {
                "const": "RED",
                "description": "The red channel of the image"
            },
            {
                "const": "GREEN",
                "description": "Thge green channel of the image"
            },
            {
                "const": "BLUE",
                "description": "The blue channel of the image"
            },
            {
                "const": "SATURATION",
                "description": "The saturation as a channel of the image"
            },
            {
                "const": "HUE",
                "description": "The hue as a channel of the image"
            },
            {
                "const": "BRIGHTNESS",
                "description": "The brightness as a channel of the image"
            },
            {
                "const": "COMPOSITE_ADD_RGB",
                "description": "The composite of RGB as a channel of the image. Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_RGB",
                "description": "The composite of RGB as a channel of the image. Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_RGB",
                "description": "The composite of RGB as a channel of the image. Picks the highest channel"
            },
            {
                "const": "COMPOSITE_ADD_HSB",
                "description": "The composite of HSB as a channel of the image Takes the average channel value (adding)"
            },
            {
                "const": "COMPOSITE_MUL_HSB",
                "description": "The composite of HSB as a channel of the image Multiplies the channels"
            },
            {
                "const": "COMPOSITE_MAX_HSB",
                "description": "The composite of HSB as a channel of the image Picks the highest channel"
            },
            {
                "const": "RAW",
                "description": "The raw value as a channel (probably doesnt look very good)"
            }
        ]},
        "enum-org-bukkit-inventory-itemflag": {"enum": [
            "HIDE_ENCHANTS",
            "HIDE_ATTRIBUTES",
            "HIDE_UNBREAKABLE",
            "HIDE_DESTROYS",
            "HIDE_PLACED_ON",
            "HIDE_POTION_EFFECTS",
            "HIDE_DYE"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-irislootmode": {"oneOf": [
            {
                "const": "ADD",
                "description": "Add to the existing parent loot tables"
            },
            {
                "const": "CLEAR",
                "description": "Clear all loot tables then add this table"
            },
            {
                "const": "REPLACE",
                "description": "Replace all loot tables with this table (same as clear)"
            }
        ]},
        "erzscripts": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisgeneratorstyle": {"anyOf": [
            {
                "description": "A gen style",
                "type": "object",
                "properties": {
                    "style": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-noisestyle",
                        "description": "style\nThe chance is 1 in CHANCE per interval\n   \nNoiseStyle\nStyles of noise\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid NoiseStyle (use ctrl+space for auto complete!)"
                    },
                    "cellularFrequency": {
                        "type": "number",
                        "description": "cellularFrequency\nIf set above 0, this style will be cellularized\n   \nNumber\n\n    \n* Default Value is 0.0"
                    },
                    "cellularZoom": {
                        "type": "number",
                        "description": "cellularZoom\nCell zooms\n   \nNumber\n\n    \n* Default Value is 1.0"
                    },
                    "zoom": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "zoom\nThe zoom of this style\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "expression": {
                        "type": "string",
                        "$ref": "#/definitions/erzexpressions",
                        "description": "expression\nInstead of using the style property, use a custom expression to represent this style.\n   \nIris Expression\n\nMust be a valid expressions (use ctrl+space for auto complete!)"
                    },
                    "imageMap": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisimagemap",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-carving",
                                "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "imageMap\nUse an Image map instead of a generated value\n   \nImageMap (Object)\nRepresents an image map\n    \nYou can instead specify \"snippet/carving/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 1.0E-5,
                        "description": "multiplier\nThe Output multiplier. Only used if parent is fracture.\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 1.0E-5"
                    },
                    "axialFracturing": {
                        "type": "boolean",
                        "description": "axialFracturing\nIf set to true, each dimension will be fractured with a different order of input coordinates. This is usually 2 or 3 times slower than normal.\n   \nBoolean\n\n    \n* Default Value is a default object (create this object to see default properties)"
                    },
                    "fracture": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                            }
                        ],
                        "description": "fracture\nApply a generator to the coordinate field fed into this parent generator. I.e. Distort your generator with another generator.\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here."
                    },
                    "exponent": {
                        "type": "number",
                        "minimum": 0.01562,
                        "maximum": 64,
                        "description": "exponent\nThe exponent\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.01562\n* Maximum allowed is 64.0"
                    },
                    "cacheSize": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 8192,
                        "description": "cacheSize\nIf the cache size is set above 0, this generator will be cached\n   \nInteger\n\n    \n* Default Value is 0\n* Minimum allowed is 0\n* Maximum allowed is 8192"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-loot-registry": {"enum": []},
        "oneof-enum-com-volmit-iris-engine-object-inventoryslottype": {"oneOf": [
            {
                "const": "STORAGE",
                "description": "Typically the one you want to go with. Storage represnents most slots in inventories."
            },
            {
                "const": "FUEL",
                "description": "Used for the fuel slot in Furnaces, Blast furnaces, smokers etc."
            },
            {
                "const": "FURNACE",
                "description": "Used for the cook slot in furnaces"
            },
            {
                "const": "BLAST_FURNACE",
                "description": "Used for the cook slot in blast furnaces"
            },
            {
                "const": "SMOKER",
                "description": "Used for the cook slot in smokers"
            }
        ]},
        "enum-snippet-palette": {"enum": []},
        "obj-com-volmit-iris-util-collection-kmap": {
            "description": "",
            "type": "object",
            "properties": {}
        },
        "enum-org-bukkit-dyecolor": {"enum": [
            "WHITE",
            "ORANGE",
            "MAGENTA",
            "LIGHT_BLUE",
            "YELLOW",
            "LIME",
            "PINK",
            "GRAY",
            "LIGHT_GRAY",
            "CYAN",
            "PURPLE",
            "BLUE",
            "BROWN",
            "GREEN",
            "RED",
            "BLACK"
        ]},
        "enum-org-bukkit-attribute-attributemodifier-operation": {"enum": [
            "ADD_NUMBER",
            "ADD_SCALAR",
            "MULTIPLY_SCALAR_1"
        ]},
        "oneof-enum-com-volmit-iris-engine-object-iristreemodes": {"oneOf": [
            {
                "const": "FIRST",
                "description": "Check biome, then region, then dimension, pick the first one that has options"
            },
            {
                "const": "ALL",
                "description": "Check biome, regions, and dimensions, and pick any option from the total list"
            }
        ]},
        "erzimages": {"enum": []},
        "obj-com-volmit-iris-engine-object-irisjigsawstructureplacement": {"anyOf": [
            {
                "description": "Represents a jigsaw structure placer",
                "type": "object",
                "properties": {
                    "structure": {
                        "type": "string",
                        "$ref": "#/definitions/erzjigsaw-structures",
                        "description": "structure\nThe structure to place\n   \nIris Jigsaw Structure\n\nMust be a valid jigsaw-structures (use ctrl+space for auto complete!)"
                    },
                    "rarity": {
                        "type": "integer",
                        "description": "rarity\nThe 1 in X chance rarity\n   \nInteger\n\n    \n* Default Value is 100"
                    }
                }
            },
            {"type": "string"}
        ]},
        "enum-snippet-style-range": {"enum": []},
        "obj-com-volmit-iris-engine-object-irislootreference": {"anyOf": [
            {
                "description": "Represents a loot entry",
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string",
                        "$ref": "#/definitions/oneof-enum-com-volmit-iris-engine-object-irislootmode",
                        "description": "mode\nAdd = add on top of parent tables, Replace = clear first then add these. Clear = Remove all and dont add loot from this or parent.\n   \nLootMode\nA loot mode is used to describe what to do with the existing loot layers before adding this loot. Using ADD will simply add this table to the building list of tables (i.e. add dimension tables, region tables then biome tables). By using clear or replace, you remove the parent tables before and add just your tables.\n    \n* Default Value is a default object (create this object to see default properties)\nMust be a valid LootMode (use ctrl+space for auto complete!)"
                    },
                    "tables": {
                        "type": "array",
                        "minItems": 1,
                        "items": {"$ref": "#/definitions/erzloot"},
                        "description": "tables\nAdd loot table registries here\n   \nList<Loot>\n\n    \n* Default Value is an empty list\n* At least one entry must be defined, or just remove this list.\nMust be a valid Loot (use ctrl+space for auto complete!)"
                    },
                    "multiplier": {
                        "type": "number",
                        "minimum": 0,
                        "description": "multiplier\nIncrease the chance of loot in this area\n   \nNumber\n\n    \n* Default Value is 1.0\n* Minimum allowed is 0.0"
                    }
                }
            },
            {"type": "string"}
        ]},
        "obj-com-volmit-iris-engine-object-irisstyledrange": {"anyOf": [
            {
                "description": "Represents a range styled with a custom generator",
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number",
                        "description": "min\nThe minimum value\n   \nNumber\n\n    \n* Default Value is 16.0"
                    },
                    "max": {
                        "type": "number",
                        "description": "max\nThe maximum value\n   \nNumber\n\n    \n* Default Value is 32.0"
                    },
                    "style": {
                        "anyOf": [
                            {
                                "!required": false,
                                "type": "object",
                                "$ref": "#/definitions/obj-com-volmit-iris-engine-object-irisgeneratorstyle",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            },
                            {
                                "type": "string",
                                "$ref": "#/definitions/enum-snippet-style",
                                "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                            }
                        ],
                        "description": "style\nThe style to pick the range\n   \nGeneratorStyle (Object)\nA gen style\n    \nYou can instead specify \"snippet/style/some-name.json\" to use a snippet file instead of specifying it here.\n    \n* Default Value is a default object (create this object to see default properties)"
                    }
                }
            },
            {"type": "string"}
        ]}
    }
}
